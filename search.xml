<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>美文美句收录集（一）</title>
    <url>/2018/06/26/essays/2018-06-08-essays/</url>
    <content><![CDATA[<h1 id="其一"><a href="#其一" class="headerlink" title="其一"></a>其一</h1><p>愿你三冬暖，愿你春不寒；<br>愿你天黑有灯，下雨有伞；<br>愿你路上有两人相伴。<br>愿你所以快乐，无需假装；<br>愿你此生尽兴，赤诚善良。<br>愿时光能缓，愿故人不散；<br>愿有人陪你颠沛流离。<br>愿你惦念的人能和你道早安，<br>愿你独创的日子里不觉得孤单。<br>愿你人间走一遭，圆满了三界六道，看透了是非善恶；<br>从此福来心至，皆是逍遥。  </p>
<h1 id="其二"><a href="#其二" class="headerlink" title="其二"></a>其二</h1><p>愿你一生有山可靠，有树可栖，与心爱之人，春赏花，夏纳凉，秋登山，冬扫雪。<br>愿你在海边踏沙，有良人为伴。<br>愿你在山巅眺望云雾，有痴傻的他紧拉。<br>愿你如愿遇到命中的缘分，不早也不晚，不急也不缓。<br>愿你爱的人也恰好爱着你，愿你一生努力，一生被爱。  </p>
<h1 id="其三"><a href="#其三" class="headerlink" title="其三"></a>其三</h1><h6 id="〖帝王〗"><a href="#〖帝王〗" class="headerlink" title="〖帝王〗"></a>〖帝王〗</h6><p>待我君临天下，许你风云叱吒待你君临天下，许谁风云叱吒，桃夭三千春意阑，我已嫁与他家。  </p>
<h6 id="〖丞相〗"><a href="#〖丞相〗" class="headerlink" title="〖丞相〗"></a>〖丞相〗</h6><p>待我一人之下，许你赌书泼茶。待你一人之下，许谁赌书泼茶，只酒一杯抚琴叹，我已白首韶华。  </p>
<h6 id="〖将军〗"><a href="#〖将军〗" class="headerlink" title="〖将军〗"></a>〖将军〗</h6><p>待我功成名就，许你一世无忧。待你功成名就，许谁一世无忧，三千情思绾惆怅，我已纵马风流。  </p>
<h6 id="〖书生〗"><a href="#〖书生〗" class="headerlink" title="〖书生〗"></a>〖书生〗</h6><p>待我榜眼探花，许你桃夭灼华。待你榜眼探花，许谁桃夭灼华，此生本意逍遥游，我已青丝华发。  </p>
<h6 id="〖侠客〗"><a href="#〖侠客〗" class="headerlink" title="〖侠客〗"></a>〖侠客〗</h6><p>待我不再有她，许你耕织篱下。待你不再有她，许谁耕织篱下，十里桃花为君守，我已红颜疏花。  </p>
<h6 id="〖红颜〗"><a href="#〖红颜〗" class="headerlink" title="〖红颜〗"></a>〖红颜〗</h6><p>你说入我相思门，知我相思苦，怎知，那年花嫁，高头大马，怀中窝她，我笑声喑哑。你说青衣最无情，最是薄凉性，怎知，那年初夏，醉戏琵琶，负尽牵挂，我无声泪下。  </p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title>古剑奇谭网络版《乌诏葬歌》</title>
    <url>/2018/08/28/essays/2018-08-28-essays/</url>
    <content><![CDATA[<h1 id="《乌诏葬歌》"><a href="#《乌诏葬歌》" class="headerlink" title="《乌诏葬歌》"></a>《乌诏葬歌》</h1><p><em>上古信仰阎罗的部族流传的古老葬歌，用于葬礼上送别亲人、安抚亡魂。旋律简单、容易记忆，有一定民族的特色。</em> </p>
<h2 id="歌词正文"><a href="#歌词正文" class="headerlink" title="歌词正文"></a>歌词正文</h2><p>我父魂魄在漠北<br>我母手足在高岩<br>我儿心腹在天涯<br>我女血肉在故园  </p>
<p>我父魂魄在漠北<br>流沙走石狂风催<br>其日如煎，其月如烩，<br>漠北不可居，何日来归<br>漠北不可居，何日来归  </p>
<p>我母手足在高岩<br>再无妙手补苍天<br>其峰巍巍，其水绵绵<br>高岩不可居，何日来还<br>高岩不可居，何日来还  </p>
<p>此岸望彼岸<br>归途路漫漫<br>天心月未满<br>故人隔忘川  </p>
<p>我儿心腹在天涯<br>长天浪涌入云塔<br>魂落沉沙，身葬鱼虾<br>天涯不可居，何日来家<br>天涯不可居，何日来家  </p>
<p>我女血肉在故园<br>落花声里啼杜鹃<br>朝佩青蔓，暮枕秋兰<br>唯故园可居，何日来安<br>唯故园可居，何日来安<br>唯故园可居，何日来安<br>唯故园可居，何日来安  </p>
<p>此岸望彼岸<br>归途路漫漫<br>天心月未满<br>故人隔忘川  </p>
<p>长歌为谁传<br>天地为谁宽<br>身似寒鸦羽<br>一梦过千山  </p>
<p>归来啊~</p>
<h2 id="歌曲链接"><a href="#歌曲链接" class="headerlink" title="歌曲链接"></a>歌曲链接</h2><p><em>古剑奇谭网络版《乌诏葬歌》6分钟高清完整版：<a href="https://www.bilibili.com/video/av29726428">https://www.bilibili.com/video/av29726428</a></em></p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title>Node 学习笔记</title>
    <url>/2018/06/08/Node/2018-06-26-Node-notes/</url>
    <content><![CDATA[<h1 id="Node-学习笔记"><a href="#Node-学习笔记" class="headerlink" title="Node 学习笔记"></a>Node 学习笔记</h1><h2 id="窝·兹基·谢德"><a href="#窝·兹基·谢德" class="headerlink" title="窝·兹基·谢德"></a>窝·兹基·谢德</h2><h3 id="创建一个server服务"><a href="#创建一个server服务" class="headerlink" title="创建一个server服务"></a>创建一个server服务</h3><figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 引入http模块</span><br><span class="hljs-keyword">const</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>);<br><br><span class="hljs-comment">//创建一个http服务</span><br>http.<span class="hljs-title function_">createServer</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>)&#123;<br><br>&#125;).<span class="hljs-title function_">listen</span>(<span class="hljs-number">8088</span>, <span class="hljs-string">&quot;127.0.0.1&quot;</span>);<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&quot;服务启动成功，请访问：127.0.0.1&quot;</span>);<br></code></pre></td></tr></table></figure>


<h2 id="Node-中间件"><a href="#Node-中间件" class="headerlink" title="Node 中间件"></a>Node 中间件</h2><p>favicon的处理<br>安装依赖</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">npm install serve-favicon --save<br></code></pre></td></tr></table></figure>
<p>添加代码到server.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> favicon = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;serve-favicon&#x27;</span>);<br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title function_">favicon</span>(__dirname + <span class="hljs-string">&#x27;/favicon.ico&#x27;</span>));<br></code></pre></td></tr></table></figure>

<h3 id="自己编写中间件"><a href="#自己编写中间件" class="headerlink" title="自己编写中间件"></a>自己编写中间件</h3><p>中间件大致结构</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js">app.<span class="hljs-title function_">use</span>(<span class="hljs-title function_">xxx</span>()); <span class="hljs-comment">// xxx()可以是个匿名函数也可以是第三方中间件那样:</span><br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title function_">bodyParser</span>());<br></code></pre></td></tr></table></figure>
<p>一个打印请求时间的中间件（匿名结构）</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js">app.<span class="hljs-title function_">use</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">req, res, next</span>)&#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Time:&#x27;</span>, <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>());<br>  <span class="hljs-title function_">next</span>();<br>&#125;);<br></code></pre></td></tr></table></figure>

<h3 id="挂载中间件"><a href="#挂载中间件" class="headerlink" title="挂载中间件"></a>挂载中间件</h3><figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 挂载至 /user/:id 的中间件，任何指向 /user/:id 的请求都会执行它</span><br>app.<span class="hljs-title function_">use</span>(<span class="hljs-string">&#x27;/user/:id&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">req, res, next</span>)&#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Request Type:&#x27;</span>, req.<span class="hljs-property">method</span>);<br>  <span class="hljs-title function_">next</span>();<br>&#125;);<br></code></pre></td></tr></table></figure>
<p>也就是说只有请求开头user&#x2F;:id 才会被这个中间件处理，如果不是则会被忽略。<br>此外上述的req.method是指请求的方式例如：get,post,put,delete</p>
<h3 id="第一个Node-js程序"><a href="#第一个Node-js程序" class="headerlink" title="第一个Node.js程序"></a>第一个Node.js程序</h3><p>server.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//依赖一个http模块，相当于java的import，与C#中的using</span><br><span class="hljs-keyword">var</span> http = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;http&#x27;</span>);<br><br><span class="hljs-comment">//创建一个服务器对象</span><br>server = http.<span class="hljs-title function_">createSever</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) &#123;<br><span class="hljs-comment">//设置请求成功时响应头部的MIME为纯文本</span><br>res.<span class="hljs-title function_">writeHeader</span>(<span class="hljs-number">200</span>, &#123; <span class="hljs-string">&quot;Content-Type&quot;</span>: <span class="hljs-string">&quot;text/plain&quot;</span> &#125;);<br><br><span class="hljs-comment">//向客户端输出字符</span><br>res.<span class="hljs-title function_">end</span>(<span class="hljs-string">&quot;Hello World\n&quot;</span>);<br>&#125;)<br><br><span class="hljs-comment">//让服务器在8088端口开始运行</span><br>server.<span class="hljs-title function_">listen</span>(<span class="hljs-number">8088</span>, <span class="hljs-string">&quot;127.0.0.1);</span><br><span class="hljs-string">console.log(&quot;</span><span class="hljs-title class_">Server</span> is running at <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">8088</span><span class="hljs-string">&quot;);</span><br></code></pre></td></tr></table></figure>
<p>引入 required 模块：我们可以使用 require 指令来载入 Node.js 模块。<br>创建服务器：服务器可以监听客户端的请求，类似于TomCat、IIS、Apache 、Nginx 等 HTTP 服务器。<br>接收请求与响应请求 服务器很容易创建，客户端可以使用浏览器或终端发送 HTTP 请求，服务器接收请求后返回响应数据。</p>
<p>第一行请求（require）Node.js 自带的 http 模块，并且把它赋值给 http 变量。<br>接下来我们调用 http 模块提供的函数： createServer 。这个函数会返回 一个对象，这个对象有一个叫做 listen 的方法，这个方法有一个数值参数， 指定这个 HTTP 服务器监听的端口号。</p>
<h3 id="一个简单的Express项目"><a href="#一个简单的Express项目" class="headerlink" title="一个简单的Express项目"></a>一个简单的Express项目</h3><p>index.js</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-comment">//引入express模块</span><br><span class="hljs-keyword">var</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<br><br><span class="hljs-comment">//创建一个app对象，类似一个web应用（网站）</span><br><span class="hljs-keyword">var</span> app = <span class="hljs-title function_">express</span>();<br><br><span class="hljs-comment">//接受指定路径的请求，指定回调函数</span><br>app.<span class="hljs-title function_">get</span>(<span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) &#123;<br>  res.<span class="hljs-title function_">send</span>(<span class="hljs-string">&#x27;Hello World!&#x27;</span>);<br>&#125;);<br><br><span class="hljs-comment">//创建一个web服务器，可以认为就是web服务器对象</span><br><span class="hljs-comment">//监听9988端口，当监听成功时回调</span><br><span class="hljs-keyword">var</span> server = app.<span class="hljs-title function_">listen</span>(<span class="hljs-number">9988</span>, <span class="hljs-string">&#x27;localhost&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)&#123;<br>  <span class="hljs-keyword">var</span> host = server.<span class="hljs-title function_">address</span>().<span class="hljs-property">address</span>;<span class="hljs-comment">//地址</span><br>  <span class="hljs-keyword">var</span> port = server.<span class="hljs-title function_">address</span>().<span class="hljs-property">port</span>;<span class="hljs-comment">//端口</span><br>  <br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;应用实例，访问地址为 http://%s:%s&#x27;</span>, host, port);<br>&#125;);<br></code></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Node</tag>
        <tag>serve-favicon</tag>
        <tag>Express</tag>
        <tag>中间件</tag>
      </tags>
  </entry>
  <entry>
    <title>火影忍者疾风传OP《青鸟》</title>
    <url>/2019/01/29/essays/2019-01-29-essays/</url>
    <content><![CDATA[<h1 id="《青鸟》（《ブルーバード》）"><a href="#《青鸟》（《ブルーバード》）" class="headerlink" title="《青鸟》（《ブルーバード》）"></a>《青鸟》（《ブルーバード》）</h1><p>作曲：水野良樹<br>作词：水野良樹<br>演唱：いきものがかり（生物股长）</p>
<h2 id="歌词正文"><a href="#歌词正文" class="headerlink" title="歌词正文"></a>歌词正文</h2><ul>
<li><p>飞翔（はばた）いたら もとらないと言（い）って<br><strong>habata i tara motorana i to ii te</strong><br><em>当展翅飞翔之际 请下定决心不再回头</em>  </p>
</li>
<li><p>目指（めざ）したのは 苍（あおい）苍（あおい）あの空（そら）<br><strong>mezashitanowa a o i a o i anosora</strong><br><em>我们向往的目标 是那湛蓝湛蓝的天空</em>  </p>
</li>
<li><p>“悲（かな）しみ”はまだおぼえられず<br><strong>kanashimi wamada o bo e rarezu</strong><br><em>不曾真正理解”悲伤”的滋味</em>  </p>
</li>
<li><p>“切（せつ）なさ”は今（いま）つかみはじめた<br><strong>setsunasawa i matsukamihajimeta</strong><br><em>却已开始探索”痛苦”的含义</em>  </p>
</li>
<li><p>あなたへと抱（いだ）く この感情（かんじょう）も<br><strong>manataheto i daku konokannjyo u mo</strong><br><em>就连心中这份对你的感情</em>  </p>
</li>
<li><p>今（いま）“言叶（ことば）”にかわっていく<br><strong>i makotobanikawate i ku</strong><br><em>如今也即将渐渐凝聚成”话语”</em>  </p>
</li>
<li><p>未知（みち）なる世界（せかい）の 游迷（ゆめ）からめざめて<br><strong>michinaru sekaino yumekara mezamete</strong><br><em>从对未知世界的痴迷中豁然觉醒</em>  </p>
</li>
<li><p>この羽根（はね）をひろげ 飞（と）び立（た）つ<br><strong>konohanewohiroge tobitatsu</strong><br><em>舒展双翅 飞向八篇广阔的天空</em>  </p>
</li>
<li><p>飞翔（はばた）いたら もとらないと言（い）って<br><strong>habata i tara motorana i to i te</strong><br><em>当展翅飞翔之际 请下定决心不再回头</em>  </p>
</li>
<li><p>目指（めざ）したのは 白（しろ）い 白（しろ）いあの云（くも）<br><strong>mezashitanowa shiroi shiroi anokumo</strong><br><em>我们飞往的方向 是那雪白雪白的流云</em>  </p>
</li>
<li><p>突（つ）き拔（ぬ）けたら みつかると知（し)って<br><strong>tsukinuketara mitsukarutoshiite</strong><br><em>当冲破云层之时 你便会知晓梦之所在</em>  </p>
</li>
<li><p>振（ふ）り切（き）るほど 苍（あお）い 苍（あお）いあの空（そら）<br><strong>hurikiruhodo a o i a o i a nosora</strong><br><em>挣脱一切的来源 飞向那片湛蓝的天空</em>  </p>
</li>
<li><p>苍（あお)い苍（あお）いあの空（そら）<br><strong>a o i a o i a nosora</strong><br><em>那片湛蓝湛蓝的天空</em>  </p>
</li>
<li><p>苍（あお)い苍（あお）いあの空（そら<br><strong>a o i a o i a nosora</strong><br><em>那片湛蓝湛蓝的天空</em>  </p>
</li>
<li><p>爱想（あいそ）つきたような音（おとで）<br><strong>aisotsukitayounaotode</strong><br><em>随着一声仿佛诉说厌倦的声响</em>  </p>
</li>
<li><p>さびれた古（ふる）いまぢは坏（こわ）れた<br><strong>sabiretahurui mazawakowareta</strong><br><em>早已腐锈的陈旧门栓哐当落地</em>  </p>
</li>
<li><p>见饱（みめ）きたカゴは ほら拾（す）ててうく<br><strong>mimekitakagowa horasutete u ku</strong><br><em>让我们舍弃这早已看够的鸟笼</em>  </p>
</li>
<li><p>振（ふ）り返（かえ）ることはもうない<br><strong>hurika e rukotowamo u nai</strong><br><em>从此以后再也不必回头</em>  </p>
</li>
<li><p>高鸣（たかな）る鼓动（こどう）に呼吸（こきゅ）を共鸣（あつ）けて<br><strong>takanaru kodo u ni kokyuo atsukete</strong><br><em>让呼吸与高昂的心跳声一同鸣响</em>  </p>
</li>
<li><p>このまどを蹴（け）って 飞（と）び立（た）つ<br><strong>konomado o kete tobitatsu</strong><br><em>舒展双翅飞离这个囚禁的牢笼</em>  </p>
</li>
<li><p>かけ出（だ）したら 手（て）にできると言（い）って<br><strong>kakedashitara tenidekiruto i te</strong><br><em>当迈出步伐之际 请相信有志者事竟成</em>  </p>
</li>
<li><p>いざなうのは 远（とお）い远（とお）いあのこえ<br><strong>i zana u nowa to o i to o i a no koe</strong><br><em>遥远彼方的呼唤 那是在邀请我们前往</em>  </p>
</li>
<li><p>眩（まぶ）しすぎた あなたの手（て）も握（にぎ）って<br><strong>mabushisugita a natano temonigite</strong><br><em>面对刺眼的阳光 我愿紧紧握住你的手</em>  </p>
</li>
<li><p>求（もと）めるほど 苍（あお）い苍（あお）いあの空（そら）<br><strong>motomeruhodo a o i a o i a nosora</strong><br><em>跟随心中的渴求 飞翔那片湛蓝的天空</em>  </p>
</li>
<li><p>坠（お）ちていくと わかっていた<br><strong>o chite i kuto wakaate i ta</strong><br><em>早已明白 我们终有一天会从蓝天坠落</em>  </p>
</li>
<li><p>それでも光（ひかり）を追（お）いつづけていくよ<br><strong>soredemo hikario o i tsuduketeikuyo</strong><br><em>尽管如此 我也要继续追寻光芒的所在</em>  </p>
</li>
<li><p>飞翔（はばた）いたら もぢれないと言（い)って<br><strong>habata i tara mozarena i to ii te</strong><br><em>当展翅飞翔之际 请你明白已无法回头</em>  </p>
</li>
<li><p>探（さが）したのは 白（しろ）い白（しろ）いあの云（くも）<br><strong>zagashitanowa shiro i shiro i a nokumo</strong><br><em>我们寻觅的目标 是那雪白雪白的流云</em>  </p>
</li>
<li><p>突（つ）き拔（ぬ）けたら みつかると知（し)って<br><strong>tsukiunketara mitsukarotoshiite</strong><br><em>当冲破云层之时 你便会知晓梦之所在</em>  </p>
</li>
<li><p>振（ふ）り切（き）るほど 苍（あお）い 苍（あお）いあの空（そら）<br><strong>hurikirohodo a o i a o i a nosora</strong><br><em>愿挣脱一切束缚 飞向那片湛蓝的天空</em>  </p>
</li>
<li><p>苍（あお)い苍（あお）いあの空（そら）<br><strong>a o i a o i a nosora</strong><br><em>那片湛蓝湛蓝的天空</em>  </p>
</li>
<li><p>苍（あお)い苍（あお）いあの空（そら)<br><strong>a o i a o i a nosora</strong><br><em>那片湛蓝湛蓝的天空</em></p>
</li>
</ul>
<h2 id="歌曲相关链接"><a href="#歌曲相关链接" class="headerlink" title="歌曲相关链接"></a>歌曲相关链接</h2><p><em>某云：<a href="https://music.163.com/#/song?id=718765" data-hover="《ブルーバード》">《ブルーバード》</a></em><br><em>中文版本：<a href="https://www.bilibili.com/video/av35904542" data-hover="陈乐一 火影主题曲《青鸟》">陈乐一 火影主题曲《青鸟》</a></em>  </p>
<!-- _某云：[《ブルーバード》](https://music.163.com/#/song?id=718765)_  
_中文版本：[陈乐一 火影主题曲《青鸟》](https://www.bilibili.com/video/av35904542)_   -->]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title>美文美句收录集（二）</title>
    <url>/2018/08/17/essays/2018-08-17-essays/</url>
    <content><![CDATA[<h1 id="其一"><a href="#其一" class="headerlink" title="其一"></a>其一</h1><p>小女子不才，承蒙公子厚爱了多时。公子之心，我皆明了。公子之苦，我亦尽尝。奈何世无常，终究与公子情深缘浅，不得长相厮守一生白头。望此后遇得良人，公子且将付我心，付与他人可。祝公子平安喜乐，一生顺遂。你我，自是不必再相见了。</p>
<h3 id="附"><a href="#附" class="headerlink" title="附"></a>附</h3><p>小生不才，未得姑娘青睐，扰姑娘良久，姑娘勿怪，自此所有爱慕之意止于唇齿，匿与年华，姑娘往南走，小生往北瞧，不再打扰姑娘，今生就此别过，望姑娘日后善其身，遇良人予君欢喜城，暖色浮余生。</p>
<h1 id="其二"><a href="#其二" class="headerlink" title="其二"></a>其二</h1><p>是小女冒犯了，还望公子见谅。应当那芳菲四月是个差错，那柳絮纷飞是个梦厄，那杯酒平生是个蹉跎，公子是我的梦里岁月，梦外便没了因果。世人皆无过，是我不才，不能得公子欢喜罢了。愿公子同她夜夜流光相皎洁才是，此去一别，珍重，便不必再见了。</p>
<h1 id="其三"><a href="#其三" class="headerlink" title="其三"></a>其三</h1><p>小女子不才，承蒙公子错爱，没能与公子谈笑风生，望公子另觅良人，此经一别，自是永不相见，愿公子万水千程，一世平安。若有来生，请许我一世温柔，红妆十里，凤冠霞帔，为你所爱之人！</p>
<h1 id="其四"><a href="#其四" class="headerlink" title="其四"></a>其四</h1><p>小女子不才，承蒙公子错爱，愿公子觅得意中人，经此一别，自是永不相见，愿公子万水千程，一世平安。</p>
<h1 id="其五"><a href="#其五" class="headerlink" title="其五"></a>其五</h1><p>奴家福薄，承蒙公子抬爱。望公子止步，公子莫哀。奈何终究世事无常，情深缘浅；流水蹉跎，落花梦厄。公子阳关道，奴家且过桥，勿念今朝情谊懵懂，至此各奔西东。请公子今日付我心，付伊人，与伊平安乐，一生喜顺遂。</p>
<h1 id="其五-1"><a href="#其五-1" class="headerlink" title="其五"></a>其五</h1><p>小女子不才，不知公子早已心系别家姑娘。此经一别，自是不必相见了。 公子，以身相许于我，倒也不算委屈。 小女子无以为谢，唯有下辈子以身相许。 君王的手小女子牵了，就没想过要放开。 公子为我选发簪，我为公子绾墨发，朝朝暮暮相依偎，梳尽青丝鬓霜白。 公子手脚不净，便是身无分文。</p>
<h1 id="其六"><a href="#其六" class="headerlink" title="其六"></a>其六</h1><p>小女子不才，不知公子早已心属别家女子，此今一别，值此不必再相见了，那最后祝公子，倾城万水，一路安好！</p>
<h1 id="其七"><a href="#其七" class="headerlink" title="其七"></a>其七</h1><p>小女不才，未得先生垂怜，饶先生良多，先生勿怪。自此所有爱慕之意止于心底，逝与年华，掩于彼此。先生南往，小女南望，不再想见不予打扰，今生咫尺，盼先生早遇红袖，伴于先生，于先生添香研磨，共复余生。</p>
<h1 id="附·公子·其一"><a href="#附·公子·其一" class="headerlink" title="附·公子·其一"></a>附·公子·其一</h1><p>小生不才，与姑娘萍水相逢，却妄自恋姑娘许久。世间纵有弱水三千，偏我眼中只有姑娘一人。<br>小生不才，奈何姑娘已长发及腰，吾却功名未就。<br>小生自问，心中唯姑娘一人耳，若能与姑娘携手一生，自当视姑娘如珍宝。<br>小生不才，未能与姑娘谈笑风生，殊不知姑娘早以心系他人。<br>未能与姑娘珍重道别，所有爱恨痴缠，尽在黄粱一梦中。<br>未能共姑娘策马一生，所有思念成疾，尽在一身药骨之中。</p>
<h1 id="附·公子·其二"><a href="#附·公子·其二" class="headerlink" title="附·公子·其二"></a>附·公子·其二</h1><p>吾生良人终可觅，难得我心付她心。情深缘浅皆是非，深山清酒难自醉。</p>
<h1 id="附·公子·其三"><a href="#附·公子·其三" class="headerlink" title="附·公子·其三"></a>附·公子·其三</h1><p>小生不才，未能陪姑娘鲜衣怒马走天涯，只愿来生三生石前，奈何桥旁，再与姑娘共续前缘。</p>
]]></content>
      <categories>
        <category>随笔</category>
      </categories>
  </entry>
  <entry>
    <title>bundle 命令</title>
    <url>/2018/06/26/randomNotes/2018-06-26-bundle-cmd/</url>
    <content><![CDATA[<h1 id="Tasks-命令一览"><a href="#Tasks-命令一览" class="headerlink" title="Tasks[命令一览]"></a>Tasks[命令一览]</h1><h6 id="bundle-check"><a href="#bundle-check" class="headerlink" title="bundle check"></a>bundle check</h6><p>Checks if the dependencies listed in Gemfile are satisfied by currently installed gems<br>[检查当前安装的gem是否满足Gemfile中列出的依赖项]</p>
<h6 id="bundle-exec"><a href="#bundle-exec" class="headerlink" title="bundle exec"></a>bundle exec</h6><p>Run the command in context of the bundle<br>[在捆绑包的上下文中运行命令]</p>
<h6 id="bundle-help-TASK"><a href="#bundle-help-TASK" class="headerlink" title="bundle help [TASK]"></a>bundle help [TASK]</h6><p>Describe available tasks or one specific task<br>[描述可用的任务或一个特定的任务]</p>
<h6 id="bundle-init"><a href="#bundle-init" class="headerlink" title="bundle init"></a>bundle init</h6><p>Generates a Gemfile into the current working directory<br>[生成一个Gemfile到当前的工作目录]</p>
<h6 id="bundle-install"><a href="#bundle-install" class="headerlink" title="bundle install"></a>bundle install</h6><p>Install the current environment to the system<br>[将当前环境安装到系统]</p>
<h6 id="bundle-lock"><a href="#bundle-lock" class="headerlink" title="bundle lock"></a>bundle lock</h6><p>Checks if the dependencies listed in Gemfile are satisfied by currently installed gems<br>[将包绑定到当前的一组依赖项，包括所有的子依赖项]</p>
<h6 id="bundle-pack"><a href="#bundle-pack" class="headerlink" title="bundle pack"></a>bundle pack</h6><p>Packs all the gems to vendor&#x2F;cache<br>[将所有gems打包到vendor&#x2F;cache]</p>
<h6 id="bundle-show"><a href="#bundle-show" class="headerlink" title="bundle show"></a>bundle show</h6><p>Shows all gems that are part of the bundle<br>[显示作为捆绑包一部分的所有gems]</p>
<h6 id="bundle-unlock"><a href="#bundle-unlock" class="headerlink" title="bundle unlock"></a>bundle unlock</h6><p>Unlock the bundle. This allows gem versions to be changed<br>[解锁捆绑包。 这可以改变gem版本]</p>
<h1 id="使用说明"><a href="#使用说明" class="headerlink" title="使用说明"></a>使用说明</h1><p><code>bundle pack</code><br>这个命令可以打包你的gems到vendor&#x2F;cache目录下。然后你把项目给别的开发者，别人就可以使用：<br><code>bundle install</code><br>来安装项目依赖的gems了。</p>
<p>但是当你想把项目部署到生产环境的话，假如gems出现新版本，可能导致项目出现错误，这个时候，我们就需要锁定gem的版本。<br><code>bundle lock</code><br>这个命令会在rails的根目录下生成一个Gemfile.lock文件。类似于这样的：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">--- <br>dependencies: <br>- rails: = 3.0.0.beta<br>- sqlite3-ruby: &quot;&gt;= 0&quot;<br>- pg: &quot;&gt;= 0&quot;<br>specs: <br>- text-hyphen: <br>    version: 1.0.0<br>- builder: <br>    version: 2.1.2<br>- i18n: <br>    version: 0.3.3<br></code></pre></td></tr></table></figure>

<p>当你在Gemfile文件里增加了一个新的gem，比如“hpricot”你运行：<br><code>bundle check</code><br>会提示：You changed your Gemfile after locking. Please relock using ‘bundle unlock’<br>想修改Gemfile必须先解锁Gemfile文件：<br><code>bundle unlock</code><br>然后才能修改，修改完再锁定。<br><code>bundle install</code><br>这条命令会自动安装Gemfile里的所有gem。<br>然后我们再检测：<br><code>bundle check</code><br>提示：The Gemfile’s dependencies are satisfied<br>这就安全了。<br>然后我们可以打包了：<br><code>bundle pack</code><br>Copying .gem files into vendor&#x2F;cache<br>…</p>
<p>打包完以后，锁定我们的gems:<br><code>bundle lock</code><br>这下你就可以安全部署你的app了。</p>
]]></content>
      <categories>
        <category>随拾</category>
      </categories>
      <tags>
        <tag>Ruby</tag>
        <tag>bundle</tag>
      </tags>
  </entry>
  <entry>
    <title>Git Bash 操作</title>
    <url>/2018/06/08/Git/2018-06-26-Git-Bash/</url>
    <content><![CDATA[<h1 id="Git-Bash-操作"><a href="#Git-Bash-操作" class="headerlink" title="Git Bash 操作"></a>Git Bash 操作</h1><h2 id="Git基本常用命令如下："><a href="#Git基本常用命令如下：" class="headerlink" title="Git基本常用命令如下："></a>Git基本常用命令如下：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">mkdir：         XX (创建一个空目录 XX指目录名)<br><br>pwd：          显示当前目录的路径。<br><br>git init          把当前的目录变成可以管理的git仓库，生成隐藏.git文件。<br><br>git add XX       把xx文件添加到暂存区去。<br><br>git commit –m “XX”  提交文件 –m 后面的是注释。<br><br>git status        查看仓库状态<br><br>git diff  XX      查看XX文件修改了那些内容<br><br>git log          查看历史记录<br><br>git reset  --hard HEAD^ 或者 git reset  --hard HEAD~ 回退到上一个版本 // (如果想回退到100个版本，使用git reset –hard HEAD~100 )<br><br>cat XX         查看XX文件内容<br><br>git reflog       查看历史记录的版本号id<br><br>git checkout -- XX  把XX文件在工作区的修改全部撤销。<br><br>git rm XX          删除XX文件<br><br>git remote add origin &lt;https://github.com/tugenhua0707/testgit&gt; 关联一个远程库<br><br>git push –u(第一次要用-u 以后不需要) origin master 把当前master分支推送到远程库<br><br>git clone &lt;https://github.com/tugenhua0707/testgit&gt;  从远程库中克隆<br><br>git checkout –b dev  创建dev分支 并切换到dev分支上<br><br>git branch  查看当前所有的分支<br><br>git checkout master 切换回master分支<br><br>git merge dev    在当前的分支上合并dev分支<br><br>git branch –d dev 删除dev分支<br><br>git branch name  创建分支<br><br>git stash 把当前的工作隐藏起来 等以后恢复现场后继续工作<br><br>git stash list 查看所有被隐藏的文件列表<br><br>git stash apply 恢复被隐藏的文件，但是内容不删除<br><br>git stash drop 删除文件<br><br>git stash pop 恢复文件的同时 也删除文件<br><br>git remote 查看远程库的信息<br><br>git remote –v 查看远程库的详细信息<br><br>git push origin master  Git会把master分支推送到远程库对应的远程分支上<br></code></pre></td></tr></table></figure>

<h2 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">git init<br><br>git git add [文件名] // 添加文件到暂存区，提交当前目录全部文件文件名填&quot;.&quot;<br><br>git commit -m &#x27;内容&#x27; // 提交内容， 加[-m &#x27;内容&#x27;]为为当次提交添加注释<br><br>git status // 查看是否还有文件未提交<br><br>git diff [文件名]// 比较差异<br><br>git log //查看日志 (git log –pretty=oneline, &#x27;单行显示日志&#x27;)<br><br>git reset  --hard HEAD^ // 回退到上一个版本,如果要回退到上上个版本只需把HEAD^ 改成 HEAD^^ 以此类推,(git reset  --hard HEAD~100 , &#x27;回退到前100个版本&#x27;)<br><br>git reset  --hard [版本号] // 回退到指定版本 (git reflog, &#x27;获取版本号&#x27;)<br></code></pre></td></tr></table></figure>

<h2 id="Clone-项目"><a href="#Clone-项目" class="headerlink" title="Clone 项目"></a>Clone 项目</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">git clone git@git.oschina.net:ifengye/test.git //SSH地址<br></code></pre></td></tr></table></figure>

<h2 id="提交项目"><a href="#提交项目" class="headerlink" title="提交项目"></a>提交项目</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">git pull origin master<br>git add .<br>git commit -m &#x27;init&#x27; //init为说明文字<br>git commit --amend //查看当前log<br>git push origin master<br></code></pre></td></tr></table></figure>

<h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><p>在了解之前，先注册github账号，由于你的本地Git仓库和github仓库之间的传输是通过SSH加密的，所以需要一点设置：<br>第一步：创建SSH Key。在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果有的话，直接跳过此如下命令，如果没有的话，打开命令行，输入如下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">ssh-keygen  -t rsa –C “youremail@example.com”<br></code></pre></td></tr></table></figure>
<p>,由于我本地此前运行过一次，所以本地有，如下所示：<br class='item-img' data-src='http://www.admin10000.com/UploadFiles/Document/201410/27/20141027155323753352.PNG'><img src="http://www.admin10000.com/UploadFiles/Document/201410/27/20141027155323753352.PNG" alt="avatar"><br>id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。<br>第二步：登录github,打开” settings”中的SSH Keys页面，然后点击“Add SSH Key”,填上任意title，在Key文本框里黏贴id_rsa.pub文件的内容。<br class='item-img' data-src='http://www.admin10000.com/UploadFiles/Document/201410/27/20141027155323355322.PNG'><img src="http://www.admin10000.com/UploadFiles/Document/201410/27/20141027155323355322.PNG" alt="avatar"><br>点击 Add Key，你就应该可以看到已经添加的key。<br class='item-img' data-src='http://www.admin10000.com/UploadFiles/Document/201410/27/20141027155323592489.PNG'><img src="http://www.admin10000.com/UploadFiles/Document/201410/27/20141027155323592489.PNG" alt="avatar"></p>
<ol>
<li><p>如何添加远程库？<br>现在的情景是：我们已经在本地创建了一个Git仓库后，又想在github创建一个Git仓库，并且希望这两个仓库进行远程同步，这样github的仓库可以作为备份，又可以其他人通过该仓库来协作。<br>首先，登录github上，然后在右上角找到“create a new repo”创建一个新的仓库。如下：<br class='item-img' data-src='http://www.admin10000.com/UploadFiles/Document/201410/27/20141027155323213968.PNG'><img src="http://www.admin10000.com/UploadFiles/Document/201410/27/20141027155323213968.PNG" alt="avatar"><br>在Repository name填入testgit，其他保持默认设置，点击“Create repository”按钮，就成功地创建了一个新的Git仓库：<br class='item-img' data-src='http://www.admin10000.com/UploadFiles/Document/201410/27/20141027155323934746.PNG'><img src="http://www.admin10000.com/UploadFiles/Document/201410/27/20141027155323934746.PNG" alt="avatar"><br>目前，在GitHub上的这个testgit仓库还是空的，GitHub告诉我们，可以从这个仓库克隆出新的仓库，也可以把一个已有的本地仓库与之关联，然后，把本地仓库的内容推送到GitHub仓库。<br>现在，我们根据GitHub的提示，在本地的testgit仓库下运行命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">git remote add origin &lt;https://github.com/tugenhua0707/testgit.git&gt;<br></code></pre></td></tr></table></figure>
<p>所有的如下：<br class='item-img' data-src='http://www.admin10000.com/UploadFiles/Document/201410/27/20141027155323816495.PNG'><img src="http://www.admin10000.com/UploadFiles/Document/201410/27/20141027155323816495.PNG" alt="avatar"><br>把本地库的内容推送到远程，使用 git push命令，实际上是把当前分支master推送到远程。<br>由于远程库是空的，我们第一次推送master分支时，加上了 –u参数，Git不但会把本地的master分支内容推送的远程新的master分支，还会把本地的master分支和远程的master分支关联起来，在以后的推送或者拉取时就可以简化命令。推送成功后，可以立刻在github页面中看到远程库的内容已经和本地一模一样了，上面的要输入github的用户名和密码如下所示：   <img src="http://www.admin10000.com/UploadFiles/Document/201410/27/20141027155323652630.PNG" alt="avatar"><br>从现在起，只要本地作了提交，就可以通过如下命令：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">git push origin master<br></code></pre></td></tr></table></figure>
<p>把本地master分支的最新修改推送到github上了，现在你就拥有了真正的分布式版本库了。</p>
</li>
<li><p>如何从远程库克隆？<br>上面我们了解了先有本地库，后有远程库时候，如何关联远程库。<br>现在我们想，假如远程库有新的内容了，我想克隆到本地来 如何克隆呢？<br>首先，登录github，创建一个新的仓库，名字叫testgit2.如下：  <img src="http://www.admin10000.com/UploadFiles/Document/201410/27/20141027155323066741.PNG" alt="avatar"><br>如下，我们看到：<br class='item-img' data-src='http://www.admin10000.com/UploadFiles/Document/201410/27/20141027155323087143.PNG'><img src="http://www.admin10000.com/UploadFiles/Document/201410/27/20141027155323087143.PNG" alt="avatar"><br>现在，远程库已经准备好了，下一步是使用命令git clone克隆一个本地库了。如下所示：<br class='item-img' data-src='http://www.admin10000.com/UploadFiles/Document/201410/27/20141027155323653601.PNG'><img src="http://www.admin10000.com/UploadFiles/Document/201410/27/20141027155323653601.PNG" alt="avatar"><br>接着在我本地目录下 生成testgit2目录了，如下所示：<br class='item-img' data-src='http://www.admin10000.com/UploadFiles/Document/201410/27/20141027155323810970.PNG'><img src="http://www.admin10000.com/UploadFiles/Document/201410/27/20141027155323810970.PNG" alt="avatar"></p>
</li>
</ol>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>Git Bash</tag>
      </tags>
  </entry>
  <entry>
    <title>VS Code 快捷键（中英文对照版）</title>
    <url>/2018/07/03/randomNotes/2018-07-03-vscode/</url>
    <content><![CDATA[<h1 id="VS-Code-快捷键（中英文对照版）"><a href="#VS-Code-快捷键（中英文对照版）" class="headerlink" title="VS Code 快捷键（中英文对照版）"></a>VS Code 快捷键（中英文对照版）</h1><h3 id="vs-Code快捷键"><a href="#vs-Code快捷键" class="headerlink" title="vs Code快捷键"></a>vs Code快捷键</h3><table style="border-collapse:collapse;border-spacing:0px;color:rgb(51,51,51);font-size:14px;">
    <thead>
      <tr>
        <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
          按 Press</th>
        <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
          功能 Function</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl + Shift + P，F1</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          显示命令面板 Show Command Palette</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl + P</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          快速打开 Quick Open</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl + Shift + N</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          新窗口/实例 New window/instance</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl + Shift + W</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          关闭窗口/实例 Close window/instance</td>
      </tr>
    </tbody>
</table>

<h4 id="基础编辑-Basic-editing"><a href="#基础编辑-Basic-editing" class="headerlink" title="基础编辑 Basic editing"></a>基础编辑 Basic editing</h4><table style="border-collapse:collapse;border-spacing:0px;color:rgb(51,51,51);font-size:14px;">
    <thead>
      <tr>
        <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
          按 Press</th>
        <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
          功能 Function</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl+X</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          剪切行（空选定） Cut line (empty selection)</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl+C</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          复制行（空选定）Copy line (empty selection)</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Alt+ ↑ / ↓</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          向上/向下移动行 Move line up/down</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Shift+Alt + ↓ / ↑</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          向上/向下复制行 Copy line up/down</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl+Shift+K</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          删除行 Delete line</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl+Enter</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          在下面插入行 Insert line below</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl+Shift+Enter</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          在上面插入行 Insert line above</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl+Shift+\</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          跳到匹配的括号 Jump to matching bracket</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl+] / [</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          缩进/缩进行 Indent/outdent line</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Home</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          转到行首 Go to beginning of line</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          End</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          转到行尾 Go to end of line</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl+Home</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          转到文件开头 Go to beginning of file</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl+End</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          转到文件末尾 Go to end of file</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl+↑ / ↓</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          向上/向下滚动行 Scroll line up/down</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Alt+PgUp / PgDown</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          向上/向下滚动页面 Scroll page up/down</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl+Shift+[</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          折叠（折叠）区域 Fold (collapse) region</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl+Shift+]</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          展开（未折叠）区域 Unfold (uncollapse) region</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl+K Ctrl+[</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          折叠（未折叠）所有子区域 Fold (collapse) all subregions</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl+K Ctrl+]</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          展开（未折叠）所有子区域 Unfold (uncollapse) all subregions</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl+K Ctrl+0</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          折叠（折叠）所有区域 Fold (collapse) all regions</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl+K Ctrl+J</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          展开（未折叠）所有区域 Unfold (uncollapse) all regions</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl+K Ctrl+C</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          添加行注释 Add line comment</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl+K Ctrl+U</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          删除行注释 Remove line comment</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl+/</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          切换行注释 Toggle line comment</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Shift+Alt+A</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          切换块注释 Toggle block comment</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Alt+Z</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          切换换行 Toggle word wrap</td>
      </tr>
    </tbody>
</table>

<h4 id="导航-Navigation"><a href="#导航-Navigation" class="headerlink" title="导航 Navigation"></a>导航 Navigation</h4><table style="border-collapse:collapse;border-spacing:0px;color:rgb(51,51,51);font-size:14px;">
    <thead>
      <tr>
        <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
          按 Press</th>
        <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
          功能 Function</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl + T</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          显示所有符号 Show all Symbols</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl + G</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          转到行... Go to Line...</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl + P</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          转到文件... Go to File...</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl + Shift + O</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          转到符号... Go to Symbol...</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl + Shift + M</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          显示问题面板 Show Problems panel</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          F8</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          转到下一个错误或警告 Go to next error or warning</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Shift + F8</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          转到上一个错误或警告 Go to previous error or warning</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl + Shift + Tab</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          导航编辑器组历史记录 Navigate editor group history</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Alt + ←/→</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          返回/前进 Go back / forward</td>
      </tr>
      <tr>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          Ctrl + M</td>
        <td align="left" style="border:1px solid rgb(230,230,230);">
          切换选项卡移动焦点 Toggle Tab moves focus</td>
      </tr>
    </tbody>
</table>

<h4 id="搜索和替换-Search-and-replace"><a href="#搜索和替换-Search-and-replace" class="headerlink" title="搜索和替换 Search and replace"></a>搜索和替换 Search and replace</h4><table style="border-collapse:collapse;border-spacing:0px;color:rgb(51,51,51);font-size:14px;">
  <thead>
    <tr>
      <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
        按 Press</th>
      <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
        功能 Function</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl + F</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        查找 Find</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl + H</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        替换 Replace</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        F3 / Shift + F3</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        查找下一个/上一个 Find next/previous</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Alt + Enter</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        选择查找匹配的所有出现 Select all occurences of Find match</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl + D</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        将选择添加到下一个查找匹配 Add selection to next Find match</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl + K Ctrl + D</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        将最后一个选择移至下一个查找匹配项 Move last selection to next Find match</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Alt + C / R / W</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        切换区分大小写/正则表达式/整个词 Toggle case-sensitive / regex / whole word</td>
    </tr>
  </tbody>
</table>

<h4 id="多光标和选择-Multi-cursor-and-selection"><a href="#多光标和选择-Multi-cursor-and-selection" class="headerlink" title="多光标和选择 Multi-cursor and selection"></a>多光标和选择 Multi-cursor and selection</h4><table style="border-collapse:collapse;border-spacing:0px;color:rgb(51,51,51);font-size:14px;">
  <thead>
    <tr>
      <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
        按 Press</th>
      <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
        功能 Function</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Alt +单击</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        插入光标 Insert cursor</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl + Alt +↑/↓</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        在上/下插入光标 Insert cursor above / below</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl + U</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        撤消上一个光标操作 Undo last cursor operation</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Shift + Alt + I</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        在选定的每一行的末尾插入光标 Insert cursor at end of each line selected</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl + I</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        选择当前行 Select current line</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl + Shift + L</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        选择当前选择的所有出现 Select all occurrences of current selection</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl + F2</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        选择当前字的所有出现 Select all occurrences of current word</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Shift + Alt + →</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        展开选择 Expand selection</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Shift + Alt + ←</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        缩小选择 Shrink selection</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Shift + Alt + （拖动鼠标）</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        列（框）选择 Column (box) selection</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl + Shift + Alt +（箭头键）</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        列（框）选择 Column (box) selection</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl + Shift + Alt + PgUp / PgDown</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        列（框）选择页上/下 Column (box) selection page up/down</td>
    </tr>
  </tbody>
</table>

<h4 id="丰富的语言编辑-Rich-languages-editing"><a href="#丰富的语言编辑-Rich-languages-editing" class="headerlink" title="丰富的语言编辑 Rich languages editing"></a>丰富的语言编辑 Rich languages editing</h4><table style="border-collapse:collapse;border-spacing:0px;color:rgb(51,51,51);font-size:14px;">
  <thead>
    <tr>
      <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
        按 Press</th>
      <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
        功能 Function</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl + 空格</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        触发建议 Trigger suggestion</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl + Shift + Space</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        触发器参数提示 Trigger parameter hints</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Tab</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Emmet 展开缩写 Emmet expand abbreviation</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Shift + Alt + F</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        格式化文档 Format document</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl + K Ctrl + F</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        格式选定区域 Format selection</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        F12</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        转到定义 Go to Definition</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Alt + F12</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Peek定义 Peek Definition</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl + K F12</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        打开定义到边 Open Definition to the side</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl + .</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        快速解决 Quick Fix</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Shift + F12</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        显示引用 Show References</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        F2</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        重命名符号 Rename Symbol</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl + Shift + . /，</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        替换为下一个/上一个值 Replace with next/previous value</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl + K Ctrl + X</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        修剪尾随空格 Trim trailing whitespace</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl + K M</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        更改文件语言 Change file language</td>
    </tr>
  </tbody>
</table>

<h4 id="编辑器管理-Editor-management"><a href="#编辑器管理-Editor-management" class="headerlink" title="编辑器管理 Editor management"></a>编辑器管理 Editor management</h4><table style="border-collapse:collapse;border-spacing:0px;color:rgb(51,51,51);font-size:14px;">
  <thead>
    <tr>
      <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
        按 Press</th>
      <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
        功能 Function</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+F4, Ctrl+W</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        关闭编辑器 Close editor</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+K F</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        关闭文件夹 Close folder</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+\</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        拆分编辑器 Split editor</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+ 1 / 2 / 3</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        聚焦到第1，第2或第3编辑器组 Focus into 1st, 2nd or 3rd editor group</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+K Ctrl+ ←/→</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        聚焦到上一个/下一个编辑器组 Focus into previous/next editor group</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+Shift+PgUp / PgDown</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        向左/向右移动编辑器 Move editor left/right</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+K ← / →</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        移动活动编辑器组 Move active editor group</td>
    </tr>
  </tbody>
</table>

<h4 id="文件管理-File-management"><a href="#文件管理-File-management" class="headerlink" title="文件管理 File management"></a>文件管理 File management</h4><table style="border-collapse:collapse;border-spacing:0px;color:rgb(51,51,51);font-size:14px;">
  <thead>
    <tr>
      <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
        按 Press</th>
      <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
        功能 Function</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+N</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        新文件 New File</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+O</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        打开文件... Open File...</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+S</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        保存 Save</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+Shift+S</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        另存为... Save As...</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+K S</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        全部保存 Save All</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+F4</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        关闭 Close</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+K Ctrl+W</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        关闭所有 Close All</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+Shift+T</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        重新打开关闭的编辑器 Reopen closed editor</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+K</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        输入保持打开 Enter Keep Open</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+Tab</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        打开下一个 Open next</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+Shift+Tab</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        打开上一个 Open previous</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+K P</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        复制活动文件的路径 Copy path of active file</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+K R</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        显示资源管理器中的活动文件 Reveal active file in Explorer</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+K O</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        显示新窗口/实例中的活动文件 Show active file in new window/instance</td>
    </tr>
  </tbody>
</table>

<h4 id="显示-Display"><a href="#显示-Display" class="headerlink" title="显示 Display"></a>显示 Display</h4><table style="border-collapse:collapse;border-spacing:0px;color:rgb(51,51,51);font-size:14px;">
  <thead>
    <tr>
      <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
        按 Press</th>
      <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
        功能 Function</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        F11</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        切换全屏 Toggle full screen</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Shift+Alt+1</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        切换编辑器布局 Toggle editor layout</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+ = / -</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        放大/缩小 Zoom in/out</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+B</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        切换侧栏可见性 Toggle Sidebar visibility</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+Shift+E</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        显示浏览器/切换焦点 Show Explorer / Toggle focus</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+Shift+F</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        显示搜索 Show Search</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+Shift+G</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        显示Git Show Git</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+Shift+D</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        显示调试 Show Debug</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+Shift+X</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        显示扩展 Show Extensions</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+Shift+H</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        替换文件 Replace in files</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+Shift+J</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        切换搜索详细信息 Toggle Search details</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+Shift+C</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        打开新命令提示符/终端 Open new command prompt/terminal</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+Shift+U</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        显示输出面板 Show Output panel</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+Shift+V</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        切换Markdown预览 Toggle Markdown preview</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+K V</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        从旁边打开Markdown预览 Open Markdown preview to the side</td>
    </tr>
  </tbody>
</table>

<h4 id="调试-Debug"><a href="#调试-Debug" class="headerlink" title="调试 Debug"></a>调试 Debug</h4><table style="border-collapse:collapse;border-spacing:0px;color:rgb(51,51,51);font-size:14px;">
  <thead>
    <tr>
      <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
        按 Press</th>
      <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
        功能 Function</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        F9</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        切换断点 Toggle breakpoint</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        F5</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        开始/继续 Start/Continue</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Shift+F5</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        停止 Stop</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        F11 / Shift+F11</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        下一步/上一步 Step into/out</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        F10</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        跳过 Step over</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+K Ctrl+I</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        显示悬停 Show hover</td>
    </tr>
  </tbody>
</table>

<h4 id="集成终端-Integrated-terminal"><a href="#集成终端-Integrated-terminal" class="headerlink" title="集成终端 Integrated terminal"></a>集成终端 Integrated terminal</h4><table style="border-collapse:collapse;border-spacing:0px;color:rgb(51,51,51);font-size:14px;">
  <thead>
    <tr>
      <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
        按 Press</th>
      <th align="left" style="text-align:left;border:1px solid rgb(230,230,230);background:rgb(243,243,243);">
        功能 Function</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+`</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        显示集成终端 Show integrated terminal</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+Shift+`</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        创建新终端 Create new terminal</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+Shift+C</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        复制选定 Copy selection</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+Shift+V</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        粘贴到活动端子 Paste into active terminal</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+↑ / ↓</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        向上/向下滚动 Scroll up/down</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Shift+PgUp / PgDown</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        向上/向下滚动页面 Scroll page up/down</td>
    </tr>
    <tr>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        Ctrl+Home / End</td>
      <td align="left" style="border:1px solid rgb(230,230,230);">
        滚动到顶部/底部 Scroll to top/bottom</td>
    </tr>
  </tbody>
</table>

<hr>
<p><strong>本文转自 <a href="https://blog.csdn.net/p358278505/article/details/74221214">https://blog.csdn.net/p358278505/article/details/74221214</a>、<a href="https://segmentfault.com/a/1190000007688656">https://segmentfault.com/a/1190000007688656</a></strong></p>
]]></content>
      <categories>
        <category>随拾</category>
      </categories>
      <tags>
        <tag>vs code</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring Boot 项目搭建</title>
    <url>/2018/12/16/randomNotes/2018-12-16-SpringBoot2%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="Spring-Boot-项目搭建"><a href="#Spring-Boot-项目搭建" class="headerlink" title="Spring Boot 项目搭建"></a>Spring Boot 项目搭建</h2><p>开发环境：IntelliJ IEDA</p>
<h3 id="1-新建项目"><a href="#1-新建项目" class="headerlink" title="1.新建项目"></a>1.新建项目</h3><p class='item-img' data-src='https://i.postimg.cc/c1jdc9Wn/2018-12-16-img-01.png'><img src="https://i.postimg.cc/c1jdc9Wn/2018-12-16-img-01.png" alt="01"><br>这里直接next</p>
<p class='item-img' data-src='https://i.postimg.cc/6qDw53c0/2018-12-16-img-02.png'><img src="https://i.postimg.cc/6qDw53c0/2018-12-16-img-02.png" alt="02"><br>设置group和artifact</p>
<p class='item-img' data-src='https://i.postimg.cc/9fW2fsdv/2018-12-16-img-03.png'><img src="https://i.postimg.cc/9fW2fsdv/2018-12-16-img-03.png" alt="03"><br>DevTools顾名思义是开发工具，热更新等，lombok都知道，validation是表单验证或者说参数检查工具</p>
<p class='item-img' data-src='https://i.postimg.cc/9F7CgdXN/2018-12-16-img-04.png'><img src="https://i.postimg.cc/9F7CgdXN/2018-12-16-img-04.png" alt="04"><br>点击完成</p>
<h3 id="2-配置项目"><a href="#2-配置项目" class="headerlink" title="2.配置项目"></a>2.配置项目</h3><p>等待IDEA自动下载完成依赖后就可以开始配置项目了，项目目录结构：<br class='item-img' data-src='https://i.postimg.cc/Jz3mMRkN/2018-12-16-img-05.png'><img src="https://i.postimg.cc/Jz3mMRkN/2018-12-16-img-05.png" alt="05"></p>
<p><em>这里我将另一个项目的截图贴出来</em><br class='item-img' data-src='https://i.postimg.cc/MpJxCnvZ/2018-12-16-img-06.png'><img src="https://i.postimg.cc/MpJxCnvZ/2018-12-16-img-06.png" alt="06"><br>目录结构</p>
<p>将<code>application.properties</code>文件改名为<code>application.yml</code>，写入配置：</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">server:</span><br>  <span class="hljs-attr">port:</span> <span class="hljs-number">8080</span><br><span class="hljs-attr">spring:</span><br>  <span class="hljs-attr">http:</span><br>    <span class="hljs-attr">encoding:</span><br>      <span class="hljs-attr">enabled:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">charset:</span> <span class="hljs-string">UTF-8</span><br>      <span class="hljs-attr">force:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">datasource:</span><br>    <span class="hljs-attr">url:</span> <span class="hljs-string">jdbc:mysql://127.0.0.1:3306/design?useUnicode=true&amp;characterEncoding=UTF8&amp;serverTimezone=GMT</span><br>    <span class="hljs-attr">username:</span> <span class="hljs-string">root</span><br>    <span class="hljs-attr">password:</span> <span class="hljs-string">root</span><br>    <span class="hljs-attr">driver-class-name:</span> <span class="hljs-string">com.mysql.cj.jdbc.Driver</span><br><span class="hljs-attr">mybatis:</span><br>  <span class="hljs-attr">type-aliases-package:</span> <span class="hljs-string">com.clown.design.entity</span><br>  <span class="hljs-attr">mapper-locations:</span> <span class="hljs-string">classpath:mapper/*.xml</span><br></code></pre></td></tr></table></figure>

<p>项目名+Application SpringBoot主类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.clown.design;<br><br><span class="hljs-keyword">import</span> org.mybatis.spring.annotation.MapperScan;<br><span class="hljs-keyword">import</span> org.springframework.boot.SpringApplication;<br><span class="hljs-keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;<br><br><span class="hljs-meta">@MapperScan(basePackages = &quot;com.clown.design.dao&quot;)</span><br><span class="hljs-meta">@SpringBootApplication</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">DesignApplication</span> &#123;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        SpringApplication.run(DesignApplication.class, args);<br>    &#125;<br><br>&#125;<br></code></pre></td></tr></table></figure>

<p>Role:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.clown.design.entity;<br><span class="hljs-keyword">import</span> lombok.Data;<br><span class="hljs-meta">@Data</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Role</span> &#123;<br>    <span class="hljs-keyword">private</span> Integer id;<br>    <span class="hljs-keyword">private</span> String roleName;<br>    <span class="hljs-keyword">private</span> String passWord;<br>    <span class="hljs-keyword">private</span> Integer roleType;<br>&#125;<br></code></pre></td></tr></table></figure>

<p>IRoleDao：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.clown.design.dao;<br><span class="hljs-keyword">import</span> com.clown.design.entity.Role;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">IRoleDao</span> &#123;<br>    Role <span class="hljs-title function_">selectRoleById</span><span class="hljs-params">(Integer id)</span>;<br>&#125;<br></code></pre></td></tr></table></figure>

<p>RoleDaoMapper：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=<span class="hljs-string">&quot;1.0&quot;</span> encoding=<span class="hljs-string">&quot;UTF-8&quot;</span> ?&gt;</span><br><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">mapper</span></span><br><span class="hljs-meta">        <span class="hljs-keyword">PUBLIC</span> <span class="hljs-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span><br><span class="hljs-meta">        <span class="hljs-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">mapper</span> <span class="hljs-attr">namespace</span>=<span class="hljs-string">&quot;com.clown.design.dao.IRoleDao&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">resultMap</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;roleResult&quot;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;com.clown.design.entity.Role&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">id</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;id&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;id&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;roleName&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;roleName&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;passWord&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;passWord&quot;</span>/&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">result</span> <span class="hljs-attr">column</span>=<span class="hljs-string">&quot;roleType&quot;</span> <span class="hljs-attr">property</span>=<span class="hljs-string">&quot;roleType&quot;</span>/&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">resultMap</span>&gt;</span><br><br>    <span class="hljs-tag">&lt;<span class="hljs-name">select</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;selectRoleById&quot;</span> <span class="hljs-attr">parameterType</span>=<span class="hljs-string">&quot;Integer&quot;</span> <span class="hljs-attr">resultType</span>=<span class="hljs-string">&quot;com.clown.design.entity.Role&quot;</span>&gt;</span><br>        SELECT * FROM role WHERE id = #&#123;id&#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">select</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">mapper</span>&gt;</span><br></code></pre></td></tr></table></figure>

<p>IRoleSerivce：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.clown.design.service;<br><span class="hljs-keyword">import</span> com.clown.design.entity.Role;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">IRoleSerivce</span> &#123;<br>    Role <span class="hljs-title function_">getRoleById</span><span class="hljs-params">(Integer id)</span>;<br>&#125;<br></code></pre></td></tr></table></figure>

<p>RoleServiceImpl：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.clown.design.service.impl;<br><span class="hljs-keyword">import</span> com.clown.design.dao.IRoleDao;<br><span class="hljs-keyword">import</span> com.clown.design.entity.Role;<br><span class="hljs-keyword">import</span> com.clown.design.service.IRoleSerivce;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.stereotype.Service;<br><span class="hljs-meta">@Service</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RoleServiceImpl</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">IRoleSerivce</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> IRoleDao roleDao;<br>    <span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> Role <span class="hljs-title function_">getRoleById</span><span class="hljs-params">(Integer id)</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.roleDao.selectRoleById(id);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>

<p>RoleController：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">package</span> com.clown.design.controller;<br><span class="hljs-keyword">import</span> com.clown.design.entity.Role;<br><span class="hljs-keyword">import</span> com.clown.design.service.IRoleSerivce;<br><span class="hljs-keyword">import</span> org.springframework.beans.factory.annotation.Autowired;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.CrossOrigin;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RequestMethod;<br><span class="hljs-keyword">import</span> org.springframework.web.bind.annotation.RestController;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletRequest;<br><span class="hljs-keyword">import</span> javax.servlet.http.HttpServletResponse;<br><span class="hljs-keyword">import</span> java.io.IOException;<br><span class="hljs-keyword">import</span> java.util.HashMap;<br><span class="hljs-keyword">import</span> java.util.Map;<br><span class="hljs-meta">@CrossOrigin</span><br><span class="hljs-meta">@RestController</span><br><span class="hljs-meta">@RequestMapping(&quot;/role&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">RoleController</span> &#123;<br>    <span class="hljs-meta">@Autowired</span><br>    <span class="hljs-keyword">private</span> IRoleSerivce roleSerivce;<br>    <span class="hljs-meta">@RequestMapping(value = &quot;/getRoleById&quot;, method = RequestMethod.GET)</span><br>    <span class="hljs-keyword">public</span> Map&lt;String, Object&gt; <span class="hljs-title function_">getRoleById</span><span class="hljs-params">(HttpServletRequest request, HttpServletResponse response, Role role)</span> <span class="hljs-keyword">throws</span> IOException &#123;<br>        Map&lt;String, Object&gt; map = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;();<br>        map.put(<span class="hljs-string">&quot;data&quot;</span>, <span class="hljs-built_in">this</span>.roleSerivce.getRoleById(role.getId()));<br>        <span class="hljs-keyword">return</span> map;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>随拾</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>SSM</tag>
        <tag>Spring</tag>
        <tag>Spring Boot</tag>
      </tags>
  </entry>
  <entry>
    <title>小写金额转大写</title>
    <url>/2018/09/07/randomNotes/2018-09-07-changeZN/</url>
    <content><![CDATA[<h1 id="小写金额转大写"><a href="#小写金额转大写" class="headerlink" title="小写金额转大写"></a>小写金额转大写</h1><h3 id="传统方式"><a href="#传统方式" class="headerlink" title="传统方式"></a>传统方式</h3><p>代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">changeZN</span>(<span class="hljs-params">num</span>)&#123;<br><br>  <span class="hljs-keyword">let</span> charList=[<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;壹&#x27;</span>, <span class="hljs-string">&#x27;贰&#x27;</span>, <span class="hljs-string">&#x27;叁&#x27;</span>, <span class="hljs-string">&#x27;肆&#x27;</span>,<span class="hljs-string">&#x27;伍&#x27;</span>, <span class="hljs-string">&#x27;陆&#x27;</span>, <span class="hljs-string">&#x27;柒&#x27;</span>, <span class="hljs-string">&#x27;捌&#x27;</span>, <span class="hljs-string">&#x27;玖&#x27;</span>];<br>  <span class="hljs-keyword">let</span> lowUnitList= [<span class="hljs-string">&#x27;千&#x27;</span>,<span class="hljs-string">&#x27;百&#x27;</span>,<span class="hljs-string">&#x27;拾&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>];<br><br>  <span class="hljs-comment">// let num=&#x27;0&#x27;;</span><br>  num=num.<span class="hljs-title function_">padStart</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(num.<span class="hljs-property">length</span>/<span class="hljs-number">8</span>)*<span class="hljs-number">8</span>,<span class="hljs-number">0</span>);<br>  <span class="hljs-keyword">let</span> len=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(num.<span class="hljs-property">length</span>/<span class="hljs-number">8</span>);<br>  <span class="hljs-keyword">let</span> numSlice=[];<br><br>  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;len;i++)&#123;<br>    numSlice.<span class="hljs-title function_">push</span>(num.<span class="hljs-title function_">slice</span>(i*<span class="hljs-number">8</span>,(i+<span class="hljs-number">1</span>)*<span class="hljs-number">8</span>))<br>  &#125;<br><br>  <span class="hljs-keyword">let</span> allList=[];<br><br>  <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> k=<span class="hljs-number">0</span>;k&lt;len;k++)&#123;<br><br>    <span class="hljs-keyword">let</span> num=numSlice[k];<br>    num=num.<span class="hljs-title function_">padStart</span>(<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(num.<span class="hljs-property">length</span>/<span class="hljs-number">4</span>)*<span class="hljs-number">4</span>,<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">let</span> unitSlice=[];<br>    <span class="hljs-keyword">let</span> unitLen=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(num.<span class="hljs-property">length</span>/<span class="hljs-number">4</span>);<br>    <span class="hljs-keyword">let</span> uintInteger=<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>(num/(<span class="hljs-number">10</span>**<span class="hljs-number">4</span>));<br>    <span class="hljs-keyword">let</span> unitMod=num%(<span class="hljs-number">10</span>**<span class="hljs-number">4</span>);<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> n=<span class="hljs-number">0</span>;n&lt;unitLen;n++)&#123;<br>      unitSlice.<span class="hljs-title function_">push</span>(num.<span class="hljs-title function_">slice</span>(n*<span class="hljs-number">4</span>,(n+<span class="hljs-number">1</span>)*<span class="hljs-number">4</span>))<br>    &#125;<br><br>    <span class="hljs-keyword">let</span> charNumList=[]<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i=<span class="hljs-number">0</span>;i&lt;unitSlice.<span class="hljs-property">length</span>;i++)&#123;<br>      <span class="hljs-keyword">let</span> charNum=<span class="hljs-string">&#x27;&#x27;</span><br>      <span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> j=<span class="hljs-number">0</span>;j&lt;unitSlice[i].<span class="hljs-property">length</span>;j++)&#123;<br>        <span class="hljs-keyword">if</span>(unitSlice[i][j]!==<span class="hljs-string">&#x27;0&#x27;</span>)&#123;<br>          charNum+=charList[unitSlice[i][j]]+lowUnitList[j]<br>        &#125;<br>        <span class="hljs-keyword">else</span>&#123;<br>          charNum+=<span class="hljs-number">0</span><br>        &#125;<br>        <br>      &#125;<br>      charNumList.<span class="hljs-title function_">push</span>(charNum)<br>    &#125;<br><br>    allList.<span class="hljs-title function_">push</span>(charNumList.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;万&#x27;</span>)+(k===len-<span class="hljs-number">1</span>?<span class="hljs-string">&#x27;元&#x27;</span>:<span class="hljs-string">&#x27;亿&#x27;</span>));<br>  <br>  &#125;<br>  <span class="hljs-keyword">return</span> allList.<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;&#x27;</span>)<br>    .<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/^(0&#123;4&#125;[&#x27;千百拾万亿元&#x27;])+$/</span>,<span class="hljs-string">&#x27;零元&#x27;</span>)<br>    .<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/^(0+[&#x27;千百拾万亿&#x27;]?)+/</span>,<span class="hljs-string">&#x27;&#x27;</span>)<br>    .<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/0&#123;4,&#125;[&#x27;千百拾万&#x27;]/g</span>,<span class="hljs-string">&#x27;&#x27;</span>)<br>    .<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/0&#123;1,4&#125;([&#x27;千百拾万亿元&#x27;])/g</span>,<span class="hljs-string">&quot;$1&quot;</span>)<br>    .<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/0&#123;1,3&#125;[&#x27;千百拾万&#x27;]?/g</span>,<span class="hljs-string">&#x27;零&#x27;</span>)<br>&#125;<br></code></pre></td></tr></table></figure>

<p>运行结果：  </p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-title function_">changeZN</span>(<span class="hljs-string">&#x27;100869778&#x27;</span>));<br><span class="hljs-comment">// 壹亿零捌拾陆万玖千柒百柒拾捌元</span><br></code></pre></td></tr></table></figure>

<h3 id="ES6-node-12"><a href="#ES6-node-12" class="headerlink" title="ES6(node 12)"></a>ES6(node 12)</h3><p>代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">changeZN</span>(<span class="hljs-params">num</span>)&#123;<br>  <span class="hljs-keyword">const</span> charList=[<span class="hljs-number">0</span>, <span class="hljs-string">&#x27;壹&#x27;</span>, <span class="hljs-string">&#x27;贰&#x27;</span>, <span class="hljs-string">&#x27;叁&#x27;</span>, <span class="hljs-string">&#x27;肆&#x27;</span>,<span class="hljs-string">&#x27;伍&#x27;</span>, <span class="hljs-string">&#x27;陆&#x27;</span>, <span class="hljs-string">&#x27;柒&#x27;</span>, <span class="hljs-string">&#x27;捌&#x27;</span>, <span class="hljs-string">&#x27;玖&#x27;</span>];<br>  <span class="hljs-keyword">const</span> lowUnitList= [<span class="hljs-string">&#x27;千&#x27;</span>,<span class="hljs-string">&#x27;百&#x27;</span>,<span class="hljs-string">&#x27;拾&#x27;</span>,<span class="hljs-string">&#x27;&#x27;</span>];<br>  <span class="hljs-keyword">let</span> len =<span class="hljs-title class_">Math</span>.<span class="hljs-title function_">ceil</span>(num.<span class="hljs-property">length</span>/<span class="hljs-number">8</span>);<br>  <span class="hljs-keyword">let</span> numSlice=num<br>  .<span class="hljs-title function_">padStart</span>(len*<span class="hljs-number">8</span>,<span class="hljs-number">0</span>)<br>  .<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/\B(?=(?:\d&#123;8&#125;)+(?!\d))/g</span>,<span class="hljs-string">&quot;,亿,&quot;</span>)<br>  .<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;,&quot;</span>)<br>  .<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">s</span>=&gt;</span>(<br>      s<br>      .<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/\B(?=(?:\d&#123;4&#125;)+(?!\d))/</span>,<span class="hljs-string">&quot;,万,&quot;</span>)<br>      .<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;,&quot;</span>)<br>      .<span class="hljs-title function_">map</span>(<span class="hljs-function">(<span class="hljs-params">n</span>)=&gt;</span>&#123;<br>        <span class="hljs-keyword">if</span>(<span class="hljs-regexp">/^\d&#123;4&#125;$/</span>.<span class="hljs-title function_">test</span>(n)&amp;&amp;n!==<span class="hljs-string">&quot;0000&quot;</span>)&#123;<br>            <span class="hljs-keyword">return</span> [].<span class="hljs-property">map</span>.<span class="hljs-title function_">call</span>(n,<span class="hljs-function">(<span class="hljs-params">c,i</span>)=&gt;</span>&#123;<br>                <span class="hljs-keyword">return</span> c===<span class="hljs-string">&quot;0&quot;</span>?<span class="hljs-attr">c</span>:charList[c]+lowUnitList[i]<br>            &#125;).<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">return</span> n<br>        &#125;<br>      &#125;)<br>  ))<br>  .<span class="hljs-title function_">flat</span>()<br>  .<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>)+<span class="hljs-string">&quot;元&quot;</span>;<br>  <span class="hljs-keyword">return</span> (numSlice<br>    .<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/^(0&#123;4&#125;[&#x27;万亿元&#x27;])+$/</span>,<span class="hljs-string">&#x27;零元&#x27;</span>)<br>    .<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/(^(0+[&#x27;万亿&#x27;]?)+)|(0&#123;4&#125;[&#x27;万&#x27;])/g</span>,<span class="hljs-string">&#x27;&#x27;</span>)<br>    .<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/0&#123;1,4&#125;([&#x27;万亿元&#x27;])/g</span>,<span class="hljs-string">&quot;$1&quot;</span>)<br>    .<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/0&#123;1,3&#125;/g</span>,<span class="hljs-string">&#x27;零&#x27;</span>)<br>  )<br>&#125;<br></code></pre></td></tr></table></figure>

<p><em>PS:以上代码来自我的同事大佬。。。</em></p>
]]></content>
      <categories>
        <category>随拾</category>
      </categories>
      <tags>
        <tag>js</tag>
      </tags>
  </entry>
  <entry>
    <title>Spring data JPA项目搭建</title>
    <url>/2018/12/16/randomNotes/2018-12-16-SpringDataJPA/</url>
    <content><![CDATA[<h2 id="Spring-data-JPA项目搭建"><a href="#Spring-data-JPA项目搭建" class="headerlink" title="Spring data JPA项目搭建"></a>Spring data JPA项目搭建</h2><p>开发环境：IntelliJ IEDA</p>
<h3 id="引导"><a href="#引导" class="headerlink" title="引导"></a>引导</h3><p>打开<a href="https://start.spring.io/">https://start.spring.io/</a><br>选择构建工具（maven或者gradle）、开发语言、SpringBoot版本<br class='item-img' data-src='https://s2.ax1x.com/2020/02/10/15cOAK.png'><img src="https://s2.ax1x.com/2020/02/10/15cOAK.png" alt="引导1"><br>配置项目元数据：Group、Artifact、Options、打包方式，java版本等…<br class='item-img' data-src='https://s2.ax1x.com/2020/02/10/15giHP.png'><img src="https://s2.ax1x.com/2020/02/10/15giHP.png" alt="引导2"><br>选择依赖（Dependencies）<br class='item-img' data-src='https://s2.ax1x.com/2020/02/10/15gcgH.png'><img src="https://s2.ax1x.com/2020/02/10/15gcgH.png" alt="引导3"><br>安装的依赖：Spring Web、Spring Data JPA、Spring Security、Lombok、Spring Boot DevTools<br>然后点击<code>Generate</code>构建，将zip压缩包下载下来</p>
<h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><p>将上一步下载的压缩包解压，导入到IDEA<br>选择<code>从外部模型导入</code>，然后选择<code>Maven</code><br class='item-img' data-src='https://s2.ax1x.com/2020/02/10/15IfNn.png'><img src="https://s2.ax1x.com/2020/02/10/15IfNn.png" alt="导入1"><br>设置项目根目录，勾选<code>Search for projects recursively</code>，其他默认，点下一步<br class='item-img' data-src='https://s2.ax1x.com/2020/02/10/15IOE9.png'><img src="https://s2.ax1x.com/2020/02/10/15IOE9.png" alt="导入2"><br>一直下一步，直到完成  </p>
]]></content>
      <categories>
        <category>随拾</category>
      </categories>
      <tags>
        <tag>java</tag>
        <tag>SSM</tag>
        <tag>Spring</tag>
        <tag>Spring data JPA</tag>
      </tags>
  </entry>
  <entry>
    <title>chrome和安卓手机浏览器不显示input radio样式的解决办法</title>
    <url>/2019/03/20/randomNotes/2019-03-20-Untitled/</url>
    <content><![CDATA[<h1 id="chrome和安卓手机浏览器不显示input-radio样式的解决办法"><a href="#chrome和安卓手机浏览器不显示input-radio样式的解决办法" class="headerlink" title="chrome和安卓手机浏览器不显示input radio样式的解决办法"></a>chrome和安卓手机浏览器不显示input radio样式的解决办法</h1><p>input radio单选在安卓手机浏览器和chrome上不显示，无法点击、选中。<br>这是由于webkit浏览器的input默认样式导致的。找到关于input的相关css，注释掉：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">input</span> &#123; -webkit-appearance:none &#125;<br></code></pre></td></tr></table></figure>
<h2 id="关于-webkit-appearance，相关wiki是这么说的"><a href="#关于-webkit-appearance，相关wiki是这么说的" class="headerlink" title="关于-webkit-appearance，相关wiki是这么说的"></a>关于<code>-webkit-appearance</code>，相关wiki是这么说的</h2><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><p>改变按钮和其他控件的外观，使其类似于原生控件。</p>
<ul>
<li>-webkit-appearance 是一个 不规范的属性（unsupported WebKit property），它没有出现在 CSS 规范草案中。</li>
<li>此属性非标准且渲染效果在不同浏览器下不同，有些属性值甚至不支持|，请慎用。</li>
</ul>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">-webkit-appearance：none | button | button-bevel ....<br></code></pre></td></tr></table></figure>
<p>默认值：none</p>
<h3 id="兼容性"><a href="#兼容性" class="headerlink" title="兼容性"></a>兼容性</h3><p>对应的firefox可以使用 -moz-appearance属性iOS 2.0及更高版本的Safari浏览器可用Android尚不明确</p>
<h3 id="取值"><a href="#取值" class="headerlink" title="取值"></a>取值</h3><table>
<thead>
<tr>
<th>-webkit-appearance取值</th>
<th>介绍</th>
<th>Chrome</th>
<th>Safari</th>
<th>iOS Safari</th>
<th>Android Browser</th>
</tr>
</thead>
<tbody><tr>
<td>none</td>
<td>去除系统默认appearance的样式,<strong>常用于IOS下移除原生样式</strong></td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
</tr>
<tr>
<td>button</td>
<td>渲染成button的风格</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
</tr>
<tr>
<td>button-bevel</td>
<td>渲染成button-bevel的风格</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>caret</td>
<td>渲染成caret的风格</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>checkbox</td>
<td>渲染input:checkbox样式的复选框按钮</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
</tr>
<tr>
<td>listbox</td>
<td>渲染为listbox样式的复选框按钮</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
</tr>
<tr>
<td>listitem</td>
<td>渲染成listitem的风格</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>media-fullscreen-button</td>
<td>渲染成media-fullscreen-button的风格</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>media-mute-button</td>
<td>渲染成media-mute-button的风格</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>media-seek-back-button</td>
<td>渲染成media-seek-back-button的风格</td>
<td>不支持</td>
<td>支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>media-seek-forward-button</td>
<td>渲染成media-seek-forward-button的风格</td>
<td>不支持</td>
<td>支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>media-slider</td>
<td>渲染成media-slider的风格</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>media-sliderthumb</td>
<td>渲染成media-sliderthumb的风格</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>menulist</td>
<td>渲染成menulist的风格</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>menulist-button</td>
<td>渲染成menulist-button的风格</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
</tr>
<tr>
<td>menulist-text</td>
<td>渲染成menulist-text的风格</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>menulist-textfield</td>
<td>渲染成menulist-textfield的风格</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>push-button</td>
<td>渲染成push-button的风格</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
</tr>
<tr>
<td>radio</td>
<td>渲染成radio的风格</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
</tr>
<tr>
<td>searchfield</td>
<td>渲染成searchfield的风格</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
<td>支持</td>
</tr>
<tr>
<td>searchfield-cancel-button</td>
<td>渲染成searchfield-cancel-button的风格</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
<td>支持</td>
</tr>
<tr>
<td>searchfield-decoration</td>
<td>渲染成searchfield-decoration的风格</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>searchfield-results-button</td>
<td>渲染成searchfield-results-button的风格</td>
<td>不支持</td>
<td>支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>searchfield-results-decoration</td>
<td>渲染成searchfield-results-decoration的风格</td>
<td>不支持</td>
<td>支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>slider-horizontal</td>
<td>渲染成slider-horizontal的风格</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
</tr>
<tr>
<td>slider-vertical</td>
<td>渲染成slider-horizontal的风格</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
</tr>
<tr>
<td>sliderthumb-horizontal</td>
<td>渲染成sliderthumb-horizontal的风格</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
</tr>
<tr>
<td>sliderthumb-vertical</td>
<td>渲染成sliderthumb-vertical的风格</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
</tr>
<tr>
<td>square-button</td>
<td>渲染成square-button的风格</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
<td>支持</td>
</tr>
<tr>
<td>textarea</td>
<td>渲染成textarea的风格</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
<td>支持</td>
</tr>
<tr>
<td>textfield</td>
<td>渲染成textfield的风格</td>
<td>支持</td>
<td>支持</td>
<td>不支持</td>
<td>支持</td>
</tr>
<tr>
<td>scrollbarbutton-down</td>
<td>渲染成scrollbarbutton-down的风格</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>scrollbarbutton-left</td>
<td>渲染成scrollbarbutton-left的风格</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>scrollbarbutton-right</td>
<td>渲染成scrollbarbutton-right的风格</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>scrollbargripper-horizontal</td>
<td>渲染成scrollbargripper-horizontal的风格</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>scrollbargripper-vertical</td>
<td>渲染成scrollbargripper-vertical的风格</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>scrollbarthumb-horizontal</td>
<td>渲染成scrollbarthumb-horizontal的风格</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>scrollbarthumb-vertical</td>
<td>渲染成scrollbarthumb-vertical的风格</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>scrollbartrack-horizontal</td>
<td>渲染成scrollbartrack-horizontal的风格</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
<tr>
<td>scrollbartrack-vertical</td>
<td>渲染成scrollbartrack-horizontal的风格</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
<td>不支持</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>随拾</category>
      </categories>
      <tags>
        <tag>css</tag>
      </tags>
  </entry>
  <entry>
    <title>SVN命令行相关操作</title>
    <url>/2019/10/12/randomNotes/2019-10-12-SVN%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9B%B8%E5%85%B3%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h2 id="基础操作"><a href="#基础操作" class="headerlink" title="基础操作"></a>基础操作</h2><h3 id="将数据导入存储库"><a href="#将数据导入存储库" class="headerlink" title="将数据导入存储库"></a>将数据导入存储库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">svn import https://svn.example.com/repos/MyRepo/MyProject/trunk -m <span class="hljs-string">&quot;Initial project import&quot;</span><br></code></pre></td></tr></table></figure>

<h3 id="签出工作副本"><a href="#签出工作副本" class="headerlink" title="签出工作副本"></a>签出工作副本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">svn checkout https://svn.example.com/repos/MyRepo/MyProject/trunk MyWorkingCopy<br></code></pre></td></tr></table></figure>

<h3 id="更新工作副本"><a href="#更新工作副本" class="headerlink" title="更新工作副本"></a>更新工作副本</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">svn update<br></code></pre></td></tr></table></figure>

<h3 id="在本地工作副本中进行更改"><a href="#在本地工作副本中进行更改" class="headerlink" title="在本地工作副本中进行更改"></a>在本地工作副本中进行更改</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">svn commit -m <span class="hljs-string">&quot;My Descriptive Log Message&quot;</span><br></code></pre></td></tr></table></figure>

<h3 id="执行文件和目录操作"><a href="#执行文件和目录操作" class="headerlink" title="执行文件和目录操作"></a>执行文件和目录操作</h3><h4 id="添加新文件和目录"><a href="#添加新文件和目录" class="headerlink" title="添加新文件和目录"></a>添加新文件和目录</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 添加新文件到版本库</span><br>svn add filename<br><br><span class="hljs-comment"># 添加当前目录下所有php文件</span><br>svn add *.php<br><br><span class="hljs-comment"># 递归添加当前目录下的所有新文件</span><br>svn add . --no-ignore --force<br></code></pre></td></tr></table></figure>
<h4 id="复制文件和目录"><a href="#复制文件和目录" class="headerlink" title="复制文件和目录"></a>复制文件和目录</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">svn copy foo.cs bar.cs<br></code></pre></td></tr></table></figure>
<h4 id="删除文件和目录"><a href="#删除文件和目录" class="headerlink" title="删除文件和目录"></a>删除文件和目录</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">svn delete foo.cs<br></code></pre></td></tr></table></figure>
<h4 id="恢复或放弃本地更改"><a href="#恢复或放弃本地更改" class="headerlink" title="恢复或放弃本地更改"></a>恢复或放弃本地更改</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 撤销本地文件的修改（还没提交的）</span><br>svn revert test.php<br>svn revert -r 目录名<br><br><span class="hljs-comment"># 撤销目录下所有本地修改</span><br>svn revert --recursive 目录名<br></code></pre></td></tr></table></figure>

<h3 id="查看日志和改动"><a href="#查看日志和改动" class="headerlink" title="查看日志和改动"></a>查看日志和改动</h3><h4 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看指定文件的所有日志</span><br>svn <span class="hljs-built_in">log</span> test.php<br><br><span class="hljs-comment"># 查看指定版本号的日志</span><br>svn <span class="hljs-built_in">log</span> -r 100<br></code></pre></td></tr></table></figure>

<h4 id="查看改动"><a href="#查看改动" class="headerlink" title="查看改动"></a>查看改动</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看当前工作区的所有改动</span><br>svn diff<br><br><span class="hljs-comment"># 查看当前工作区test.php文件与最新版本的差异</span><br>svn diff test.php  <br><br><span class="hljs-comment"># 指定版本号比较差异</span><br>svn diff -r 200:201 test.php<br><br><span class="hljs-comment"># 查看当前工作区和版本301中bin目录的差异</span><br>svn diff -r 301 bin<br><br><span class="hljs-comment"># 显示文件的每一行最后是谁修改的（出了BUG，经常用来查这段代码是谁改的）</span><br>svn blame filename.php<br></code></pre></td></tr></table></figure>

<h3 id="查看版本库信息"><a href="#查看版本库信息" class="headerlink" title="查看版本库信息"></a>查看版本库信息</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看当前工作区的状态</span><br>svn status<br><br><span class="hljs-comment"># 查看svn信息</span><br>svn info<br><br><span class="hljs-comment"># 查看文件列表，可以指定-r查看，查看指定版本号的文件列表</span><br>svn <span class="hljs-built_in">ls</span> <br>svn <span class="hljs-built_in">ls</span> -r 100<br><br><span class="hljs-comment"># 查看指定版本的文件内容，不加版本号就是查看最新版本的</span><br>svn <span class="hljs-built_in">cat</span> test.py -r 2<br></code></pre></td></tr></table></figure>

<h3 id="清理"><a href="#清理" class="headerlink" title="清理"></a>清理</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 清理</span><br>svn cleanup<br></code></pre></td></tr></table></figure>


<h3 id="分支和标记"><a href="#分支和标记" class="headerlink" title="分支和标记"></a>分支和标记</h3><p>您应该使用<code>svn copy</code>命令创建分支和标签。当您希望项目与历史记录相关时，这是用于复制项目和存储库中项目的命令。<br><code>svn copy</code>命令用于分支，因为从技术上讲branch是复制源的副本。但是，它不是在本地文件系统上复制文件时所熟悉的普通副本。Subversion存储库中的分支称为“便宜副本”，类似于符号链接。因此，创建新分支将花费最少的时间来完成，并且在Subversion存储库中几乎不占用空间。您可以创建分支并将其用于所需的任何更改，而不考虑更改的大小和范围。</p>
<h4 id="使用直接URL到URL复制创建分支"><a href="#使用直接URL到URL复制创建分支" class="headerlink" title="使用直接URL到URL复制创建分支"></a>使用直接URL到URL复制创建分支</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">svn copy https://example.com/MyRepo/trunk https://example.com/MyRepo/branches/MyNewBranch -m <span class="hljs-string">&quot;Creating a new branch&quot;</span><br></code></pre></td></tr></table></figure>
<h4 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建分支，从主干创建一个分支保存到branches/online1.0</span><br>svn <span class="hljs-built_in">cp</span> -m <span class="hljs-string">&quot;描述内容&quot;</span> http://svnbucket.com/repos/trunk http://svnbucket.com/repos/branches/online1.0<br><br><span class="hljs-comment"># 合并主干上的最新代码到分支上</span><br><span class="hljs-built_in">cd</span> branches/online1.0<br>svn merge http://svnbucket.com/repos/trunk <br><br><span class="hljs-comment"># 分支合并到主干</span><br>svn merge --reintegrate http://svnbucket.com/repos/branches/online1.0<br></code></pre></td></tr></table></figure>
<h4 id="切换分支"><a href="#切换分支" class="headerlink" title="切换分支"></a>切换分支</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 切换当前项目到指定分支。服务器上更新新版本我们经常就用这个命令来把当前代码切换到新的分支</span><br>svn switch svn://svnbucket.com/test/branches/online1.0<br><br><span class="hljs-comment"># 重定向仓库地址到新地址</span><br>svn switch --relocate 原svn地址 新svn地址<br></code></pre></td></tr></table></figure>
<h4 id="删除分支"><a href="#删除分支" class="headerlink" title="删除分支"></a>删除分支</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 删除分支</span><br>svn <span class="hljs-built_in">rm</span> http://svnbucket.com/repos/branches/online1.0<br></code></pre></td></tr></table></figure>

<h4 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看SVN帮助</span><br>svn <span class="hljs-built_in">help</span><br><br><span class="hljs-comment"># 查看指定命令的帮助信息</span><br>svn <span class="hljs-built_in">help</span> commit<br></code></pre></td></tr></table></figure>
<hr>
<p><em>参阅官方文档：<a href="http://subversion.apache.org/quick-start">http://subversion.apache.org/quick-start</a></em><br><em>参阅掘金长者文章：<a href="https://juejin.im/post/6844903599630188552">https://juejin.im/post/6844903599630188552</a></em></p>
]]></content>
      <categories>
        <category>随拾</category>
      </categories>
      <tags>
        <tag>svn</tag>
      </tags>
  </entry>
  <entry>
    <title>关于MAC系统上向日葵等“流氓”软件的开机自启dis</title>
    <url>/2019/11/27/randomNotes/2019-11-27-%E5%85%B3%E4%BA%8EMAC%E7%B3%BB%E7%BB%9F%E4%B8%8A%E5%90%91%E6%97%A5%E8%91%B5%E7%AD%89%E2%80%9C%E6%B5%81%E6%B0%93%E2%80%9D%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AFdis/</url>
    <content><![CDATA[<h5 id="题记"><a href="#题记" class="headerlink" title="题记"></a>题记</h5><p>因为近期teamviewer遭到入侵，所以对于远控软件不得不重新选择。然后就入了向日葵的坑了…然后我就各种baidu、google，最后总算是战胜了“流氓”。  </p>
<h2 id="MAC管理开机自启的两种方式"><a href="#MAC管理开机自启的两种方式" class="headerlink" title="MAC管理开机自启的两种方式"></a>MAC管理开机自启的两种方式</h2><h4 id="系统偏好设置里的开机自启（登录项-LoginItem）"><a href="#系统偏好设置里的开机自启（登录项-LoginItem）" class="headerlink" title="系统偏好设置里的开机自启（登录项&#x2F;LoginItem）"></a>系统偏好设置里的开机自启（登录项&#x2F;LoginItem）</h4><p>这种方式最简单直观<br class='item-img' data-src='https://s2.ax1x.com/2020/02/10/15yJ9H.png'><img src="https://s2.ax1x.com/2020/02/10/15yJ9H.png" alt="系统偏好设置1"><br class='item-img' data-src='https://s2.ax1x.com/2020/02/10/15ygvn.png'><img src="https://s2.ax1x.com/2020/02/10/15ygvn.png" alt="系统偏好设置2"></p>
<h4 id="通过plist文件管理开机自启"><a href="#通过plist文件管理开机自启" class="headerlink" title="通过plist文件管理开机自启"></a>通过plist文件管理开机自启</h4><p>MAC分别有6个目录存放了开启自启的plist文件</p>
<blockquote>
<p>Library&#x2F;Preferences&#x2F; – （当前用户设置的进程）<br>~&#x2F;Library&#x2F;LaunchAgents&#x2F; – （当前用户的守护进程）<br>&#x2F;Library&#x2F;LaunchAgents&#x2F; – （管理员设置的用户进程）<br>&#x2F;Library&#x2F;LaunchDaemons&#x2F; – （管理员提供的系统守护进程）<br>&#x2F;System&#x2F;Library&#x2F;LaunchAgents&#x2F; – （系统提供的用户进程）<br>&#x2F;System&#x2F;Library&#x2F;LaunchDaemons&#x2F; – （系统提供的系统守护进程）</p>
</blockquote>
<p>这里以向日葵为例，安装了向日葵客户端和控制端后，分别在<code>/Library/LaunchAgents/</code>、<code>/Library/LaunchDaemons/</code>目录生成了4个plist文件：<br>打开终端，输入：</p>
<pre><code class="shell">open /Library/LaunchAgents
</code></pre>
<p class='item-img' data-src='https://s2.ax1x.com/2020/02/10/15ybvR.png'><img src="https://s2.ax1x.com/2020/02/10/15ybvR.png" alt="LaunchAgents文件夹"><br>使用任意文本编辑器编辑<code>com.oray.sunlogin.agent.plist</code>、<code>com.oray.sunlogin.startup.plist</code>两个文件，将Disabled改为true，将RunAtLoad改为false：<br class='item-img' data-src='https://s2.ax1x.com/2020/02/10/15yXb6.png'><img src="https://s2.ax1x.com/2020/02/10/15yXb6.png" alt="com.oray.sunlogin.agent.plist文件"><br class='item-img' data-src='https://s2.ax1x.com/2020/02/10/1561rq.png'><img src="https://s2.ax1x.com/2020/02/10/1561rq.png" alt="com.oray.sunlogin.startup.plist文件"><br>打开终端，输入：</p>
<pre><code class="shell">open /Library/LaunchDaemons
</code></pre>
<p class='item-img' data-src='https://s2.ax1x.com/2020/02/10/156sZ6.png'><img src="https://s2.ax1x.com/2020/02/10/156sZ6.png" alt="LaunchDaemons文件夹"><br>编辑<code>com.oray.sunlogin.helper.plist</code>、<code>com.oray.sunlogin.plist</code>文件，将Disabled改为true，将RunAtLoad改为false：<br class='item-img' data-src='https://s2.ax1x.com/2020/02/10/1564sI.png'><img src="https://s2.ax1x.com/2020/02/10/1564sI.png" alt="com.oray.sunlogin.helper.plist文件"><br class='item-img' data-src='https://s2.ax1x.com/2020/02/10/156bFS.png'><img src="https://s2.ax1x.com/2020/02/10/156bFS.png" alt="com.oray.sunlogin.plist文件"></p>
<p>这样，下次开机，向日葵便不会自启了。</p>
]]></content>
      <categories>
        <category>随拾</category>
      </categories>
      <tags>
        <tag>macOS</tag>
      </tags>
  </entry>
  <entry>
    <title>MAC系统Nginx安装与操作</title>
    <url>/2020/01/17/randomNotes/2020-01-17-MAC%E7%B3%BB%E7%BB%9FNginx%E5%AE%89%E8%A3%85%E4%B8%8E%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="安装Command-Line-tools"><a href="#安装Command-Line-tools" class="headerlink" title="安装Command Line tools"></a>安装Command Line tools</h4><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">xcode-select --install<br></code></pre></td></tr></table></figure>

<h4 id="安装brew命令"><a href="#安装brew命令" class="headerlink" title="安装brew命令"></a>安装brew命令</h4><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">ruby -e &quot;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&quot;<br></code></pre></td></tr></table></figure>

<h4 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h4><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">brew install nginx<br></code></pre></td></tr></table></figure>

<h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><h4 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h4><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">sudo nginx<br></code></pre></td></tr></table></figure>
<p>若提示命令不存在，则找到nginx可执行文件，比如：<code>/usr/local/bin/nginx</code><br>寻找nginx可执行文件可使用命令<code>find / -iname &quot;nginx&quot;</code>，一般bin目录下的nginx就是可执行文件<br>找到后，进入目录，执行：  </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">./nginx<br></code></pre></td></tr></table></figure>

<h4 id="重启"><a href="#重启" class="headerlink" title="重启"></a>重启</h4><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">sudo nginx -s reload<br></code></pre></td></tr></table></figure>
<p>提示找不到命令解决方法同启动</p>
<h4 id="停止"><a href="#停止" class="headerlink" title="停止"></a>停止</h4><h5 id="查询Nginx主线程"><a href="#查询Nginx主线程" class="headerlink" title="查询Nginx主线程"></a>查询Nginx主线程</h5><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">ps -el|grep nginx<br></code></pre></td></tr></table></figure>
<p class='item-img' data-src='https://s2.ax1x.com/2020/02/10/15vqtU.png'><img src="https://s2.ax1x.com/2020/02/10/15vqtU.png" alt="01"></p>
<h5 id="正常停止"><a href="#正常停止" class="headerlink" title="正常停止"></a>正常停止</h5><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">sudo kill -QUIT 进程号<br></code></pre></td></tr></table></figure>

<h5 id="快速停止"><a href="#快速停止" class="headerlink" title="快速停止"></a>快速停止</h5><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">sudo kill -TERM 进程号<br></code></pre></td></tr></table></figure>

<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="配置文件目录"><a href="#配置文件目录" class="headerlink" title="配置文件目录"></a>配置文件目录</h4><p>一般情况下，通过brew命令安装的nginx，配置文件目录在<code>/usr/local/etc/nginx/</code><br>若找不到上述目录，可以直接全局查找配置文件所在目录：<code>find / -iname &quot;nginx.conf&quot;</code><br>相关配置自行百度</p>
<h4 id="查看配置文件是否正确"><a href="#查看配置文件是否正确" class="headerlink" title="查看配置文件是否正确"></a>查看配置文件是否正确</h4><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">sudo nginx -t<br></code></pre></td></tr></table></figure>
<p>出现如下结果说明配置文件正确：<br class='item-img' data-src='https://s2.ax1x.com/2020/02/10/15xA9e.png'><img src="https://s2.ax1x.com/2020/02/10/15xA9e.png" alt="02">  </p>
]]></content>
      <categories>
        <category>随拾</category>
      </categories>
      <tags>
        <tag>macOS</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>Nginx配置反向代理并重写URL</title>
    <url>/2020/01/22/randomNotes/2020-01-22-Nginx%E9%85%8D%E7%BD%AE%E5%8F%8D%E5%90%91%E4%BB%A3%E7%90%86%E5%B9%B6%E9%87%8D%E5%86%99URL/</url>
    <content><![CDATA[<h4 id="nginx-conf"><a href="#nginx-conf" class="headerlink" title="nginx.conf"></a>nginx.conf</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs conf"># ...<br>location /api &#123;<br>  rewrite /api/(.+)$ /$1 break;<br>  proxy_pass http://localhost:3000 ;<br>  proxy_redirect off;<br>&#125;<br># ...<br></code></pre></td></tr></table></figure>
<p>访问：<code>http://localhost/api</code>，会代理到<code>http://localhost:3000</code>，<code>http://localhost:3000</code>路由中无需额外写&#x2F;api，nginx会自动重写。</p>
]]></content>
      <categories>
        <category>随拾</category>
      </categories>
      <tags>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>MAC无法开机，开机显示LOGO，无法进入系统</title>
    <url>/2020/02/14/randomNotes/2020-02-14-MAC%E6%97%A0%E6%B3%95%E5%BC%80%E6%9C%BA/</url>
    <content><![CDATA[<h2 id="题记"><a href="#题记" class="headerlink" title="题记"></a>题记</h2><p>今天作了个死，想给MAC装个双系统。结果直接翻车，安装win10的过程中失败了，然后重启直接整个电脑都垮掉。google了各种解决方法，终于是正常开机。</p>
<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>按照我的操作，然后根据我google的一些内容，初步判断问题的原因是mac硬盘记忆存储的问题。</p>
<h3 id="解决"><a href="#解决" class="headerlink" title="解决"></a>解决</h3><p>既然是硬盘记忆存储的问题，那么解决方案就是清空硬盘缓存。<br>方法如下：</p>
<h4 id="进入macOS恢复模式"><a href="#进入macOS恢复模式" class="headerlink" title="进入macOS恢复模式"></a>进入macOS恢复模式</h4><ol>
<li>开启 Mac，然后立即按住 Command (⌘) 和 R 键。</li>
<li>当您看到 Apple 标志、旋转的地球或<a href="https://support.apple.com/zh-cn/HT204156">其他启动屏幕</a>时，请松开这两个按键。</li>
<li>看到“实用工具”窗口时，启动即完成：<br class='item-img' data-src='https://support.apple.com/library/content/dam/edam/applecare/images/zh_CN/macos/highsierra/macos-high-sierra-recovery-mode-reinstall.jpg'><img src="https://support.apple.com/library/content/dam/edam/applecare/images/zh_CN/macos/highsierra/macos-high-sierra-recovery-mode-reinstall.jpg"><br><em>参考链接：<a href="https://support.apple.com/zh-cn/HT201314">https://support.apple.com/zh-cn/HT201314</a></em></li>
</ol>
<h4 id="清楚硬盘缓存"><a href="#清楚硬盘缓存" class="headerlink" title="清楚硬盘缓存"></a>清楚硬盘缓存</h4><p>在“实用工具”界面，左上角找到终端工具，在终端命令行中按如下顺序执行命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">进入缓存目录</span><br>cd /Volumes/[你的硬盘名称]/var/db/caches/opendirectory/<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">清楚缓存（将缓存文件重命名）</span><br>mv ./mbr_cache ./mar_cache-old<br></code></pre></td></tr></table></figure>
<p>然后，退出终端，退出实用工具。此时会弹出一个对话框，问是重新启动还是选择启动盘什么的。选择“选择启动盘”，然后选择安装了macOS的启动盘，重启即可。</p>
<hr>
<p>附录1：参考链接 <a href="https://www.jianshu.com/p/1bb053414f74">https://www.jianshu.com/p/1bb053414f74</a><br>附录2：Mac 的启动组合键 <a href="https://support.apple.com/zh-cn/HT201255">https://support.apple.com/zh-cn/HT201255</a></p>
]]></content>
      <categories>
        <category>随拾</category>
      </categories>
      <tags>
        <tag>MAC</tag>
      </tags>
  </entry>
  <entry>
    <title>机内码转区内码</title>
    <url>/2020/02/26/randomNotes/2020-02-26-%E6%9C%BA%E5%86%85%E7%A0%81%E8%BD%AC%E5%8C%BA%E5%86%85%E7%A0%81/</url>
    <content><![CDATA[<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> 十六进制字符串转十六进制数(v) &#123;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> v === <span class="hljs-string">&quot;string&quot;</span>) &#123;<br>    v = <span class="hljs-built_in">parseInt</span>(<span class="hljs-string">&quot;0x&quot;</span> + v);<br>  &#125;<br>  <span class="hljs-keyword">return</span> v;<br>&#125;<br><span class="hljs-keyword">function</span> 机内码转汉字(机内码) &#123;<br>  机内码 = 十六进制字符串转十六进制数(机内码);<br>  <span class="hljs-keyword">let</span> 国标码 = (机内码 - <span class="hljs-number">0x8080</span>);<br>  <span class="hljs-keyword">let</span> 区位码0x = (国标码 - <span class="hljs-number">0x2020</span>).<span class="hljs-title function_">toString</span>(<span class="hljs-number">16</span>);<br>  <span class="hljs-keyword">let</span> 区位码拆s = 区位码0x.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">x</span> =&gt;</span> x);<br>  <span class="hljs-keyword">let</span> 区位码s = [], 区 = <span class="hljs-string">&quot;&quot;</span>;<br>  区位码拆s.<span class="hljs-title function_">forEach</span>(<span class="hljs-function">(<span class="hljs-params">item, index</span>) =&gt;</span> &#123;<br>    区 = 区+item;<br>    <span class="hljs-keyword">if</span>((index+<span class="hljs-number">1</span>)%<span class="hljs-number">2</span> === <span class="hljs-number">0</span>) &#123;<br>      区位码s.<span class="hljs-title function_">push</span>(区);<br>      区 = <span class="hljs-string">&quot;&quot;</span>;<br>    &#125;<br>  &#125;);<br>  区位码s = 区位码s.<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">x</span> =&gt;</span> 十六进制字符串转十六进制数(x));<br>  <span class="hljs-keyword">return</span> 区位码s.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;&quot;</span>);<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(机内码转汉字(<span class="hljs-string">&quot;d3b2&quot;</span>));<br><span class="hljs-comment">// =&gt; 5118</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(机内码转汉字(<span class="hljs-string">&quot;bacb&quot;</span>));<br><span class="hljs-comment">// =&gt; 2643</span><br></code></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>随拾</category>
      </categories>
      <tags>
        <tag>字符编码</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo deploy后自定义域名消失</title>
    <url>/2023/07/26/randomNotes/2023-07-26-hexo%20deploy%E5%90%8E%E8%87%AA%E5%AE%9A%E4%B9%89%E5%9F%9F%E5%90%8D%E6%B6%88%E5%A4%B1/</url>
    <content><![CDATA[<h4 id="方法一（推荐）："><a href="#方法一（推荐）：" class="headerlink" title="方法一（推荐）："></a>方法一（推荐）：</h4><p>将需要上传至github的内容放在source文件夹，例如CNAME、favicon.ico、images等，这样在 hexo d 之后就不会被删除了。</p>
<h4 id="方法二：安装hexo-generator-cname插件实现永久保留"><a href="#方法二：安装hexo-generator-cname插件实现永久保留" class="headerlink" title="方法二：安装hexo-generator-cname插件实现永久保留"></a>方法二：安装<code>hexo-generator-cname</code>插件实现永久保留</h4><blockquote>
<p><a href="https://github.com/leecrossley/hexo-generator-cname">hexo-generator-cname 文档地址</a></p>
</blockquote>
<h6 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h6><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm install hexo-generator-cname --save<br></code></pre></td></tr></table></figure>

<h6 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h6><p>添加<code>hexo-generator-cname</code>到hexo配置文件<code>_config.yml</code>的<code>plugins</code>下:</p>
<figure class="highlight yml"><table><tr><td class="code"><pre><code class="hljs yml"><span class="hljs-comment"># ...</span><br><br><span class="hljs-attr">plugins:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">hexo-generator-cname</span><br><br><span class="hljs-comment"># ...</span><br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>随拾</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS3径向渐变radial-gradient实现波浪边框和内倒角</title>
    <url>/2023/07/27/randomNotes/2023-07-27-CSS3%E5%BE%84%E5%90%91%E6%B8%90%E5%8F%98radial-gradient%E5%AE%9E%E7%8E%B0%E6%B3%A2%E6%B5%AA%E8%BE%B9%E6%A1%86%E5%92%8C%E5%86%85%E5%80%92%E8%A7%92/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>实现效果：<br class='item-img' data-src='/2023/07/27/randomNotes/2023-07-27-CSS3%E5%BE%84%E5%90%91%E6%B8%90%E5%8F%98radial-gradient%E5%AE%9E%E7%8E%B0%E6%B3%A2%E6%B5%AA%E8%BE%B9%E6%A1%86%E5%92%8C%E5%86%85%E5%80%92%E8%A7%92/2183010305-5c6666d312031_fix732.webp'><img src="/2023/07/27/randomNotes/2023-07-27-CSS3%E5%BE%84%E5%90%91%E6%B8%90%E5%8F%98radial-gradient%E5%AE%9E%E7%8E%B0%E6%B3%A2%E6%B5%AA%E8%BE%B9%E6%A1%86%E5%92%8C%E5%86%85%E5%80%92%E8%A7%92/2183010305-5c6666d312031_fix732.webp"></p>
<h3 id="实现内倒角"><a href="#实现内倒角" class="headerlink" title="实现内倒角"></a>实现内倒角</h3><p>上代码，然后解释代码</p>
<figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;radial-gradient&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.radial-gradient</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">200px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">100px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">position</span>: relative;</span><br><span class="language-css">    <span class="hljs-attribute">background-image</span>: <span class="hljs-built_in">radial-gradient</span>(circle at right top, <span class="hljs-number">#fff</span>, <span class="hljs-number">#fff</span> <span class="hljs-number">10px</span>, transparent <span class="hljs-number">11px</span>),</span><br><span class="language-css">           <span class="hljs-built_in">radial-gradient</span>(circle at right bottom, <span class="hljs-number">#fff</span>, <span class="hljs-number">#fff</span> <span class="hljs-number">10px</span>, transparent <span class="hljs-number">11px</span>);</span><br><span class="language-css">    <span class="hljs-attribute">background-color</span>: red;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure>

<p>重点解释radial-gradient(circle at right top, #fff, #fff 10px, transparent 11px)这个样式是干嘛的。<br>circle表示圆形渐变，说的简单点就是画一个圆。画圆就要知道原点。<br>circle at right top 中的right top就是原点位置。这里原点位置是相对于容器的坐标。right表示容器最右边，top表示容器最上边，换言之就是右上角。<br>circle at right top 后面的#fff, #fff 10px, transparent 11px就是从原点开始各种颜色渐变的长度。<br>代码#fff, #fff 10px, transparent 11px中第一个#fff表示原点处为#fff颜色，#fff 10px表示距离原点半径10px这段距离都是#fff颜色，transparent 11px表示距离原点10px到11px都是transparent颜色，由于没有设置其他颜色，所以距离原点11px以后都是transparent颜色。<br class='item-img' data-src='/2023/07/27/randomNotes/2023-07-27-CSS3%E5%BE%84%E5%90%91%E6%B8%90%E5%8F%98radial-gradient%E5%AE%9E%E7%8E%B0%E6%B3%A2%E6%B5%AA%E8%BE%B9%E6%A1%86%E5%92%8C%E5%86%85%E5%80%92%E8%A7%92/2032995592-5c666dc1b0674_fix732.webp'><img src="/2023/07/27/randomNotes/2023-07-27-CSS3%E5%BE%84%E5%90%91%E6%B8%90%E5%8F%98radial-gradient%E5%AE%9E%E7%8E%B0%E6%B3%A2%E6%B5%AA%E8%BE%B9%E6%A1%86%E5%92%8C%E5%86%85%E5%80%92%E8%A7%92/2032995592-5c666dc1b0674_fix732.webp">  </p>
<p>总结radial-gradient(circle at right top, #fff, #fff 10px, transparent 11px),就是以容器的右上角为原点画圆，半径10px范围内是#fff颜色，半径大于10px范围内都是transparent颜色。<br>这样在右上角就形成了内倒角<br>同理 radial-gradient(circle at right bottom, #fff, #fff 10px, transparent 11px); 就不解释了。  </p>
<h3 id="实现波浪边框"><a href="#实现波浪边框" class="headerlink" title="实现波浪边框"></a>实现波浪边框</h3><p>上代码，增加一个css样式即可</p>
<figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css"><span class="hljs-selector-class">.radial-gradient</span><span class="hljs-selector-pseudo">:after</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">content</span>: <span class="hljs-string">&#x27;&#x27;</span>;</span><br><span class="language-css">    <span class="hljs-attribute">position</span>: absolute;</span><br><span class="language-css">    <span class="hljs-attribute">top</span>: <span class="hljs-number">0px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">left</span>: -<span class="hljs-number">5px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">width</span>: <span class="hljs-number">10px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;</span><br><span class="language-css">    <span class="hljs-attribute">background</span>: <span class="hljs-built_in">radial-gradient</span>(circle, <span class="hljs-number">#fff</span>, <span class="hljs-number">#fff</span> <span class="hljs-number">4px</span>, transparent <span class="hljs-number">5px</span>);</span><br><span class="language-css">    <span class="hljs-attribute">background-size</span>: <span class="hljs-number">10px</span> <span class="hljs-number">10px</span>;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br></code></pre></td></tr></table></figure>

<p>background: radial-gradient(circle, #fff, #fff 4px, transparent 5px); 此处没有 at right top字样，表示原点在容器中心位置，#fff, #fff 4px, transparent 5px，表示半径4px范围内是#fff颜色，半径4px到5px范围内是transparent颜色，半径大于5px是transparent颜色。这样就有一个直径为8px的#fff颜色的圆位于容器(这里的容器是:after)中心。<br class='item-img' data-src='/2023/07/27/randomNotes/2023-07-27-CSS3%E5%BE%84%E5%90%91%E6%B8%90%E5%8F%98radial-gradient%E5%AE%9E%E7%8E%B0%E6%B3%A2%E6%B5%AA%E8%BE%B9%E6%A1%86%E5%92%8C%E5%86%85%E5%80%92%E8%A7%92/1746955718-5c6672295123b_fix732.webp'><img src="/2023/07/27/randomNotes/2023-07-27-CSS3%E5%BE%84%E5%90%91%E6%B8%90%E5%8F%98radial-gradient%E5%AE%9E%E7%8E%B0%E6%B3%A2%E6%B5%AA%E8%BE%B9%E6%A1%86%E5%92%8C%E5%86%85%E5%80%92%E8%A7%92/1746955718-5c6672295123b_fix732.webp"><br>(背景蓝色是为了演示效果)<br>再加上background-size: 10px 10px;设置背景大小为宽10px高10px，这样就能实现多个直径为8px的#fff颜色的圆。<br class='item-img' data-src='/2023/07/27/randomNotes/2023-07-27-CSS3%E5%BE%84%E5%90%91%E6%B8%90%E5%8F%98radial-gradient%E5%AE%9E%E7%8E%B0%E6%B3%A2%E6%B5%AA%E8%BE%B9%E6%A1%86%E5%92%8C%E5%86%85%E5%80%92%E8%A7%92/1784758529-5c6672491c31c_fix732.webp'><img src="/2023/07/27/randomNotes/2023-07-27-CSS3%E5%BE%84%E5%90%91%E6%B8%90%E5%8F%98radial-gradient%E5%AE%9E%E7%8E%B0%E6%B3%A2%E6%B5%AA%E8%BE%B9%E6%A1%86%E5%92%8C%E5%86%85%E5%80%92%E8%A7%92/1784758529-5c6672491c31c_fix732.webp"><br>(背景蓝色是为了演示效果)<br>left: -5px; 向左偏移 5px，使:after只有一半在.radial-gradient容器内<br>最后附上效果图<br class='item-img' data-src='/2023/07/27/randomNotes/2023-07-27-CSS3%E5%BE%84%E5%90%91%E6%B8%90%E5%8F%98radial-gradient%E5%AE%9E%E7%8E%B0%E6%B3%A2%E6%B5%AA%E8%BE%B9%E6%A1%86%E5%92%8C%E5%86%85%E5%80%92%E8%A7%92/3166636803-5c6670b633318_fix732.webp'><img src="/2023/07/27/randomNotes/2023-07-27-CSS3%E5%BE%84%E5%90%91%E6%B8%90%E5%8F%98radial-gradient%E5%AE%9E%E7%8E%B0%E6%B3%A2%E6%B5%AA%E8%BE%B9%E6%A1%86%E5%92%8C%E5%86%85%E5%80%92%E8%A7%92/3166636803-5c6670b633318_fix732.webp"></p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><strong>实现内倒角其实是画一个#fff颜色的圆，圆只有四分之一在容器内</strong><br><strong>实现波浪边框其实是画多个#fff颜色的圆，圆只有一半在容器内</strong></p>
<p>原文地址: <a href="https://segmentfault.com/a/1190000018166421">https://segmentfault.com/a/1190000018166421</a></p>
]]></content>
      <categories>
        <category>随拾</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>css3</tag>
        <tag>radial-gradient</tag>
      </tags>
  </entry>
  <entry>
    <title>GCP最新白嫖教程</title>
    <url>/2020/02/10/randomNotes/2020-02-10-GCP%E6%9C%80%E6%96%B0%E7%99%BD%E5%AB%96%E6%95%99%E7%A8%8B/</url>
    <content><![CDATA[<h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>无非是用没开通过GCP的新账户或者没注册过的信用卡，这里选择新账户：</p>
<ol>
<li>没有开通过GCP的账户的Gmail账户(并夕夕等平台自行购买，3-6块一个吧)；</li>
<li>梯子</li>
<li>信用卡（PS：国内发行的bin为62开头的信用卡不可用）</li>
</ol>
<h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><h3 id="1-登录GCP"><a href="#1-登录GCP" class="headerlink" title="1. 登录GCP"></a>1. 登录GCP</h3><p>最好用Chrome无痕模式打开链接:<br><a href="https://console.cloud.google.com/">GCP 命令台 https://console.cloud.google.com</a><br>按照提示输入账号密码登录，注意要修改辅助邮箱为你自己的邮箱，还有修改密码</p>
<h3 id="2-填写信息试用"><a href="#2-填写信息试用" class="headerlink" title="2. 填写信息试用"></a>2. 填写信息试用</h3><p>第一次进入会让你选择地区，默认美国就好<br>左上角会显示试用邀请，点击了解详情<br class='item-img' data-src='https://s2.ax1x.com/2020/02/10/15aqGq.png'><img src="https://s2.ax1x.com/2020/02/10/15aqGq.png" alt="顶部试用邀请"><br>点击免费开始使用<br class='item-img' data-src='https://s2.ax1x.com/2020/02/10/15d9o9.png'><img src="https://s2.ax1x.com/2020/02/10/15d9o9.png" alt="免费方案"><br>地区选美国，点击继续<br class='item-img' data-src='https://s2.ax1x.com/2020/02/10/15dZLD.png'><img src="https://s2.ax1x.com/2020/02/10/15dZLD.png" alt="试用步骤2之1"><br>账户类型选择个人，信息使用美国地址生成器生成<br><a href="http://www.shenfendaquan.com/Index/index/custom_result">美国地址生成器 http://www.shenfendaquan.com/Index/index/custom_result</a><br>复制粘贴进去即可<br class='item-img' data-src='https://s2.ax1x.com/2020/02/10/15dxpt.png'><img src="https://s2.ax1x.com/2020/02/10/15dxpt.png" alt="试用步骤2之2"><br>填写信用卡信息，用户名地址最好使用真实的信用卡信息避免验证不过 <del>好像Google根本验证具体信息，反正我每次都这样填</del> ，等待信用卡预授权结束<br class='item-img' data-src='https://s2.ax1x.com/2020/02/10/15we10.png'><img src="https://s2.ax1x.com/2020/02/10/15we10.png" alt="试用步骤2之2付款方式"><br>这里先不添加成员，选择略过<br class='item-img' data-src='https://i.postimg.cc/52w1vFGv/2020-02-10-img-07.png'><img src="https://i.postimg.cc/52w1vFGv/2020-02-10-img-07.png" alt="07"><br>点击左上角的账单，就能看到香喷喷的300刀一年试用额度到账，可以愉快的开始白嫖了，至于怎么利用VPS，不是本文重点，就不多赘述了。  </p>
<h2 id="无限续杯"><a href="#无限续杯" class="headerlink" title="无限续杯"></a>无限续杯</h2><p>进入账单 - 账户管理 - 添加一位账单管理员 将旧帐号填上， 为了防止填错账号，先不要删除现在的管理员，避免添加错账号。<br class='item-img' data-src='https://i.postimg.cc/KcwyHNhB/2020-02-10-img-08.png'><img src="https://i.postimg.cc/KcwyHNhB/2020-02-10-img-08.png" alt="08"><br class='item-img' data-src='https://i.postimg.cc/Z5Ft0zBx/2020-02-10-img-09.png'><img src="https://i.postimg.cc/Z5Ft0zBx/2020-02-10-img-09.png" alt="09"><br>无痕模式打开chrome登陆旧账号，会提示就能看到有多个结算账号了，选择转至关联账号。<br class='item-img' data-src='https://i.postimg.cc/g0NCqyKw/2020-02-10-img-10.png'><img src="https://i.postimg.cc/g0NCqyKw/2020-02-10-img-10.png" alt="10"><br>修改结算账号为刚开通的邮箱账号<br class='item-img' data-src='https://i.postimg.cc/tTc88Xwp/2020-02-10-img-11.png'><img src="https://i.postimg.cc/tTc88Xwp/2020-02-10-img-11.png" alt="11"><br class='item-img' data-src='https://i.postimg.cc/HjDRs6TN/2020-02-10-img-12.png'><img src="https://i.postimg.cc/HjDRs6TN/2020-02-10-img-12.png" alt="12"><br>进入账单 - 账户管理 - 更改结算账号，选择有钱能付款的账号，避免被反撸。<br>最后点击右上角显示用户信息面板，删除新账号的，只保留旧账号就可以了，这样，新账号里面的付款信息也会一并被删除。<br><strong>以上。</strong></p>
<h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>原作者的话：薅羊毛最好不要广而告之，最后大家都没有好果汁吃。  </p>
<hr>
<p><em>原文链接：<a href="https://hexo.aragon.wang/2019/10/14/GCP%E6%9C%80%E6%96%B0%E7%99%BD%E5%AB%96%E6%95%99%E7%A8%8B/">https://hexo.aragon.wang/2019/10/14</a></em></p>
]]></content>
      <categories>
        <category>随拾</category>
      </categories>
      <tags>
        <tag>GCP</tag>
        <tag>白嫖</tag>
      </tags>
  </entry>
  <entry>
    <title>windows11家庭版升级专业版排坑记</title>
    <url>/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/</url>
    <content><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>新买的笔记本预装的是win11的家庭版，虽然是正版，但是家庭版相对专业版来说，少了 Hyper-V 和一些高级功能，于是就想自己折腾下，把他换到专业版。  </p>
<h3 id="制作PE"><a href="#制作PE" class="headerlink" title="制作PE"></a>制作PE</h3><p>安装系统的第一步，首先就是制作一个PE。<br>这里我选择的是系统总裁的U盘魔术师来制作PE，下载地址：<a href="https://www.sysceo.com/usm">https://www.sysceo.com/usm</a> ，下载v5版本就行。<br>打开U盘魔术师，制作PE有两种模式：</p>
<h4 id="1-U盘模式"><a href="#1-U盘模式" class="headerlink" title="1.U盘模式"></a>1.U盘模式</h4><p class='item-img' data-src='/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/QQ20230822104729.png'><img src="/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/QQ20230822104729.png"><br>这里我没有插入U盘，如果插入了U盘(移动硬盘)在选择设备那里选择你的U盘(移动硬盘)。然后全部默认点击一键制作即可。</p>
<h4 id="1-硬盘模式"><a href="#1-硬盘模式" class="headerlink" title="1.硬盘模式"></a>1.硬盘模式</h4><p class='item-img' data-src='/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/QQ20230822105031.png'><img src="/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/QQ20230822105031.png"><br>选择磁盘后，点击一键制作即可。</p>
<h3 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h3><p>推荐直接从官网下载镜像：<a href="https://www.microsoft.com/zh-cn/software-download/windows11">https://www.microsoft.com/zh-cn/software-download/windows11</a><br class='item-img' data-src='/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/QQ20230822105310.png'><img src="/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/QQ20230822105310.png"><br>选择Windows 11 (multi-edition ISO)，也就是多版本，然点下载。<br class='item-img' data-src='/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/QQ20230822105432.png'><img src="/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/QQ20230822105432.png"><br>选择语言，点击确认。<br class='item-img' data-src='/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/QQ20230822105512.png'><img src="/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/QQ20230822105512.png"><br>点击 <code>64-bit Download</code> 按钮下载。<br><strong>这里注意不要把镜像下载到C盘也就是系统盘，因为重装系统的时候会格式化那个盘。可以下载到别的硬盘或者直接下载到U盘(移动硬盘)</strong></p>
<h3 id="启动PE，安装系统"><a href="#启动PE，安装系统" class="headerlink" title="启动PE，安装系统"></a>启动PE，安装系统</h3><p><em>由于实际操作忘记拍照和截图了，图就先鸽了，有空再补上。。。</em><br>重启电脑，如果是硬盘模式，电脑进入系统前就会有选项，选择 <code>Usm_PE</code> 选项进入PE系统。<br>找到桌面上的安装系统程序，打开，在镜像选择那里选择之前下载好的镜像ISO文件，等待一会后在下方选择要安装的版本，这里我们选择Windows 11 专业版。然后点击安装。<br>安装好了后电脑会自动重启。  </p>
<h3 id="创建新的本地管理员用户，登录在线账号"><a href="#创建新的本地管理员用户，登录在线账号" class="headerlink" title="创建新的本地管理员用户，登录在线账号"></a>创建新的本地管理员用户，登录在线账号</h3><p>由于新安装的系统默认是使用的内置Administrator账户，这个账户是无法登录在线账户的，需要禁用它。 </p>
<h4 id="创建新的本地管理员用户"><a href="#创建新的本地管理员用户" class="headerlink" title="创建新的本地管理员用户"></a>创建新的本地管理员用户</h4><p>邮件开始找到，找到计算器管理，进入，在本地用户和组下选择用户，然后在上面的工具栏选择操作-&gt;新用户：<br class='item-img' data-src='/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/2023-08-22-111724.png'><img src="/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/2023-08-22-111724.png"><br>填写表单新增用户，取消勾选[用户下次登录时必须更改密码复选框]，点击创建：<br class='item-img' data-src='/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/2023-08-22-112007.png'><img src="/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/2023-08-22-112007.png"><br>然后回到用户界面，找到刚刚新建的用户，右键选择属性：<br class='item-img' data-src='/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/2023-08-22-112213.png'><img src="/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/2023-08-22-112213.png"><br>切换到隶属于选项卡，选择Administrators，点击确认。<br>如果没有Administrators，点击添加按钮，然后选择高级，点击立即查找，找到Administrators后选择，然后点击确定：<br class='item-img' data-src='/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/20230822112430.png'><img src="/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/20230822112430.png"><br>再次确定后，就有了Administrators用户组，选择它确定即可。</p>
<h4 id="禁用内置-Administrator-帐户"><a href="#禁用内置-Administrator-帐户" class="headerlink" title="禁用内置 Administrator 帐户"></a>禁用内置 Administrator 帐户</h4><blockquote>
<p>禁用内置账户可以参考官方文档：<a href="https://learn.microsoft.com/zh-cn/windows-hardware/manufacture/desktop/enable-and-disable-the-built-in-administrator-account?view=windows-11">https://learn.microsoft.com/zh-cn/windows-hardware/manufacture/desktop/enable-and-disable-the-built-in-administrator-account?view=windows-11</a></p>
</blockquote>
<h4 id="省流操作"><a href="#省流操作" class="headerlink" title="省流操作"></a>省流操作</h4><p>可使用以下任一方法来禁用内置 Administrator 帐户：</p>
<ul>
<li>运行 sysprep &#x2F;generalize 命令<br>运行 sysprep &#x2F;generalize 命令后，下次启动计算机时将禁用内置 Administrator 帐户。</li>
<li>使用 net user 命令<br>运行以下命令禁用 Administrator 帐户：<figure class="highlight bat"><table><tr><td class="code"><pre><code class="hljs bat"><span class="hljs-built_in">net</span> user administrator /active:no<br></code></pre></td></tr></table></figure>
完成之后重启计算机，便可以登录在线用户了。</li>
</ul>
<h3 id="激活新的Windows系统"><a href="#激活新的Windows系统" class="headerlink" title="激活新的Windows系统"></a>激活新的Windows系统</h3><p>因为之前我们的系统是家庭版，新安装的系统是专业版，之前家庭版的密钥已经无法激活专业版了，这里就需要我们手动激活。这里我采用的是kms方式激活。</p>
<h4 id="方法一：去网上找别人搭建好的kms服务器激活"><a href="#方法一：去网上找别人搭建好的kms服务器激活" class="headerlink" title="方法一：去网上找别人搭建好的kms服务器激活"></a>方法一：去网上找别人搭建好的kms服务器激活</h4><p>由于之前能用的很多kms服务器都失效了，所以这里就不贴了，自己去网上找找吧。</p>
<h4 id="方法二：自己搭建kms服务器激活"><a href="#方法二：自己搭建kms服务器激活" class="headerlink" title="方法二：自己搭建kms服务器激活"></a>方法二：自己搭建kms服务器激活</h4><p>参考Futrime大佬的文章：<a href="https://blog.futrime.com/zh-cn/p/%E8%87%AA%E5%BB%BAkms%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%BF%80%E6%B4%BBwindows/">自建kms服务器激活windows</a></p>
<blockquote>
<p>CentOS 安装Docker：<br>  首先卸载旧版本（如果有）：<br>  <figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo yum remove docker \<br></code></pre></td></tr></table></figure><br>  安装前置组件：<br>  sudo yum install -y yum-utils<br>  添加Docker CE下载仓库（使用官方源）：<br>  <figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo yum-config-manager --add-repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo<br></code></pre></td></tr></table></figure><br>  安装Docker CE：<br>  <figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo yum install docker-ce<br></code></pre></td></tr></table></figure><br>  按照Docker官方文档，还需要安装docker-ce-cli和containered.io：<br>  <figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">sudo yum install docker-ce-cli containerd.io<br></code></pre></td></tr></table></figure></p>
</blockquote>
<blockquote>
<p>docker安装镜像：<br>  <figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">docker run -d --restart always -p 1688:1688 pykmsorg/py-kms<br></code></pre></td></tr></table></figure><br>安装完镜像后记得去防火墙\安全组把服务器的1688端口开放。<br>如果命令报错请确保docker已经启动。</p>
</blockquote>
<h4 id="激活流程"><a href="#激活流程" class="headerlink" title="激活流程"></a>激活流程</h4><p>参考Sliamb大佬的文章：<a href="https://blog.03k.org/post/kms.html">KMS激活Windows&#x2F;Office口袋指南</a>  </p>
<p>打开终端、Powershell或命令提示符，以此输入以下指令：<br>经查询，win11专业版的密钥为：<code>W269N-WFGWX-YVC9B-4J6C9-T83GX</code></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">slmgr /upk<br>slmgr /ipk &lt;刚才查询到的许可证密钥&gt;<br>slmgr /skms &lt;搭建KMS服务的服务器的IP地址，本机则是127.0.0.1&gt;<br>slmgr /ato<br></code></pre></td></tr></table></figure>

<p class='item-img' data-src='/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/20230822152838.png'><img src="/2023/08/22/randomNotes/2023-08-22-windows11%E5%AE%B6%E5%BA%AD%E7%89%88%E5%8D%87%E7%BA%A7%E4%B8%93%E4%B8%9A%E7%89%88%E6%8E%92%E5%9D%91%E8%AE%B0/20230822152838.png"><br>随后激活就完成了，会有相应提示。如果提示无法联系到服务器，请尝试ping一下服务器，确认是否可以访问。另外，不建议在本机搭建，因为Windows 11在某些情况下，访问本机会有问题。</p>
]]></content>
      <categories>
        <category>随拾</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>win11</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue学习笔记——起步</title>
    <url>/2019/08/06/studyNotes-vue/%E8%B5%B7%E6%AD%A5/</url>
    <content><![CDATA[<h1 id="项目搭建（使用vue-cli-webpack）"><a href="#项目搭建（使用vue-cli-webpack）" class="headerlink" title="项目搭建（使用vue-cli webpack）"></a>项目搭建（使用vue-cli webpack）</h1><figure class="highlight cmd"><table><tr><td class="code"><pre><code class="hljs cmd">$ yarn global add webpack  <br>$ yarn global add vue-cli<br>$ vue init webpack<br></code></pre></td></tr></table></figure>
<p>vue init webpack 运行结果：<br class='item-img' data-src='https://i.postimg.cc/SN6NNL0Y/2019-08-06-img-01.png'><img src="https://i.postimg.cc/SN6NNL0Y/2019-08-06-img-01.png"><br>安装完成如下：<br class='item-img' data-src='https://i.postimg.cc/SN6NNL0Y/2019-08-06-img-02.png'><img src="https://i.postimg.cc/SN6NNL0Y/2019-08-06-img-02.png"><br>然后运行<code>$ npm run dev</code><br>访问<a href="http://localhost:8081/">http://localhost:8081</a>，得到如下页面：<br class='item-img' data-src='https://i.postimg.cc/SN6NNL0Y/2019-08-06-img-03.png'><img src="https://i.postimg.cc/SN6NNL0Y/2019-08-06-img-03.png"><br>至此，项目搭建完成！</p>
]]></content>
      <categories>
        <category>Vue学习笔记</category>
      </categories>
      <tags>
        <tag>vue</tag>
      </tags>
  </entry>
  <entry>
    <title>CSS小知识以及mongod.conf相关配置</title>
    <url>/2018/06/08/studyNotes/2018-06-08-notes/</url>
    <content><![CDATA[<h3 id="媒介查询H5端横屏与竖屏"><a href="#媒介查询H5端横屏与竖屏" class="headerlink" title="媒介查询H5端横屏与竖屏"></a>媒介查询H5端横屏与竖屏</h3><figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs CSS"><span class="hljs-keyword">@media</span> all <span class="hljs-keyword">and</span>(<span class="hljs-attribute">orientation</span>: landscape) /* 横屏CSS */<br>@media all <span class="hljs-keyword">and</span>(<span class="hljs-attribute">orientation</span>: portrait) /* 竖屏CSS */<br></code></pre></td></tr></table></figure>

<h3 id="CSS-动态计算长度值"><a href="#CSS-动态计算长度值" class="headerlink" title="CSS 动态计算长度值"></a>CSS 动态计算长度值</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">calc( ... )<br></code></pre></td></tr></table></figure>

<h3 id="mongod-conf"><a href="#mongod-conf" class="headerlink" title="mongod.conf"></a>mongod.conf</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">logpath = /usr/local/src/mongodb/logs/mongod.log<br>logappend = true<br>fork = true<br>dbpath = /usr/local/src/mongodb/data/db<br></code></pre></td></tr></table></figure>
<h5 id="此处遇坑"><a href="#此处遇坑" class="headerlink" title="此处遇坑"></a>此处遇坑</h5><p>由于mongodb目录下一开始无logs文件夹，故以–fork参数启动mongd失败。<br>报错：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">about to fork child process, waiting until server is ready for connections.<br>forked procsee: 1624 (PS: 此数字不固定)<br>ERROR: child process failed, exited with error number 1<br>To see additional in this output, start without the &quot;--fork&quot; option.<br></code></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>CSS</tag>
        <tag>mongod</tag>
      </tags>
  </entry>
  <entry>
    <title>js判断json对象是否为空</title>
    <url>/2018/06/29/studyNotes/2018-06-29-notes/</url>
    <content><![CDATA[<h3 id="js判断json对象是否为空"><a href="#js判断json对象是否为空" class="headerlink" title="js判断json对象是否为空"></a>js判断json对象是否为空</h3><figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js">$.<span class="hljs-title function_">isEmptyObjec</span>(&#123;&#125;);<br></code></pre></td></tr></table></figure>
<p><code>jQuery.isEmptyObject()</code>函数用于判断指定参数是否是一个空对象。<br>所谓”空对象”，即不包括任何可枚举(自定义)的属性。简而言之，就是该对象没有属性可以通过<code>for...in</code>迭代。<br>该函数属于全局<code>jQuery</code>对象。<br><strong>返回值</strong><br><code>jQuery.isEmptyObject()</code>函数的返回值为<code>Boolean</code>类型，如果指定的参数是空对象，则返回<code>true</code>，否则返回<code>false</code>。 </p>
<p><em>参考链接：<a href="http://www.365mini.com/page/jquery-quickstart.htm">jQuery 快速入门教程</a></em></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>jQuery</tag>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title>JS时间对象操作以及时间格式化</title>
    <url>/2018/07/12/studyNotes/2018-07-12-notes/</url>
    <content><![CDATA[<h3 id="JS时间对象"><a href="#JS时间对象" class="headerlink" title="JS时间对象"></a>JS时间对象</h3><h4 id="取当前时间"><a href="#取当前时间" class="headerlink" title="取当前时间"></a>取当前时间</h4><figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> nowTime = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>();<br></code></pre></td></tr></table></figure>
<h4 id="取年、月、日"><a href="#取年、月、日" class="headerlink" title="取年、月、日"></a>取年、月、日</h4><figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js">nowTime.<span class="hljs-title function_">getFullYear</span>(); <span class="hljs-comment">// 年</span><br>nowTime.<span class="hljs-title function_">getMonth</span>() + <span class="hljs-number">1</span>; <span class="hljs-comment">// 月 因为 getMonth 返回的是从(0-11)的月份，故需+1</span><br>nowTime.<span class="hljs-title function_">getDate</span>(); <span class="hljs-comment">// 日</span><br></code></pre></td></tr></table></figure>
<h3 id="其他方法-get"><a href="#其他方法-get" class="headerlink" title="其他方法 get"></a>其他方法 get</h3><p><code>getTime()</code>：返回从 1970 年 1 月 1 日至今的毫秒数。<br><code>getDay()</code>： 返回当前是星期几，返回值范围 (0-6)。<br><code>getHours()</code>： 返回时，返回值范围 (0-23)。<br><code>getMinutes()</code>：返回分，返回值范围 (0-59)。<br><code>getSeconds()</code>：返回秒，返回值范围 (0-59)。<br><code>getMilliseconds()</code>：返回毫秒，返回值范围 (0-999)。</p>
<h3 id="其他方法-set"><a href="#其他方法-set" class="headerlink" title="其他方法 set"></a>其他方法 set</h3><p><code>setFullYear()</code>：设置 Date 对象中的年份（四位数字）。<br><code>setMonth()</code>：设置 Date 对象中的月份，取值范围 (0 ~ 11)。<br><code>setDate()</code>：设置 Date 对象中月的某一天，取值范围 (1 ~ 31)。<br><code>setHours()</code>：设置 Date 对象中的时，取值范围 (0 ~ 23)。<br><code>setMinutes()</code>：设置 Date 对象中的分，取值范围 (0 ~ 59)。<br><code>setSeconds()</code>：设置 Date 对象中的秒，取值范围 (0 ~ 59)。<br><code>setMilliseconds()</code>：设置 Date 对象中的毫秒，取值范围 (0 ~ 999)。<br><code>setTime()</code>：以毫秒设置 Date 对象。</p>
<h3 id="格式化时间格式常用方法"><a href="#格式化时间格式常用方法" class="headerlink" title="格式化时间格式常用方法"></a>格式化时间格式常用方法</h3><figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Date</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">Format</span> = <span class="hljs-keyword">function</span> (<span class="hljs-params">fmt</span>) &#123;<br>  <span class="hljs-comment">// 对Date的扩展，将 Date 转化为指定格式的String</span><br>  <span class="hljs-comment">// 月(M)、日(d)、小时(h)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符，</span><br>  <span class="hljs-comment">// 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字)</span><br>  <span class="hljs-comment">// 例子：</span><br>  <span class="hljs-comment">// (new Date()).Format(&quot;yyyy-MM-dd hh:mm:ss.S&quot;) ==&gt; 2006-07-02 08:09:04.423</span><br>  <span class="hljs-comment">// (new Date()).Format(&quot;yyyy-M-d h:m:s.S&quot;)      ==&gt; 2006-7-2 8:9:4.18</span><br>  <span class="hljs-keyword">var</span> o = &#123;<br>      <span class="hljs-string">&quot;M+&quot;</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getMonth</span>() + <span class="hljs-number">1</span>, <span class="hljs-comment">//月份</span><br>      <span class="hljs-string">&quot;d+&quot;</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getDate</span>(), <span class="hljs-comment">//日</span><br>      <span class="hljs-string">&quot;h+&quot;</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getHours</span>(), <span class="hljs-comment">//小时</span><br>      <span class="hljs-string">&quot;m+&quot;</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getMinutes</span>(), <span class="hljs-comment">//分</span><br>      <span class="hljs-string">&quot;s+&quot;</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getSeconds</span>(), <span class="hljs-comment">//秒</span><br>      <span class="hljs-string">&quot;q+&quot;</span>: <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">floor</span>((<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getMonth</span>() + <span class="hljs-number">3</span>) / <span class="hljs-number">3</span>), <span class="hljs-comment">//季度</span><br>      <span class="hljs-string">&quot;S&quot;</span>: <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getMilliseconds</span>() <span class="hljs-comment">//毫秒</span><br>  &#125;;<br>  <span class="hljs-keyword">if</span> (<span class="hljs-regexp">/(y+)/</span>.<span class="hljs-title function_">test</span>(fmt)) fmt = fmt.<span class="hljs-title function_">replace</span>(<span class="hljs-title class_">RegExp</span>.<span class="hljs-property">$1</span>, (<span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getFullYear</span>() + <span class="hljs-string">&quot;&quot;</span>).<span class="hljs-title function_">substr</span>(<span class="hljs-number">4</span> - <span class="hljs-title class_">RegExp</span>.<span class="hljs-property">$1</span>.<span class="hljs-property">length</span>));<br>  <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> k <span class="hljs-keyword">in</span> o)<br>  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">new</span> <span class="hljs-title class_">RegExp</span>(<span class="hljs-string">&quot;(&quot;</span> + k + <span class="hljs-string">&quot;)&quot;</span>).<span class="hljs-title function_">test</span>(fmt)) fmt = fmt.<span class="hljs-title function_">replace</span>(<span class="hljs-title class_">RegExp</span>.<span class="hljs-property">$1</span>, (<span class="hljs-title class_">RegExp</span>.<span class="hljs-property">$1</span>.<span class="hljs-property">length</span> == <span class="hljs-number">1</span>) ? (o[k]) : ((<span class="hljs-string">&quot;00&quot;</span> + o[k]).<span class="hljs-title function_">substr</span>((<span class="hljs-string">&quot;&quot;</span> + o[k]).<span class="hljs-property">length</span>)));<br>  <span class="hljs-keyword">return</span> fmt;<br>&#125;<br></code></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>时间对象</tag>
        <tag>Date对象</tag>
      </tags>
  </entry>
  <entry>
    <title>元素内容增加，滚动条跟着滚动||获得元素的标签名</title>
    <url>/2018/08/14/studyNotes/2018-08-14-notes/</url>
    <content><![CDATA[<h3 id="元素内容增加，滚动条跟着滚动"><a href="#元素内容增加，滚动条跟着滚动" class="headerlink" title="元素内容增加，滚动条跟着滚动"></a>元素内容增加，滚动条跟着滚动</h3><figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js">$(<span class="hljs-string">&#x27;.box&#x27;</span>).<span class="hljs-title function_">animate</span>(&#123;<span class="hljs-attr">scrollTop</span>: $(<span class="hljs-string">&#x27;.box&#x27;</span>)[<span class="hljs-number">0</span>].<span class="hljs-property">scrollHeight</span>&#125;, <span class="hljs-number">500</span>);<br><span class="hljs-comment">// box 为需要滚动的容器</span><br></code></pre></td></tr></table></figure>

<h3 id="获得元素的标签名"><a href="#获得元素的标签名" class="headerlink" title="获得元素的标签名"></a>获得元素的标签名</h3><p><code>document.getElementById(&quot;demo&quot;).tagName;</code></p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// jquery获取点击元素的标签名</span><br>$(<span class="hljs-string">&#x27;#demo&#x27;</span>).<span class="hljs-title function_">click</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>($(<span class="hljs-variable language_">this</span>)[<span class="hljs-number">0</span>].<span class="hljs-property">tagName</span>.<span class="hljs-title function_">toLowerCase</span>());<br>  <span class="hljs-comment">// 在 HTML 中，tagName 属性的返回值始终是大写的，所以要转化为小写</span><br>&#125;);<br></code></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>滚动条</tag>
        <tag>标签名</tag>
      </tags>
  </entry>
  <entry>
    <title>js实现svg图形转存为图片</title>
    <url>/2018/09/04/studyNotes/2018-09-04-notes/</url>
    <content><![CDATA[<h3 id="js实现svg图形转存为图片"><a href="#js实现svg图形转存为图片" class="headerlink" title="js实现svg图形转存为图片"></a>js实现svg图形转存为图片</h3><figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;svg-wrap&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">svg</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">var</span> svgXml = $(<span class="hljs-string">&#x27;.svg-wrap&#x27;</span>).<span class="hljs-title function_">html</span>();<br><span class="hljs-keyword">var</span> image = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Image</span>();<br>image.<span class="hljs-property">src</span> = <span class="hljs-string">&#x27;data:image/svg+xml;base64,&#x27;</span> + <span class="hljs-variable language_">window</span>.<span class="hljs-title function_">btoa</span>(<span class="hljs-built_in">unescape</span>(<span class="hljs-built_in">encodeURIComponent</span>(svgXml))); <span class="hljs-comment">//给图片对象写入base64编码的svg流</span><br><br><span class="hljs-comment">// $(&#x27;body&#x27;).append(image);</span><br><br><span class="hljs-keyword">var</span> canvas = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;canvas&#x27;</span>); <span class="hljs-comment">//准备空画布</span><br>canvas.<span class="hljs-property">width</span> = $(<span class="hljs-string">&#x27;.svg-wrap svg&#x27;</span>).<span class="hljs-title function_">width</span>();<br>canvas.<span class="hljs-property">height</span> = $(<span class="hljs-string">&#x27;.svg-wrap svg&#x27;</span>).<span class="hljs-title function_">height</span>();<br><br><span class="hljs-keyword">var</span> context = canvas.<span class="hljs-title function_">getContext</span>(<span class="hljs-string">&#x27;2d&#x27;</span>); <span class="hljs-comment">//取得画布的2d绘图上下文</span><br>context.<span class="hljs-title function_">drawImage</span>(image, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>);<br><br>$(<span class="hljs-string">&#x27;body&#x27;</span>).<span class="hljs-title function_">append</span>(canvas);<br><br><span class="hljs-comment">// var a = document.createElement(&#x27;a&#x27;);</span><br><span class="hljs-comment">// a.href = canvas.toDataURL(&#x27;image/png&#x27;); //将画布内的信息导出为png图片数据</span><br><span class="hljs-comment">// a.download = &quot;MapByMathArtSys&quot;; //设定下载名称</span><br><span class="hljs-comment">// a.click(); //点击触发下载</span><br></code></pre></td></tr></table></figure>

<p><em>原文链接：<a href="https://www.cnblogs.com/mmzuo-798/p/7090646.html">https://www.cnblogs.com/mmzuo-798/p/7090646.html</a></em></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>svg</tag>
        <tag>canvas</tag>
      </tags>
  </entry>
  <entry>
    <title>纯CSS3动画效果实现类技能CD加载效果</title>
    <url>/2018/11/28/studyNotes/2018-11-28-notes/</url>
    <content><![CDATA[<h3 id="纯CSS3动画效果实现类技能CD加载效果"><a href="#纯CSS3动画效果实现类技能CD加载效果" class="headerlink" title="纯CSS3动画效果实现类技能CD加载效果"></a>纯CSS3动画效果实现类技能CD加载效果</h3><h4 id="html"><a href="#html" class="headerlink" title="html"></a>html</h4><figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;iib-mark&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;l1 vam&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;r1 vam&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;l2&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure>
<h4 id="css"><a href="#css" class="headerlink" title="css"></a>css</h4><figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.iib-mark</span> &#123;<br>  <span class="hljs-attribute">position</span>: relative;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">100</span>rpx;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100</span>rpx;<br>&#125;<br><span class="hljs-selector-class">.iib-mark</span>&gt;<span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">width</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;<br>&#125;<br><span class="hljs-selector-class">.iib-mark</span>&gt;<span class="hljs-selector-class">.l1</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">3</span>;<br>  <span class="hljs-attribute">transform-origin</span>: right center;<br>&#125;<br><span class="hljs-selector-class">.iib-mark</span>&gt;<span class="hljs-selector-class">.l1</span><span class="hljs-selector-class">.vam</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#c8c8c8</span>;<br>  <span class="hljs-attribute">animation</span>: v1 <span class="hljs-number">1.5s</span> linear;<br>  <span class="hljs-attribute">animation-fill-mode</span>: forwards;<br>&#125;<br><span class="hljs-selector-class">.iib-mark</span>&gt;<span class="hljs-selector-class">.r1</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">1</span>;<br>  <span class="hljs-attribute">transform-origin</span>: left center;<br>&#125;<br><span class="hljs-selector-class">.iib-mark</span>&gt;<span class="hljs-selector-class">.r1</span><span class="hljs-selector-class">.vam</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#c8c8c8</span>;<br>  <span class="hljs-attribute">animation</span>: v2 <span class="hljs-number">1.5s</span> linear <span class="hljs-number">1.5s</span>;<br>  <span class="hljs-attribute">animation-fill-mode</span>: forwards;<br>&#125;<br><span class="hljs-selector-class">.iib-mark</span>&gt;<span class="hljs-selector-class">.l2</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>  <span class="hljs-attribute">z-index</span>: <span class="hljs-number">2</span>;<br>  <span class="hljs-attribute">background</span>: white;<br>&#125;<br><span class="hljs-keyword">@keyframes</span> v1 &#123;<br>  <span class="hljs-number">0%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">0</span>);<br>  &#125;<br>  <span class="hljs-number">99.9%</span> &#123;<br>    <span class="hljs-attribute">z-index</span>: <span class="hljs-number">3</span>;<br>  &#125;<br>  <span class="hljs-number">100%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">180deg</span>);<br>    <span class="hljs-attribute">z-index</span>: -<span class="hljs-number">1</span>;<br>  &#125;<br>&#125;<br><span class="hljs-keyword">@keyframes</span> v2 &#123;<br>  <span class="hljs-number">0%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(<span class="hljs-number">0</span>);<br>  &#125;<br>  <span class="hljs-number">99.9%</span> &#123;<br>    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;<br>  &#125;<br>  <span class="hljs-number">100%</span> &#123;<br>    <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">180deg</span>);<br>    <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>



]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>css3</tag>
        <tag>加载</tag>
      </tags>
  </entry>
  <entry>
    <title>使用watcher-lessc自动编译less文件</title>
    <url>/2019/01/25/studyNotes/2019-01-25-notes/</url>
    <content><![CDATA[<h2 id="使用-watcher-lessc-自动编译less文件"><a href="#使用-watcher-lessc-自动编译less文件" class="headerlink" title="使用 watcher-lessc 自动编译less文件"></a>使用 <a href="https://www.npmjs.com/package/watcher-lessc">watcher-lessc</a> 自动编译less文件</h2><h4 id="全局安装-watcher-lessc"><a href="#全局安装-watcher-lessc" class="headerlink" title="全局安装 watcher-lessc"></a>全局安装 watcher-lessc</h4><p><code>npm install watcher-lessc -g</code>  </p>
<h4 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h4><h5 id="Options"><a href="#Options" class="headerlink" title="Options"></a>Options</h5><blockquote>
<p>input, -i      &emsp;Specify input file to watch&#x2F;compile.  &emsp;[required]  &emsp;#指定要监视&#x2F;编译的输入文件<br>paths, -p      &emsp;Specify search paths for @import directives.  &emsp;[default: []]  &emsp;#指定@import指令的搜索路径<br>compress, -c   &emsp;Minify CSS output.  &emsp;#缩小CSS输出<br>filename, -f   &emsp;Specify a filename, for better error messages.  &emsp;[default: “style.less”]  &emsp;#指定文件名，以获得更好的错误消息<br>directory, -d  &emsp;Specify input directory to watch.  &emsp;#指定要监视的输入目录<br>output, -o     &emsp;Specify output file path.  &emsp;[required]  &emsp;#指定输出文件路径<br>help, -h       &emsp;&emsp;Show this message.  &emsp;#帮助（显示此信息）  </p>
</blockquote>
<h5 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h5><figure class="highlight powershell"><table><tr><td class="code"><pre><code class="hljs PowerShell"><span class="hljs-built_in">cd</span> <span class="hljs-built_in">H</span>:\web project\婚姻家事网\MarriageService\css\less<br>watcher<span class="hljs-literal">-lessc</span> <span class="hljs-literal">-i</span> marriageAndFamilyHarmony.less <span class="hljs-literal">-o</span> marriageAndFamilyHarmony.css<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>css</tag>
        <tag>less</tag>
        <tag>node</tag>
      </tags>
  </entry>
  <entry>
    <title>传统web项目配置babel@7自动兼容ES6语法</title>
    <url>/2019/08/12/studyNotes/2019-08-12-notes/</url>
    <content><![CDATA[<h3 id="安装babel-7"><a href="#安装babel-7" class="headerlink" title="安装babel@7"></a>安装babel@7</h3><figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">npm install --save-dev @babel/core @babel/cli @babel/preset-env<br>npm install --save @babel/polyfill<br></code></pre></td></tr></table></figure>

<h3 id="在项目的根目录下创建一个命名为-babel-config-js-的配置文件"><a href="#在项目的根目录下创建一个命名为-babel-config-js-的配置文件" class="headerlink" title="在项目的根目录下创建一个命名为 babel.config.js 的配置文件"></a>在项目的根目录下创建一个命名为 babel.config.js 的配置文件</h3><p>默认配置：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> presets = [<br>  [<br>    <span class="hljs-string">&quot;@babel/env&quot;</span>,<br>    &#123;<br>      <span class="hljs-attr">targets</span>: &#123;<br>        <span class="hljs-attr">edge</span>: <span class="hljs-string">&quot;17&quot;</span>,<br>        <span class="hljs-attr">firefox</span>: <span class="hljs-string">&quot;60&quot;</span>,<br>        <span class="hljs-attr">chrome</span>: <span class="hljs-string">&quot;67&quot;</span>,<br>        <span class="hljs-attr">safari</span>: <span class="hljs-string">&quot;11.1&quot;</span>,<br>      &#125;,<br>      <span class="hljs-attr">useBuiltIns</span>: <span class="hljs-string">&quot;usage&quot;</span>,<br>    &#125;,<br>  ],<br>];<br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123; presets &#125;;<br></code></pre></td></tr></table></figure>
<p>支持市场份额超过5%的浏览器：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-string">&quot;targets&quot;</span>: &#123;<br>  <span class="hljs-string">&quot;browsers&quot;</span>: <span class="hljs-string">&quot;&gt; 5%&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>
<p>支持最后两个版本的浏览器以及IE7+：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-string">&quot;targets&quot;</span>: &#123;<br>   <span class="hljs-string">&quot;browsers&quot;</span>: [<span class="hljs-string">&quot;last 2 versions&quot;</span>, <span class="hljs-string">&quot;ie &gt;= 7&quot;</span>]<br>&#125;<br></code></pre></td></tr></table></figure>

<h3 id="监听转化"><a href="#监听转化" class="headerlink" title="监听转化"></a>监听转化</h3><p>在需要转化的文件目录执行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><code class="hljs shell">npx babel --presets=@babel/env --root-mode upward shangpu_list_map.js --watch --out-file shangpu_list_map.min.js<br></code></pre></td></tr></table></figure>
<p><em>PS：若提示命令不存在，请全局安装babel-cli</em></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>babel</tag>
      </tags>
  </entry>
  <entry>
    <title>苹果手机和安卓手机对于new Date()处理的一个小bug</title>
    <url>/2019/02/14/studyNotes/2019-02-14-notes/</url>
    <content><![CDATA[<h2 id="苹果手机和安卓手机对于new-Date-处理的一个小bug"><a href="#苹果手机和安卓手机对于new-Date-处理的一个小bug" class="headerlink" title="苹果手机和安卓手机对于new Date()处理的一个小bug"></a>苹果手机和安卓手机对于new Date()处理的一个小bug</h2><figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">alert</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&#x27;2019-02-14&#x27;</span>))  <span class="hljs-comment">//iphone:  Thu Feb 14 2019 08:00:00 GMT+0800(CST)</span><br><span class="hljs-title function_">alert</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&#x27;2019-02-14&#x27;</span>))  <span class="hljs-comment">//Android: Thu Feb 14 2019 08:00:00 GMT+0800(CST)</span><br><br><span class="hljs-title function_">alert</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&#x27;2019-02-14 11:00:05&#x27;</span>))  <span class="hljs-comment">//iphone: Invalid Date</span><br><span class="hljs-title function_">alert</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&#x27;2019-02-14 11:00:05&#x27;</span>))  <span class="hljs-comment">//Android: Thu Feb 14 2019 11:00:05 GMT+0800(CST)</span><br><br><span class="hljs-title function_">alert</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&#x27;2019-02-14 11:00:05.0&#x27;</span>))  <span class="hljs-comment">//iphone: Invalid Date</span><br><span class="hljs-title function_">alert</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&#x27;2019-02-14 11:00:05.0&#x27;</span>))  <span class="hljs-comment">//Android: Thu Feb 14 2019 11:00:05 GMT+0800(CST)</span><br><br><span class="hljs-title function_">alert</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&#x27;2019/02/14&#x27;</span>))  <span class="hljs-comment">//iphone:  Thu Feb 14 2019 08:00:00 GMT+0800(CST)</span><br><span class="hljs-title function_">alert</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&#x27;2019/02/14&#x27;</span>))  <span class="hljs-comment">//Android: Thu Feb 14 2019 08:00:00 GMT+0800(CST)</span><br><br><span class="hljs-title function_">alert</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&#x27;2019/02/14 11:00:05&#x27;</span>))  <span class="hljs-comment">//iphone:  Thu Feb 14 2019 11:00:05 GMT+0800(CST)</span><br><span class="hljs-title function_">alert</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&#x27;2019/02/14 11:00:05&#x27;</span>))  <span class="hljs-comment">//Android: Thu Feb 14 2019 11:00:05 GMT+0800(CST)</span><br><br><span class="hljs-title function_">alert</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&#x27;2019/02/14 11:00:05.0&#x27;</span>))  <span class="hljs-comment">//iphone:  Invalid Date</span><br><span class="hljs-title function_">alert</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(<span class="hljs-string">&#x27;2019/02/14 11:00:05.0&#x27;</span>))  <span class="hljs-comment">//Android: Thu Feb 14 2019 11:00:05 GMT+0800(CST)</span><br></code></pre></td></tr></table></figure>
<p>可以看到，对于格式化<code>yyyy-mm-dd</code>格式，苹果和安卓的结果都是正常的，而只要日期后面加上时分秒苹果就会输出异常。<br>而对于<code>yyyy/mm/dd</code>格式，不管加不加时分秒，苹果和安卓都是正常，但是加上毫秒（因为有些数据库的时间格式默认到了毫秒）后苹果又会异常。</p>
<h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><h4 id="对于没有精确到毫秒的时间使用正则替换“-”为“-”"><a href="#对于没有精确到毫秒的时间使用正则替换“-”为“-”" class="headerlink" title="对于没有精确到毫秒的时间使用正则替换“-”为“&#x2F;”"></a>对于没有精确到毫秒的时间使用正则替换“-”为“&#x2F;”</h4><figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">formatIOS</span>(<span class="hljs-params">date</span>) &#123;<br>  retuen <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>(date.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/-/g</span>, <span class="hljs-string">&quot;/&quot;</span>))<br>&#125;<br></code></pre></td></tr></table></figure>
<h4 id="对于精确到了毫秒的时间只能舍弃毫秒而截取前面19位了"><a href="#对于精确到了毫秒的时间只能舍弃毫秒而截取前面19位了" class="headerlink" title="对于精确到了毫秒的时间只能舍弃毫秒而截取前面19位了"></a>对于精确到了毫秒的时间只能舍弃毫秒而截取前面19位了</h4><figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">function</span> <span class="hljs-title function_">formatIOS</span>(<span class="hljs-params">date</span>) &#123;<br>  retuen date.<span class="hljs-title function_">substr</span>(<span class="hljs-number">0</span>, <span class="hljs-number">19</span>)<br>&#125;<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>date</tag>
        <tag>时间格式化</tag>
      </tags>
  </entry>
  <entry>
    <title>无序json排序</title>
    <url>/2019/08/30/studyNotes/2019-08-30-notes/</url>
    <content><![CDATA[<p>代码：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">let</span> data = &#123;<br>  <span class="hljs-attr">L1</span>: [<span class="hljs-number">1</span>,<span class="hljs-number">12</span>,<span class="hljs-number">5</span>,<span class="hljs-string">&quot;L1&quot;</span>],<br>  <span class="hljs-attr">B1</span>: [<span class="hljs-number">1</span>,<span class="hljs-number">12</span>,<span class="hljs-number">5</span>,<span class="hljs-string">&quot;B1&quot;</span>],<br>  <span class="hljs-attr">L3</span>: [<span class="hljs-number">1</span>,<span class="hljs-number">12</span>,<span class="hljs-number">5</span>,<span class="hljs-string">&quot;L3&quot;</span>],<br>  <span class="hljs-attr">L2</span>: [<span class="hljs-number">1</span>,<span class="hljs-number">12</span>,<span class="hljs-number">5</span>,<span class="hljs-string">&quot;L2&quot;</span>]<br>&#125;;<br><span class="hljs-keyword">let</span> arr1 = [], arr2 = [];<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i <span class="hljs-keyword">in</span> data) &#123;<br>  arr1.<span class="hljs-title function_">push</span>(i);<br>&#125;<br>arr1.<span class="hljs-title function_">sort</span>();<br><span class="hljs-keyword">for</span>(<span class="hljs-keyword">let</span> i <span class="hljs-keyword">in</span> arr1) &#123;<br>  arr2.<span class="hljs-title function_">push</span>(data[arr1[i]]);<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(arr2);<br></code></pre></td></tr></table></figure>
<p>结果：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><code class="hljs plaintext">[ [ 1, 12, 5, &#x27;B1&#x27; ],<br>  [ 1, 12, 5, &#x27;L1&#x27; ],<br>  [ 1, 12, 5, &#x27;L2&#x27; ],<br>  [ 1, 12, 5, &#x27;L3&#x27; ] ]<br></code></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>json</tag>
        <tag>array</tag>
      </tags>
  </entry>
  <entry>
    <title>三维立体坐标点，在x轴，y轴相同的情况下，取出z轴最大的坐标点</title>
    <url>/2020/04/29/studyNotes/2020-04-29-notes/</url>
    <content><![CDATA[<h4 id="题记"><a href="#题记" class="headerlink" title="题记"></a>题记</h4><p>最近朋友遇到一个问题，一组三维立体坐标点，在x轴，y轴相同的情况下，要取出z轴最大的那个的坐标点。</p>
<h4 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h4><figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> testArr = [<br>  [<span class="hljs-number">45757.22541737171</span>, <span class="hljs-number">226532.12132301644</span>, <span class="hljs-number">52.45700027465815</span>],<br>  [<span class="hljs-number">45757.22541737171</span>, <span class="hljs-number">226532.12132301644</span>, <span class="hljs-number">162.45700027465816</span>],<br>  [<span class="hljs-number">45757.22541737171</span>, <span class="hljs-number">226532.12132301644</span>, <span class="hljs-number">72.45700027465816</span>],<br>  [<span class="hljs-number">45757.22541737171</span>, <span class="hljs-number">226532.12132301644</span>, <span class="hljs-number">82.45700027465816</span>],<br>  [<span class="hljs-number">45757.22541737171</span>, <span class="hljs-number">226532.12132301644</span>, <span class="hljs-number">92.45700027465816</span>],<br>  [<span class="hljs-number">45757.22541737171</span>, <span class="hljs-number">226532.12132301644</span>, <span class="hljs-number">102.45700027465816</span>],<br>  [<span class="hljs-number">45757.22541737171</span>, <span class="hljs-number">226532.12132301644</span>, <span class="hljs-number">112.45700027465816</span>],<br>  [<span class="hljs-number">45757.22541737171</span>, <span class="hljs-number">226532.12132301644</span>, <span class="hljs-number">122.45700027465816</span>],<br>  [<span class="hljs-number">45757.22541737171</span>, <span class="hljs-number">226532.12132301644</span>, <span class="hljs-number">132.45700027465816</span>],<br>  [<span class="hljs-number">45757.22541737171</span>, <span class="hljs-number">226532.12132301644</span>, <span class="hljs-number">142.45700027465816</span>],<br>  [<span class="hljs-number">45756.43914293511</span>, <span class="hljs-number">226562.64343069226</span>, <span class="hljs-number">52.457000274658206</span>],<br>  [<span class="hljs-number">45756.43914293511</span>, <span class="hljs-number">226562.64343069226</span>, <span class="hljs-number">62.457000274658206</span>],<br>  [<span class="hljs-number">45756.43914293511</span>, <span class="hljs-number">226562.64343069226</span>, <span class="hljs-number">72.45700027465821</span>],<br>  [<span class="hljs-number">45756.43914293511</span>, <span class="hljs-number">226562.64343069226</span>, <span class="hljs-number">82.45700027465821</span>],<br>  [<span class="hljs-number">45756.43914293511</span>, <span class="hljs-number">226562.64343069226</span>, <span class="hljs-number">92.45700027465821</span>],<br>  [<span class="hljs-number">45756.43914293511</span>, <span class="hljs-number">226562.64343069226</span>, <span class="hljs-number">102.45700027465821</span>],<br>  [<span class="hljs-number">45756.43914293511</span>, <span class="hljs-number">226562.64343069226</span>, <span class="hljs-number">112.45700027465821</span>],<br>  [<span class="hljs-number">45791.873784629126</span>, <span class="hljs-number">226560.04881890872</span>, <span class="hljs-number">52.457000274658206</span>],<br>  [<span class="hljs-number">45791.873784629126</span>, <span class="hljs-number">226560.04881890872</span>, <span class="hljs-number">172.4570002746582</span>],<br>  [<span class="hljs-number">45791.873784629126</span>, <span class="hljs-number">226560.04881890872</span>, <span class="hljs-number">162.4570002746582</span>],<br>  [<span class="hljs-number">45791.873784629126</span>, <span class="hljs-number">226560.04881890872</span>, <span class="hljs-number">142.4570002746582</span>],<br>  [<span class="hljs-number">45791.873784629126</span>, <span class="hljs-number">226560.04881890872</span>, <span class="hljs-number">92.45700027465821</span>],<br>  [<span class="hljs-number">45791.873784629126</span>, <span class="hljs-number">226560.04881890872</span>, <span class="hljs-number">102.45700027465821</span>],<br>  [<span class="hljs-number">45791.873784629126</span>, <span class="hljs-number">226560.04881890872</span>, <span class="hljs-number">112.45700027465821</span>],<br>  [<span class="hljs-number">45791.873784629126</span>, <span class="hljs-number">226560.04881890872</span>, <span class="hljs-number">122.45700027465821</span>],<br>  [<span class="hljs-number">45791.873784629126</span>, <span class="hljs-number">226560.04881890872</span>, <span class="hljs-number">132.4570002746582</span>],<br>  [<span class="hljs-number">45796.25954354428</span>, <span class="hljs-number">226532.31399971253</span>, <span class="hljs-number">52.45700027465815</span>],<br>  [<span class="hljs-number">45796.25954354428</span>, <span class="hljs-number">226532.31399971253</span>, <span class="hljs-number">182.45700027465816</span>],<br>  [<span class="hljs-number">45796.25954354428</span>, <span class="hljs-number">226532.31399971253</span>, <span class="hljs-number">162.45700027465816</span>],<br>  [<span class="hljs-number">45796.25954354428</span>, <span class="hljs-number">226532.31399971253</span>, <span class="hljs-number">82.45700027465816</span>],<br>  [<span class="hljs-number">45796.25954354428</span>, <span class="hljs-number">226532.31399971253</span>, <span class="hljs-number">92.45700027465816</span>],<br>  [<span class="hljs-number">45796.25954354428</span>, <span class="hljs-number">226532.31399971253</span>, <span class="hljs-number">102.45700027465816</span>],<br>  [<span class="hljs-number">45796.25954354428</span>, <span class="hljs-number">226532.31399971253</span>, <span class="hljs-number">112.45700027465816</span>],<br>  [<span class="hljs-number">45796.25954354428</span>, <span class="hljs-number">226532.31399971253</span>, <span class="hljs-number">122.45700027465816</span>],<br>  [<span class="hljs-number">45796.25954354428</span>, <span class="hljs-number">226532.31399971253</span>, <span class="hljs-number">132.45700027465816</span>],<br>  [<span class="hljs-number">45796.25954354428</span>, <span class="hljs-number">226532.31399971253</span>, <span class="hljs-number">142.45700027465816</span>],<br>  [<span class="hljs-number">45796.25954354428</span>, <span class="hljs-number">226532.31399971253</span>, <span class="hljs-number">152.45700027465816</span>],<br>  [<span class="hljs-number">45796.25954354428</span>, <span class="hljs-number">226532.31399971253</span>, <span class="hljs-number">162.45700027465816</span>],<br>  [<span class="hljs-number">45796.25954354428</span>, <span class="hljs-number">226532.31399971253</span>, <span class="hljs-number">182.45700027465816</span>],<br>  [<span class="hljs-number">45796.25954354428</span>, <span class="hljs-number">226532.31399971253</span>, <span class="hljs-number">182.45700027465816</span>],<br>  [<span class="hljs-number">45791.873784629126</span>, <span class="hljs-number">226560.04881890872</span>, <span class="hljs-number">142.4570002746582</span>],<br>  [<span class="hljs-number">45791.873784629126</span>, <span class="hljs-number">226560.04881890872</span>, <span class="hljs-number">152.4570002746582</span>],<br>  [<span class="hljs-number">45791.873784629126</span>, <span class="hljs-number">226560.04881890872</span>, <span class="hljs-number">162.4570002746582</span>],<br>  [<span class="hljs-number">45791.873784629126</span>, <span class="hljs-number">226560.04881890872</span>, <span class="hljs-number">172.4570002746582</span>],<br>  [<span class="hljs-number">45757.22541737171</span>, <span class="hljs-number">226532.12132301644</span>, <span class="hljs-number">162.45700027465816</span>],<br>  [<span class="hljs-number">45757.22541737171</span>, <span class="hljs-number">226532.12132301644</span>, <span class="hljs-number">162.45700027465816</span>]<br>];<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getZcoordMax</span> (sourceArr) &#123;<br>  <span class="hljs-keyword">const</span> res = sourceArr.<span class="hljs-title function_">reduce</span>(<span class="hljs-function">(<span class="hljs-params">acc, curr</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">let</span> key = curr.<span class="hljs-title function_">slice</span>(<span class="hljs-number">0</span>, <span class="hljs-number">2</span>).<span class="hljs-title function_">join</span>(<span class="hljs-string">&#x27;,&#x27;</span>), arr, z = curr[<span class="hljs-number">2</span>];<br>    acc[key] = acc[key] || &#123;&#125;;<br>    acc[key].<span class="hljs-property">max</span> = acc[key].<span class="hljs-property">max</span> || [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>];<br>    arr = acc[key].<span class="hljs-property">arr</span>;<br>    <span class="hljs-keyword">if</span> (arr) &#123;<br>      arr.<span class="hljs-title function_">push</span>(z);<br>      <span class="hljs-keyword">if</span> (acc[key].<span class="hljs-property">max</span>[<span class="hljs-number">2</span>] &lt;= z) acc[key].<span class="hljs-property">max</span> = curr;<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      acc[key].<span class="hljs-property">arr</span> = [z];<br>    &#125;<br>    <span class="hljs-keyword">return</span> acc<br>  &#125;, &#123;&#125;);<br>  <span class="hljs-keyword">return</span> <span class="hljs-title class_">Object</span>.<span class="hljs-title function_">keys</span>(res).<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">x</span> =&gt;</span> res[x].<span class="hljs-property">max</span>);<br>&#125;<br></code></pre></td></tr></table></figure>

<p>输出结果：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js">[<br>  [ <span class="hljs-number">45757.22541737171</span>, <span class="hljs-number">226532.12132301644</span>, <span class="hljs-number">162.45700027465816</span> ],<br>  [ <span class="hljs-number">45756.43914293511</span>, <span class="hljs-number">226562.64343069226</span>, <span class="hljs-number">112.45700027465821</span> ],<br>  [ <span class="hljs-number">45791.873784629126</span>, <span class="hljs-number">226560.04881890872</span>, <span class="hljs-number">172.4570002746582</span> ],<br>  [ <span class="hljs-number">45796.25954354428</span>, <span class="hljs-number">226532.31399971253</span>, <span class="hljs-number">182.45700027465816</span> ]<br>]<br></code></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>js</tag>
        <tag>排序</tag>
      </tags>
  </entry>
  <entry>
    <title>Jupyter Notebook 安装以支持js</title>
    <url>/2021/06/02/studyNotes/2021-06-02-notes/</url>
    <content><![CDATA[<h1 id="安装-jupyter"><a href="#安装-jupyter" class="headerlink" title="安装 jupyter"></a>安装 jupyter</h1><p><a href="https://jupyter.readthedocs.io/en/latest/content-quickstart.html">jupyter 官网</a><br>先决条件：Python(Python的3.3或更高版本，或Python 2.7)  </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">pip3 install --upgrade pip<br>pip3 install jupyter<br></code></pre></td></tr></table></figure>
<p>运行<code>jupyter notebook</code>，一切正常就可进行下一步。如果提示jupyter不存在，则需要手动设置环境变量。</p>
<blockquote>
<p>MacOS手动设置环境变量<br>编辑PATH配置文件：<code>vim ~/.bash_profile</code><br>末尾添加：<code>export PATH=$PATH:/Library/Frameworks/Python.framework/Versions/3.8/bin</code><br>PS: 具体的python bin目录可根据安装方式自行查找</p>
</blockquote>
<h1 id="安装-IJavascript"><a href="#安装-IJavascript" class="headerlink" title="安装 IJavascript"></a>安装 IJavascript</h1><p>IJavascript github： <a href="https://github.com/n-riesco/ijavascript">https://github.com/n-riesco/ijavascript</a>  </p>
<h5 id="MacOS"><a href="#MacOS" class="headerlink" title="MacOS"></a>MacOS</h5><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">ruby -e <span class="hljs-string">&quot;<span class="hljs-subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span><br>brew install pkg-config node zeromq<br>sudo easy_install pip<br>pip install --upgrade pyzmq jupyter<br>npm install -g ijavascript<br>ijsinstall<br></code></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>jupyter</tag>
      </tags>
  </entry>
  <entry>
    <title>react组件库开发实录·一 项目搭建</title>
    <url>/2021/12/16/studyNotes/2021-12-16-react%E7%BB%84%E4%BB%B6%E5%BA%93%E5%BC%80%E5%8F%91%E5%AE%9E%E5%BD%95%E4%B8%80/</url>
    <content><![CDATA[<h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h3 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> react-erp<br><span class="hljs-built_in">cd</span> react-erp<br>npm init -y<br></code></pre></td></tr></table></figure>

<h3 id="安装相关依赖"><a href="#安装相关依赖" class="headerlink" title="安装相关依赖"></a>安装相关依赖</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm i react react-dom -S<br>npm i webpack webpack-dev-server webpack-cli -D<br><span class="hljs-comment"># typescript &amp; loader</span><br>npm i typescript babel-loader @babel/core @babel/preset-env style-loader css-loader ts-loader -D<br><span class="hljs-comment"># HtmlWebpackPlugin</span><br>npm install html-webpack-plugin -D<br></code></pre></td></tr></table></figure>

<h3 id="搭建目录结构"><a href="#搭建目录结构" class="headerlink" title="搭建目录结构"></a>搭建目录结构</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> src src/components src/types src/utils src/hooks src/servers src/doc<br></code></pre></td></tr></table></figure>
<p class='item-img' data-src='https://static.loneyclown.vip/blog/2021-12-16/313B6BFD-F086-45B7-8B19-781E41AB6EF2.png'><img src="https://static.loneyclown.vip/blog/2021-12-16/313B6BFD-F086-45B7-8B19-781E41AB6EF2.png" alt="目录结构"></p>
<h3 id="配置webpack"><a href="#配置webpack" class="headerlink" title="配置webpack"></a>配置webpack</h3><p>新建配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">touch</span> webpack.config.js<br></code></pre></td></tr></table></figure>
<p>写入配置:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<br><span class="hljs-keyword">const</span> <span class="hljs-title class_">HtmlWebpackPlugin</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;html-webpack-plugin&#x27;</span>);<br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>  <span class="hljs-attr">mode</span>: <span class="hljs-string">&#x27;development&#x27;</span>,<br>  <span class="hljs-attr">devtool</span>: <span class="hljs-string">&#x27;eval-source-map&#x27;</span>,<br>  <span class="hljs-attr">entry</span>: &#123;<br>    <span class="hljs-attr">doc</span>: <span class="hljs-string">&#x27;./src/doc/index.tsx&#x27;</span><br>  &#125;,<br>  <span class="hljs-attr">output</span>: &#123;<br>    <span class="hljs-attr">filename</span>: <span class="hljs-string">&#x27;[name].bundle.js&#x27;</span>,<br>    <span class="hljs-attr">path</span>: path.<span class="hljs-title function_">resolve</span>(__dirname, <span class="hljs-string">&#x27;dist&#x27;</span>),<br>    <span class="hljs-attr">clean</span>: <span class="hljs-literal">true</span>,<br>  &#125;,<br>  <span class="hljs-attr">module</span>: &#123;<br>    <span class="hljs-attr">rules</span>: [<br>      &#123;<br>        <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.css$/i</span>,<br>        <span class="hljs-attr">use</span>: [<span class="hljs-string">&quot;style-loader&quot;</span>, <span class="hljs-string">&quot;css-loader&quot;</span>],<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.(js|jsx)?$/</span>,<br>				<span class="hljs-attr">exclude</span>: <span class="hljs-regexp">/node_modules/</span>,<br>        <span class="hljs-attr">use</span>: &#123;<br>          <span class="hljs-attr">loader</span>: <span class="hljs-string">&#x27;babel-loader&#x27;</span>,<br>          <span class="hljs-attr">options</span>: &#123;<br>            <span class="hljs-attr">presets</span>: [<span class="hljs-string">&#x27;@babel/preset-env&#x27;</span>]<br>          &#125;<br>        &#125;<br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.(ts|tsx)?$/</span>,<br>        <span class="hljs-attr">use</span>: [<span class="hljs-string">&#x27;ts-loader&#x27;</span>]<br>      &#125;,<br>    ]<br>  &#125;,<br>  <span class="hljs-attr">devServer</span>: &#123;<br>    <span class="hljs-attr">client</span>: &#123;<br>      <span class="hljs-attr">progress</span>: <span class="hljs-literal">true</span>,<br>    &#125;,<br>    <span class="hljs-attr">hot</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">open</span>: <span class="hljs-literal">true</span><br>  &#125;,<br>  <span class="hljs-attr">plugins</span>: [<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">HtmlWebpackPlugin</span>(&#123;<br>      <span class="hljs-attr">template</span>: <span class="hljs-string">&quot;./src/index.html&quot;</span>,<br>    &#125;),<br>  ],<br>  <span class="hljs-attr">resolve</span>: &#123;<br>    <span class="hljs-attr">extensions</span>: [<span class="hljs-string">&#x27;.tsx&#x27;</span>, <span class="hljs-string">&#x27;.ts&#x27;</span>, <span class="hljs-string">&#x27;.js&#x27;</span>],<br>  &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>
<p>新建模板文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">touch</span> src/index.html<br></code></pre></td></tr></table></figure>
<p>编写模板文件<code>index.html</code>:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><code class="hljs html"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>Document<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;root&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>

<h3 id="配置TypeScript"><a href="#配置TypeScript" class="headerlink" title="配置TypeScript"></a>配置TypeScript</h3><p>新建配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">touch</span> tsconfig.json<br></code></pre></td></tr></table></figure>
<p>写入配置：</p>
<figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;compilerOptions&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;jsx&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;react&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;module&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;commonjs&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;target&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;es5&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;sourceMap&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;esModuleInterop&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>    <span class="hljs-attr">&quot;baseUrl&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;.&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;exclude&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-string">&quot;node_modules&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">]</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure>

<h4 id="安装react-route来管理路由"><a href="#安装react-route来管理路由" class="headerlink" title="安装react-route来管理路由"></a>安装react-route来管理路由</h4><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm i react-router react-router-dom -S<br>npm i @types/react-router @types/react-router-dom -D<br></code></pre></td></tr></table></figure>
<p><code>touch src/doc/index.tsx</code>:</p>
<figure class="highlight tsx"><table><tr><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; render &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-dom&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">HashRouter</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react-router-dom&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;antd/dist/antd.css&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./app&#x27;</span>;<br><br><span class="hljs-keyword">const</span> rootElement = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;root&quot;</span>);<br><span class="hljs-title function_">render</span>(<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">HashRouter</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">App</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">HashRouter</span>&gt;</span></span>, rootElement);<br></code></pre></td></tr></table></figure>
<p><code>touch src/doc/app.tsx</code>:</p>
<figure class="highlight tsx"><table><tr><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; useRoutes &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react-router-dom&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Layout</span>, <span class="hljs-title class_">Menu</span>, <span class="hljs-title class_">Breadcrumb</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;antd&#x27;</span>;<br><span class="hljs-keyword">import</span> routes <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./routes&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;./index.css&#x27;</span>;<br><br><span class="hljs-keyword">const</span> &#123; <span class="hljs-title class_">Header</span>, <span class="hljs-title class_">Content</span>, <span class="hljs-title class_">Footer</span>, <span class="hljs-title class_">Sider</span> &#125; = <span class="hljs-title class_">Layout</span>;<br><span class="hljs-keyword">const</span> &#123; <span class="hljs-title class_">SubMenu</span> &#125; = <span class="hljs-title class_">Menu</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> () =&gt; &#123;<br><br>  <span class="hljs-keyword">const</span> element = <span class="hljs-title function_">useRoutes</span>(routes);<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Layout</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">minHeight:</span> &#x27;<span class="hljs-attr">100vh</span>&#x27; &#125;&#125;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Sider</span> <span class="hljs-attr">collapsible</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;logo&quot;</span> /&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Menu</span> <span class="hljs-attr">theme</span>=<span class="hljs-string">&quot;dark&quot;</span> <span class="hljs-attr">defaultSelectedKeys</span>=<span class="hljs-string">&#123;[</span>&#x27;<span class="hljs-attr">1</span>&#x27;]&#125; <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;inline&quot;</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">SubMenu</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;sub1&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Components&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Menu.Item</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>Tom<span class="hljs-tag">&lt;/<span class="hljs-name">Menu.Item</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Menu.Item</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>Bill<span class="hljs-tag">&lt;/<span class="hljs-name">Menu.Item</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Menu.Item</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>Alex<span class="hljs-tag">&lt;/<span class="hljs-name">Menu.Item</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">SubMenu</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">SubMenu</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;sub1&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Hooks&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Menu.Item</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>Tom<span class="hljs-tag">&lt;/<span class="hljs-name">Menu.Item</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Menu.Item</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>Bill<span class="hljs-tag">&lt;/<span class="hljs-name">Menu.Item</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Menu.Item</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>Alex<span class="hljs-tag">&lt;/<span class="hljs-name">Menu.Item</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">SubMenu</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">SubMenu</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;sub1&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Utils&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Menu.Item</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>Tom<span class="hljs-tag">&lt;/<span class="hljs-name">Menu.Item</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Menu.Item</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>Bill<span class="hljs-tag">&lt;/<span class="hljs-name">Menu.Item</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Menu.Item</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>Alex<span class="hljs-tag">&lt;/<span class="hljs-name">Menu.Item</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">SubMenu</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">SubMenu</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;sub1&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Severs&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Menu.Item</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span>Tom<span class="hljs-tag">&lt;/<span class="hljs-name">Menu.Item</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Menu.Item</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;2&quot;</span>&gt;</span>Bill<span class="hljs-tag">&lt;/<span class="hljs-name">Menu.Item</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Menu.Item</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;3&quot;</span>&gt;</span>Alex<span class="hljs-tag">&lt;/<span class="hljs-name">Menu.Item</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">SubMenu</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">Menu</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">Sider</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Layout</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;site-layout&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Header</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;site-layout-background&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">padding:</span> <span class="hljs-attr">0</span> &#125;&#125; /&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Content</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">margin:</span> &#x27;<span class="hljs-attr">16px</span>&#x27; &#125;&#125;&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;site-layout-background&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">padding:</span> <span class="hljs-attr">24</span>, <span class="hljs-attr">minHeight:</span> <span class="hljs-attr">360</span> &#125;&#125;&gt;</span></span><br><span class="language-xml">            Components Demo</span><br><span class="language-xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">Content</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Footer</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">textAlign:</span> &#x27;<span class="hljs-attr">center</span>&#x27; &#125;&#125;&gt;</span>react-erp ©2021 Created by fssc<span class="hljs-tag">&lt;/<span class="hljs-name">Footer</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">Layout</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">Layout</span>&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure>
<p><code>touch src/doc/routes.tsx</code>:</p>
<figure class="highlight tsx"><table><tr><td class="code"><pre><code class="hljs tsx"><span class="hljs-keyword">import</span> <span class="hljs-keyword">type</span> &#123; <span class="hljs-title class_">RouteObject</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-router-dom&quot;</span>;<br><span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">RouteObject</span>[] = [];<br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> routes;<br></code></pre></td></tr></table></figure>
<p><code>touch src/doc/index.css</code>:</p>
<figure class="highlight css"><table><tr><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.logo</span> &#123;<br>  <span class="hljs-attribute">height</span>: <span class="hljs-number">32px</span>;<br>  <span class="hljs-attribute">margin</span>: <span class="hljs-number">16px</span>;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgba</span>(<span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">255</span>, <span class="hljs-number">0.3</span>);<br>&#125;<br><br><span class="hljs-selector-class">.site-layout</span> <span class="hljs-selector-class">.site-layout-background</span> &#123;<br>  <span class="hljs-attribute">background</span>: <span class="hljs-number">#fff</span>;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>文档页面demo雏形：<br class='item-img' data-src='https://static.loneyclown.vip/blog/2021-12-16/CEC87DCD-B636-400B-993A-67E55ADCD0B2.png'><img src="https://static.loneyclown.vip/blog/2021-12-16/CEC87DCD-B636-400B-993A-67E55ADCD0B2.png" alt="文档页面demo雏形"></p>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>react</tag>
      </tags>
  </entry>
  <entry>
    <title>react组件库开发实录·二 添加less，使用mdx编写项目文档</title>
    <url>/2021/12/20/studyNotes/2021-12-20-react%E7%BB%84%E4%BB%B6%E5%BA%93%E5%BC%80%E5%8F%91%E5%AE%9E%E5%BD%95%E4%BA%8C/</url>
    <content><![CDATA[<p>上期地址：<a href="https://loneyclown.vip/2021/12/16/studyNotes/2021-12-16-react%E7%BB%84%E4%BB%B6%E5%BA%93%E5%BC%80%E5%8F%91%E5%AE%9E%E5%BD%95%E4%B8%80/">react组件库开发实录·一 项目搭建</a></p>
<h3 id="项目添加less"><a href="#项目添加less" class="headerlink" title="项目添加less"></a>项目添加less</h3><p>首先，你需要先安装<code>less</code>和<code>less-loader</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm install less less-loader --save-dev<br></code></pre></td></tr></table></figure>

<p>然后将该loader添加到webpack的配置中去，例如：<br>webpack.config.js：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>  <span class="hljs-attr">module</span>: &#123;<br>    <span class="hljs-attr">rules</span>: [<br>      &#123;<br>        <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.less$/i</span>,<br>        <span class="hljs-attr">use</span>: [<br>          <span class="hljs-comment">// compiles Less to CSS</span><br>          <span class="hljs-string">&#x27;style-loader&#x27;</span>,<br>          <span class="hljs-string">&#x27;css-loader&#x27;</span>,<br>          <span class="hljs-string">&#x27;less-loader&#x27;</span>,<br>        ],<br>      &#125;,<br>    ],<br>  &#125;,<br>&#125;;<br></code></pre></td></tr></table></figure>
<p>然后把之前的<code>/src/doc/index.css</code>改成<code>/src/doc/index.less</code>。  </p>
<h3 id="使用mdx编写组件文档"><a href="#使用mdx编写组件文档" class="headerlink" title="使用mdx编写组件文档"></a>使用mdx编写组件文档</h3><p>安装<code>@mdx-js/loader</code>：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm install --save-dev @mdx-js/loader<br></code></pre></td></tr></table></figure>
<p>配置webpack：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>  <span class="hljs-attr">module</span>: &#123;<br>    <span class="hljs-comment">// ...</span><br>    <span class="hljs-attr">rules</span>: [<br>      <span class="hljs-comment">// ...</span><br>      &#123;<br>        <span class="hljs-attr">test</span>: <span class="hljs-regexp">/\.mdx$/</span>,<br>        <span class="hljs-attr">use</span>: [<br>          &#123;<br>            <span class="hljs-attr">loader</span>: <span class="hljs-string">&#x27;babel-loader&#x27;</span>,<br>            <span class="hljs-attr">options</span>: &#123;<br>              <span class="hljs-attr">presets</span>: [<span class="hljs-string">&quot;@babel/env&quot;</span>, <span class="hljs-string">&quot;@babel/preset-react&quot;</span>]<br>            &#125;<br>          &#125;,<br>          &#123; <span class="hljs-attr">loader</span>: <span class="hljs-string">&#x27;@mdx-js/loader&#x27;</span> &#125;<br>        ]<br>      &#125;<br>    ]<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></figure>
<p>新建声明文件<code>touch src/types/mdx.d.ts</code>:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js">declare <span class="hljs-variable language_">module</span> <span class="hljs-string">&#x27;@mdx-js/react&#x27;</span> &#123;<br>  <span class="hljs-keyword">import</span> * <span class="hljs-keyword">as</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span><br>  type <span class="hljs-title class_">ComponentType</span> =<br>    | <span class="hljs-string">&#x27;a&#x27;</span><br>    | <span class="hljs-string">&#x27;blockquote&#x27;</span><br>    | <span class="hljs-string">&#x27;code&#x27;</span><br>    | <span class="hljs-string">&#x27;delete&#x27;</span><br>    | <span class="hljs-string">&#x27;em&#x27;</span><br>    | <span class="hljs-string">&#x27;h1&#x27;</span><br>    | <span class="hljs-string">&#x27;h2&#x27;</span><br>    | <span class="hljs-string">&#x27;h3&#x27;</span><br>    | <span class="hljs-string">&#x27;h4&#x27;</span><br>    | <span class="hljs-string">&#x27;h5&#x27;</span><br>    | <span class="hljs-string">&#x27;h6&#x27;</span><br>    | <span class="hljs-string">&#x27;hr&#x27;</span><br>    | <span class="hljs-string">&#x27;img&#x27;</span><br>    | <span class="hljs-string">&#x27;inlineCode&#x27;</span><br>    | <span class="hljs-string">&#x27;li&#x27;</span><br>    | <span class="hljs-string">&#x27;ol&#x27;</span><br>    | <span class="hljs-string">&#x27;p&#x27;</span><br>    | <span class="hljs-string">&#x27;pre&#x27;</span><br>    | <span class="hljs-string">&#x27;strong&#x27;</span><br>    | <span class="hljs-string">&#x27;sup&#x27;</span><br>    | <span class="hljs-string">&#x27;table&#x27;</span><br>    | <span class="hljs-string">&#x27;td&#x27;</span><br>    | <span class="hljs-string">&#x27;thematicBreak&#x27;</span><br>    | <span class="hljs-string">&#x27;tr&#x27;</span><br>    | <span class="hljs-string">&#x27;ul&#x27;</span><br>  <span class="hljs-keyword">export</span> type <span class="hljs-title class_">Components</span> = &#123;<br>    [key <span class="hljs-keyword">in</span> <span class="hljs-title class_">ComponentType</span>]?: <span class="hljs-title class_">React</span>.<span class="hljs-property">ComponentType</span>&lt;&#123;<span class="hljs-attr">children</span>: <span class="hljs-title class_">React</span>.<span class="hljs-property">ReactNode</span>&#125;&gt;<br>  &#125;<br>  <span class="hljs-keyword">export</span> interface <span class="hljs-title class_">MDXProviderProps</span> &#123;<br>    <span class="hljs-attr">children</span>: <span class="hljs-title class_">React</span>.<span class="hljs-property">ReactNode</span><br>    <span class="hljs-attr">components</span>: <span class="hljs-title class_">Components</span><br>  &#125;<br>  <span class="hljs-keyword">export</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">MDXProvider</span> <span class="hljs-keyword">extends</span> <span class="hljs-title class_ inherited__">React.Component</span>&lt;<span class="hljs-title class_">MDXProviderProps</span>&gt; &#123;&#125;<br>  <span class="hljs-comment">// mdx: any;</span><br>  <span class="hljs-keyword">const</span> <span class="hljs-attr">mdx</span>: any;<br>&#125;<br><br>declare <span class="hljs-variable language_">module</span> <span class="hljs-string">&#x27;*.mdx&#x27;</span> &#123;<br>  <span class="hljs-keyword">let</span> <span class="hljs-title class_">MDXComponent</span>: <span class="hljs-function">(<span class="hljs-params">props: any</span>) =&gt;</span> <span class="hljs-variable constant_">JSX</span>.<span class="hljs-property">Element</span><br>  <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-title class_">MDXComponent</span><br>&#125;<br></code></pre></td></tr></table></figure>
<p>配置<code>tsconfig</code>:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-comment">// ...</span><br>  <span class="hljs-attr">&quot;include&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-string">&quot;**/*.ts&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;**/*.tsx&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;**/*.mdx&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure>
<p>使用：<br><code>src/doc/index.tsx</code>:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; render &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react-dom&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">HashRouter</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react-router-dom&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;antd/dist/antd.css&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./app&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">AppRoute</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@components&#x27;</span>;<br><span class="hljs-keyword">import</span> routes <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./routes&#x27;</span>;<br><br><span class="hljs-keyword">const</span> rootElement = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&quot;root&quot;</span>);<br><span class="hljs-title function_">render</span>(<span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">HashRouter</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">App</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">AppRoute</span> <span class="hljs-attr">routeList</span>=<span class="hljs-string">&#123;routes&#125;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">App</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">HashRouter</span>&gt;</span></span>, rootElement);<br></code></pre></td></tr></table></figure>

<p><code>src/doc/app.tsx</code>:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Layout</span>, <span class="hljs-title class_">Menu</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;antd&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;./index.less&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Link</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react-router-dom&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">MDXProvider</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@mdx-js/react&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">CodeBlock</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@doc/components/codeBlock&#x27;</span>;<br><br><span class="hljs-keyword">const</span> &#123; <span class="hljs-title class_">Header</span>, <span class="hljs-title class_">Content</span>, <span class="hljs-title class_">Footer</span>, <span class="hljs-title class_">Sider</span> &#125; = <span class="hljs-title class_">Layout</span>;<br><span class="hljs-keyword">const</span> &#123; <span class="hljs-title class_">SubMenu</span> &#125; = <span class="hljs-title class_">Menu</span>;<br><br><span class="hljs-keyword">const</span> components = &#123;<br>  <span class="hljs-attr">pre</span>: <span class="hljs-function"><span class="hljs-params">props</span> =&gt;</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> &#123;<span class="hljs-attr">...props</span>&#125; /&gt;</span></span>,<br>  <span class="hljs-attr">code</span>: <span class="hljs-function">(<span class="hljs-params">props</span>) =&gt;</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">CodeBlock</span> &#123;<span class="hljs-attr">...props</span>&#125; /&gt;</span></span><br>&#125;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> (props) =&gt; &#123;<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Layout</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">minHeight:</span> &#x27;<span class="hljs-attr">100vh</span>&#x27; &#125;&#125;&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Sider</span> <span class="hljs-attr">collapsible</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;logo&quot;</span>&gt;</span></span><br><span class="language-xml">          React-ERP</span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Menu</span> <span class="hljs-attr">theme</span>=<span class="hljs-string">&quot;dark&quot;</span> <span class="hljs-attr">defaultSelectedKeys</span>=<span class="hljs-string">&#123;[</span>&#x27;<span class="hljs-attr">components</span>&#x27;]&#125; <span class="hljs-attr">mode</span>=<span class="hljs-string">&quot;inline&quot;</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">SubMenu</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;components&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Components&quot;</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">Menu.Item</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&quot;components-table&quot;</span>&gt;</span></span><br><span class="language-xml">              <span class="hljs-tag">&lt;<span class="hljs-name">Link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/components/table&quot;</span>&gt;</span>Table<span class="hljs-tag">&lt;/<span class="hljs-name">Link</span>&gt;</span></span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">Menu.Item</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">SubMenu</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">Menu</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">Sider</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Layout</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;site-layout&quot;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Header</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;site-layout-background&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">padding:</span> <span class="hljs-attr">0</span> &#125;&#125; /&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Content</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">margin:</span> &#x27;<span class="hljs-attr">16px</span>&#x27; &#125;&#125;&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&quot;site-layout-background&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">padding:</span> <span class="hljs-attr">24</span>, <span class="hljs-attr">minHeight:</span> <span class="hljs-attr">360</span> &#125;&#125;&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">MDXProvider</span> <span class="hljs-attr">components</span>=<span class="hljs-string">&#123;components&#125;</span>&gt;</span></span><br><span class="language-xml">            &#123;props.children&#125;</span><br><span class="language-xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">MDXProvider</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">Content</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Footer</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">textAlign:</span> &#x27;<span class="hljs-attr">center</span>&#x27; &#125;&#125;&gt;</span>react-erp ©2021 Created by fssc<span class="hljs-tag">&lt;/<span class="hljs-name">Footer</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">Layout</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">Layout</span>&gt;</span></span><br>  );<br>&#125;<br></code></pre></td></tr></table></figure>

<p><code>src/doc/routes.tsx</code>:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;react&quot;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">RouteData</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@components&quot;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Table</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@doc/pages/components/table/index.mdx&#x27;</span>;<br><br><span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">RouteData</span>[] = [<br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-attr">loader</span>: <span class="hljs-keyword">import</span>(<span class="hljs-string">&#x27;@doc/app&#x27;</span>) &#125;,<br>  &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;components&#x27;</span>,<br>    <span class="hljs-attr">children</span>: [<br>      &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;table&#x27;</span>, <span class="hljs-attr">element</span>: <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Table</span> /&gt;</span></span> &#125;<br>    ],<br>  &#125;,<br>];<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> routes;<br></code></pre></td></tr></table></figure>

<p><code>src/doc/components/codeBlock/index.tsx</code>:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span>, &#123; useState &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Highlight</span>, &#123; defaultProps &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;prism-react-renderer&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">LiveProvider</span>, <span class="hljs-title class_">LiveEditor</span>, <span class="hljs-title class_">LiveError</span>, <span class="hljs-title class_">LivePreview</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react-live&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; mdx &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@mdx-js/react&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Button</span>, <span class="hljs-title class_">Collapse</span>, message &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;antd&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">CopyToClipboard</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react-copy-to-clipboard&#x27;</span>;<br><br><span class="hljs-keyword">const</span> &#123; <span class="hljs-title class_">Panel</span> &#125; = <span class="hljs-title class_">Collapse</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> (&#123; children, className, live, render &#125;) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> [collapseShow, setCollapseShow] = useState&lt;boolean&gt;(<span class="hljs-literal">true</span>);<br>  <span class="hljs-keyword">const</span> language = className.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/language-/</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br><br>  <span class="hljs-keyword">if</span> (live) &#123;<br>    <span class="hljs-keyword">return</span> (<br>      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">marginTop:</span> &#x27;<span class="hljs-attr">40px</span>&#x27;, <span class="hljs-attr">backgroundColor:</span> &#x27;<span class="hljs-attr">black</span>&#x27; &#125;&#125;&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">LiveProvider</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">code</span>=<span class="hljs-string">&#123;children.trim()&#125;</span></span></span><br><span class="hljs-tag"><span class="language-xml">          <span class="hljs-attr">transformCode</span>=<span class="hljs-string">&#123;code</span> =&gt;</span> &#x27;/** @jsx mdx */&#x27; + code&#125;</span><br><span class="language-xml">          scope=&#123;&#123; mdx &#125;&#125;</span><br><span class="language-xml">        &gt;</span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">LivePreview</span> /&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">LiveEditor</span> /&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">LiveError</span> /&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">LiveProvider</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    )<br>  &#125;<br><br>  <span class="hljs-keyword">if</span> (render) &#123;<br>    <span class="hljs-keyword">return</span> (<br>      <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">marginTop:</span> &#x27;<span class="hljs-attr">40px</span>&#x27; &#125;&#125;&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">LiveProvider</span> <span class="hljs-attr">code</span>=<span class="hljs-string">&#123;children&#125;</span>&gt;</span></span><br><span class="language-xml">          <span class="hljs-tag">&lt;<span class="hljs-name">LivePreview</span> /&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">LiveProvider</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>    )<br>  &#125;<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">handleCopy</span> = (<span class="hljs-params">str</span>) =&gt; &#123;<br>    <span class="hljs-keyword">if</span> (str) &#123;<br>      message.<span class="hljs-title function_">success</span>(<span class="hljs-string">&#x27;复制成功！&#x27;</span>);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>      message.<span class="hljs-title function_">warning</span>(<span class="hljs-string">&#x27;复制失败，请手动复制！&#x27;</span>);<br>    &#125;<br>  &#125;;<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">genExtra</span> = (<span class="hljs-params"></span>) =&gt; (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">CopyToClipboard</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">text</span>=<span class="hljs-string">&#123;children&#125;</span> // <span class="hljs-attr">需要复制的文本</span></span></span><br><span class="hljs-tag"><span class="language-xml">      <span class="hljs-attr">onCopy</span>=<span class="hljs-string">&#123;handleCopy&#125;</span></span></span><br><span class="hljs-tag"><span class="language-xml">    &gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Button</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&#x27;link&#x27;</span>&gt;</span>复制代码<span class="hljs-tag">&lt;/<span class="hljs-name">Button</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">CopyToClipboard</span>&gt;</span></span><br><br>  );<br><br>  <span class="hljs-keyword">return</span> (<br>    <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Collapse</span> <span class="hljs-attr">bordered</span>=<span class="hljs-string">&#123;false&#125;</span> <span class="hljs-attr">defaultActiveKey</span>=<span class="hljs-string">&#123;[</span>&#x27;<span class="hljs-attr">1</span>&#x27;]&#125; <span class="hljs-attr">className</span>=<span class="hljs-string">&#x27;doc-custom-collapse&#x27;</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;<span class="hljs-name">Panel</span> <span class="hljs-attr">header</span>=<span class="hljs-string">&#x27;代码部分&#x27;</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-attr">extra</span>=<span class="hljs-string">&#123;genExtra()&#125;</span> <span class="hljs-attr">collapsible</span>=<span class="hljs-string">&#x27;header&#x27;</span>&gt;</span></span><br><span class="language-xml">        <span class="hljs-tag">&lt;<span class="hljs-name">Highlight</span> &#123;<span class="hljs-attr">...defaultProps</span>&#125; <span class="hljs-attr">code</span>=<span class="hljs-string">&#123;children.trim()&#125;</span> <span class="hljs-attr">language</span>=<span class="hljs-string">&#123;language&#125;</span>&gt;</span></span><br><span class="language-xml">          &#123;(&#123; className, style, tokens, getLineProps, getTokenProps &#125;) =&gt; (</span><br><span class="language-xml">            <span class="hljs-tag">&lt;<span class="hljs-name">pre</span> <span class="hljs-attr">className</span>=<span class="hljs-string">&#123;className&#125;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#123;&#123;</span> <span class="hljs-attr">...style</span>, <span class="hljs-attr">padding:</span> &#x27;<span class="hljs-attr">20px</span>&#x27; &#125;&#125;&gt;</span></span><br><span class="language-xml">              &#123;tokens.map((line, i) =&gt; (</span><br><span class="language-xml">                <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&#123;i&#125;</span> &#123;<span class="hljs-attr">...getLineProps</span>(&#123; <span class="hljs-attr">line</span>, <span class="hljs-attr">key:</span> <span class="hljs-attr">i</span> &#125;)&#125;&gt;</span></span><br><span class="language-xml">                  &#123;line.map((token, key) =&gt; (</span><br><span class="language-xml">                    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">key</span>=<span class="hljs-string">&#123;key&#125;</span> &#123;<span class="hljs-attr">...getTokenProps</span>(&#123; <span class="hljs-attr">token</span>, <span class="hljs-attr">key</span> &#125;)&#125; /&gt;</span></span><br><span class="language-xml">                  ))&#125;</span><br><span class="language-xml">                <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">              ))&#125;</span><br><span class="language-xml">            <span class="hljs-tag">&lt;/<span class="hljs-name">pre</span>&gt;</span></span><br><span class="language-xml">          )&#125;</span><br><span class="language-xml">        <span class="hljs-tag">&lt;/<span class="hljs-name">Highlight</span>&gt;</span></span><br><span class="language-xml">      <span class="hljs-tag">&lt;/<span class="hljs-name">Panel</span>&gt;</span></span><br><span class="language-xml">    <span class="hljs-tag">&lt;/<span class="hljs-name">Collapse</span>&gt;</span></span><br>  )<br>&#125;<br></code></pre></td></tr></table></figure>

<p><code>src/doc/pages/components/table/baseDemo/tsx</code>:</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">Table</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@components&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> () =&gt; &#123;<br>  <span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Table</span> /&gt;</span></span><br>&#125;;<br></code></pre></td></tr></table></figure>

<p><code>src/doc/pages/components/table/index/mdx</code>:</p>
<figure class="highlight md"><table><tr><td class="code"><pre><code class="hljs md"><span class="hljs-section">## Table</span><br><br><span class="hljs-section">### 基础使用</span><br><br>import BaseTable from &quot;./baseDemo&quot;;<br><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">BaseTable</span> /&gt;</span></span><br><br><span class="hljs-code">```js</span><br><span class="hljs-code">import &#123; Table &#125; from &quot;@components&quot;;</span><br><span class="hljs-code">import React from &quot;react&quot;;</span><br><span class="hljs-code"></span><br><span class="hljs-code">export default () =&gt; &#123;</span><br><span class="hljs-code">	return &lt;Table /&gt;;</span><br><span class="hljs-code">&#125;;</span><br></code></pre></td></tr></table></figure>

<h3 id="使用ESLint"><a href="#使用ESLint" class="headerlink" title="使用ESLint"></a>使用ESLint</h3><p>安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">npm install eslint --save-dev<br></code></pre></td></tr></table></figure>
<p>配置<code>touch .eslintrc.js</code>：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/* </span><br><span class="hljs-comment"> * &quot;off&quot;或者0，不启用这个规则</span><br><span class="hljs-comment"> * &quot;warn&quot;或者1，出现问题会有警告</span><br><span class="hljs-comment"> * &quot;error&quot;或者2，出现问题会报错</span><br><span class="hljs-comment"> *  */</span><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>    <span class="hljs-string">&quot;env&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;browser&quot;</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-string">&quot;es6&quot;</span>: <span class="hljs-literal">true</span><br>    &#125;,<br>    <span class="hljs-string">&quot;extends&quot;</span>: [<br>        <span class="hljs-string">&quot;eslint:recommended&quot;</span>,<br>        <span class="hljs-string">&quot;plugin:react/recommended&quot;</span>,<br>        <span class="hljs-string">&quot;plugin:@typescript-eslint/eslint-recommended&quot;</span>,<br>        <span class="hljs-string">&#x27;prettier/@typescript-eslint&#x27;</span>,<br>        <span class="hljs-string">&#x27;plugin:prettier/recommended&#x27;</span>,<br>    ],<br>    <span class="hljs-string">&quot;globals&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;Atomics&quot;</span>: <span class="hljs-string">&quot;readonly&quot;</span>,<br>        <span class="hljs-string">&quot;SharedArrayBuffer&quot;</span>: <span class="hljs-string">&quot;readonly&quot;</span><br>    &#125;,<br>    <span class="hljs-string">&quot;parser&quot;</span>: <span class="hljs-string">&quot;@typescript-eslint/parser&quot;</span>,<br>    <span class="hljs-string">&quot;parserOptions&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;ecmaFeatures&quot;</span>: &#123;<br>            <span class="hljs-string">&quot;jsx&quot;</span>: <span class="hljs-literal">true</span><br>        &#125;,<br>        <span class="hljs-string">&quot;ecmaVersion&quot;</span>: <span class="hljs-number">2018</span>,<br>        <span class="hljs-string">&quot;sourceType&quot;</span>: <span class="hljs-string">&quot;module&quot;</span><br>    &#125;,<br>    <span class="hljs-attr">settings</span>: &#123;<br>        <span class="hljs-comment">//自动发现React的版本，从而进行规范react代码</span><br>        <span class="hljs-attr">react</span>: &#123;<br>            <span class="hljs-attr">pragma</span>: <span class="hljs-string">&#x27;React&#x27;</span>,<br>            <span class="hljs-attr">version</span>: <span class="hljs-string">&#x27;detect&#x27;</span><br>        &#125;<br>    &#125;,<br>    <span class="hljs-string">&quot;plugins&quot;</span>: [<br>        <span class="hljs-string">&quot;react&quot;</span>,<br>        <span class="hljs-string">&quot;@typescript-eslint&quot;</span><br>    ],<br>    <span class="hljs-string">&quot;rules&quot;</span>: &#123;<br>        <span class="hljs-string">&quot;no-unused-vars&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//不能有声明后未被使用的变量或参数</span><br>        <span class="hljs-string">&quot;prefer-const&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//必须使用const</span><br>        <span class="hljs-string">&quot;quotes&quot;</span>: [<span class="hljs-number">2</span>, <span class="hljs-string">&quot;single&quot;</span>], <span class="hljs-comment">//单引号</span><br>        <span class="hljs-string">&quot;no-irregular-whitespace&quot;</span>: <span class="hljs-number">2</span>, <span class="hljs-comment">//不规则的空白不允许</span><br>        <span class="hljs-string">&quot;no-trailing-spaces&quot;</span>: <span class="hljs-number">1</span>, <span class="hljs-comment">//一行结束后面有空格就发出警告</span><br>        <span class="hljs-string">&#x27;jsx-quotes&#x27;</span>: [<span class="hljs-number">0</span>, <span class="hljs-string">&quot;prefer-single&quot;</span>], <span class="hljs-comment">//强制在 JSX 属性中一致地使用单引号</span><br>        <span class="hljs-string">&quot;react/no-deprecated&quot;</span>: <span class="hljs-number">1</span>, <span class="hljs-comment">//不使用弃用的方法</span><br>        <span class="hljs-string">&quot;no-unreachable&quot;</span>: <span class="hljs-number">1</span>, <span class="hljs-comment">//不能有无法执行的代码</span><br>        <span class="hljs-string">&quot;react/no-array-index-key&quot;</span>: <span class="hljs-number">2</span>, <span class="hljs-comment">//防止在数组中遍历中使用数组key做索引</span><br>        <span class="hljs-string">&quot;space-before-function-paren&quot;</span>: <span class="hljs-number">0</span>,  <span class="hljs-comment">// 函数定义时括号前面要不要有空格</span><br>        <span class="hljs-string">&quot;eol-last&quot;</span>: <span class="hljs-number">0</span>,  <span class="hljs-comment">// 文件以单一的换行符结束</span><br>        <span class="hljs-string">&quot;no-extra-semi&quot;</span>: <span class="hljs-number">1</span>, <span class="hljs-comment">// 可以多余的冒号</span><br>        <span class="hljs-string">&quot;semi&quot;</span>: <span class="hljs-number">0</span>,  <span class="hljs-comment">// 语句可以不需要分号结尾</span><br>        <span class="hljs-string">&quot;eqeqeq&quot;</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 必须使用全等</span><br>        <span class="hljs-string">&quot;one-var&quot;</span>: <span class="hljs-number">0</span>, <span class="hljs-comment">// 连续声明</span><br>        <span class="hljs-string">&#x27;react/prop-types&#x27;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;react/display-name&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;react/no-unescaped-entities&quot;</span>: <span class="hljs-number">0</span>,<br>        <span class="hljs-string">&quot;no-self-assign&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//不能与自己浅拷贝</span><br>        <span class="hljs-string">&quot;no-empty&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//不能留空</span><br>        <span class="hljs-string">&quot;max-len&quot;</span>: [<span class="hljs-string">&quot;error&quot;</span>, &#123; <span class="hljs-attr">code</span>: <span class="hljs-number">300</span> &#125;], <span class="hljs-comment">//代码过长是否警报</span><br>        <span class="hljs-string">&quot;no-nested-ternary&quot;</span>: <span class="hljs-number">2</span>, <span class="hljs-comment">// 禁止嵌套三元表达式</span><br>        <span class="hljs-string">&#x27;no-compare-neg-zero&#x27;</span>: <span class="hljs-number">2</span>, <span class="hljs-comment">//禁止与 -0 进行比较</span><br>        <span class="hljs-string">&#x27;no-cond-assign&#x27;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//无条件assign</span><br>        <span class="hljs-string">&#x27;no-control-regex&#x27;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//可控正则</span><br>        <span class="hljs-string">&#x27;no-dupe-args&#x27;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//无重复参数</span><br>        <span class="hljs-string">&#x27;no-duplicate-case&#x27;</span>: <span class="hljs-number">2</span>,<br>        <span class="hljs-string">&#x27;no-extra-semi&#x27;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//不能有额外分号</span><br>        <span class="hljs-string">&#x27;no-extra-parens&#x27;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//无外部括号</span><br>        <span class="hljs-string">&#x27;no-unexpected-multiline&#x27;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//没有意外的多行</span><br>        <span class="hljs-string">&#x27;no-else-return&#x27;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//else里面不能有return</span><br>        <span class="hljs-string">&#x27;no-magic-numbers&#x27;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//没有魔术数字</span><br>        <span class="hljs-string">&#x27;no-multi-spaces&#x27;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//不能有多余的空格</span><br>        <span class="hljs-string">&#x27;no-redeclare&#x27;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//不重新声明</span><br>        <span class="hljs-string">&#x27;no-self-compare&#x27;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//没有自我比较</span><br>        <span class="hljs-string">&#x27;no-unmodified-loop-condition&#x27;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//循环总没有为定义的条件</span><br>        <span class="hljs-string">&#x27;camelcase&#x27;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//驼峰变量</span><br>        <span class="hljs-string">&#x27;comma-style&#x27;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//逗号样式</span><br>        <span class="hljs-string">&#x27;key-spacing&#x27;</span>: <span class="hljs-number">2</span>, <span class="hljs-comment">//强制在对象字面量的属性中键和值之间使用一致的间距</span><br>        <span class="hljs-string">&#x27;linebreak-style&#x27;</span>: <span class="hljs-number">2</span>, <span class="hljs-comment">//强制使用一致的换行风格</span><br>        <span class="hljs-string">&#x27;no-compare-neg-zero&#x27;</span>: <span class="hljs-number">2</span>, <span class="hljs-comment">//禁止与 -0 进行比较</span><br>        <span class="hljs-string">&#x27;no-bitwise&#x27;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//没有位运算</span><br>        <span class="hljs-string">&#x27;no-lonely-if&#x27;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//不能有单独的if</span><br>        <span class="hljs-string">&#x27;no-multi-assign&#x27;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//无多重assign</span><br>        <span class="hljs-string">&#x27;no-multiple-empty-lines&#x27;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//没有多的空行</span><br>        <span class="hljs-string">&#x27;semi&#x27;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//分号</span><br>        <span class="hljs-string">&#x27;semi-spacing&#x27;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//分号空格</span><br>        <span class="hljs-string">&#x27;semi-style&#x27;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//style内分号</span><br>        <span class="hljs-string">&#x27;sort-keys&#x27;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//排序数组key值</span><br>        <span class="hljs-string">&#x27;no-confusing-arrow&#x27;</span>: <span class="hljs-number">2</span>,<span class="hljs-comment">//不能有不规范的箭头函数</span><br>        <span class="hljs-string">&quot;no-lone-blocks&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//没有行内块</span><br>        <span class="hljs-string">&quot;no-undef&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//可以使用undefined</span><br>        <span class="hljs-string">&quot;array-bracket-newline&quot;</span>: <span class="hljs-number">0</span>,<span class="hljs-comment">//数组是否可以换行</span><br>        <span class="hljs-string">&quot;prettier/prettier&quot;</span>: [<span class="hljs-string">&quot;error&quot;</span>, &#123; <span class="hljs-attr">singleQuote</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">jsxSingleQuote</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">printWidth</span>: <span class="hljs-number">160</span>, &#125;,]<span class="hljs-comment">//单引号;最大宽度</span><br>    &#125;<br>&#125;;<br></code></pre></td></tr></table></figure>
<p>配置<code>vscode</code>:<br><code>.vscode/settings.json</code>:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;files.eol&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;\n&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;editor.tabSize&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span><br><br>  <span class="hljs-attr">&quot;eslint.format.enable&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-comment">//autoFix默认开启，只需输入字符串数组即可</span><br>  <span class="hljs-attr">&quot;eslint.validate&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">[</span><br>    <span class="hljs-string">&quot;javascript&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;typescript&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;react&quot;</span><span class="hljs-punctuation">,</span><br>    <span class="hljs-string">&quot;html&quot;</span><br>  <span class="hljs-punctuation">]</span><span class="hljs-punctuation">,</span><br><br>  <span class="hljs-attr">&quot;editor.formatOnSave&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;editor.codeActionsOnSave&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;source.fixAll.eslint&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span> <span class="hljs-comment">// 所有插件的所有可自动修复的ESLint错误都将在保存时修复</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;eslint.codeAction.showDocumentation&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;enable&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span> <span class="hljs-comment">// 在快速修复菜单中显示打开的eslint规则文档网页。</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;[typescriptreact]&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;editor.defaultFormatter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;dbaeumer.vscode-eslint&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;[typescript]&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;editor.defaultFormatter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;dbaeumer.vscode-eslint&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;[html]&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;editor.defaultFormatter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;dbaeumer.vscode-eslint&quot;</span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;editor.suggestSelection&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;first&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>react</tag>
      </tags>
  </entry>
  <entry>
    <title>axios请求response为对象或者文件流的处理方式</title>
    <url>/2023/07/25/studyNotes/2023-07-25-axios%E8%AF%B7%E6%B1%82response%E4%B8%BA%E5%AF%B9%E8%B1%A1%E6%88%96%E8%80%85%E6%96%87%E4%BB%B6%E6%B5%81%E7%9A%84%E5%A4%84%E7%90%86%E6%96%B9%E5%BC%8F/</url>
    <content><![CDATA[<figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> res = <span class="hljs-keyword">await</span> <span class="hljs-title class_">Axios</span>.<span class="hljs-title function_">get</span>(url, &#123;<br>	params,<br>	<span class="hljs-attr">responseType</span>: <span class="hljs-string">&quot;blob&quot;</span>,<br>&#125;);<br><span class="hljs-comment">// 如果response为json串</span><br><span class="hljs-keyword">if</span> (res.<span class="hljs-property">data</span>.<span class="hljs-property">type</span> === <span class="hljs-string">&quot;application/json&quot;</span>) &#123;<br>	<span class="hljs-keyword">const</span> reader = <span class="hljs-keyword">new</span> <span class="hljs-title class_">FileReader</span>();<br>	reader.<span class="hljs-title function_">readAsText</span>(res.<span class="hljs-property">data</span>, <span class="hljs-string">&quot;utf-8&quot;</span>); <span class="hljs-comment">// 设置读取的数据以及返回的数据类型为utf-8</span><br>	reader.<span class="hljs-title function_">addEventListener</span>(<span class="hljs-string">&quot;loadend&quot;</span>, <span class="hljs-keyword">function</span> (<span class="hljs-params"></span>) &#123;<br>		<span class="hljs-keyword">const</span> json = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(reader.<span class="hljs-property">result</span> <span class="hljs-keyword">as</span> <span class="hljs-built_in">any</span>); <span class="hljs-comment">// 返回的数据</span><br>		<span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(json);<br>	&#125;);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br>	<span class="hljs-keyword">const</span> fileName = <span class="hljs-string">`需要下载的文件名`</span>;<br>	<span class="hljs-keyword">const</span> blob = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Blob</span>([res.<span class="hljs-property">data</span>], &#123; <span class="hljs-attr">type</span>: <span class="hljs-string">&quot;application/zip&quot;</span> &#125;); <span class="hljs-comment">// 需要下载的文件类型</span><br>	<span class="hljs-keyword">if</span> (<span class="hljs-variable language_">window</span>.<span class="hljs-property">navigator</span> &amp;&amp; <span class="hljs-variable language_">window</span>.<span class="hljs-property">navigator</span>.<span class="hljs-property">msSaveOrOpenBlob</span>) &#123;<br>		<span class="hljs-variable language_">window</span>.<span class="hljs-property">navigator</span>.<span class="hljs-title function_">msSaveOrOpenBlob</span>(blob, fileName);<br>	&#125; <span class="hljs-keyword">else</span> &#123;<br>		<span class="hljs-keyword">const</span> downloadElement = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&quot;a&quot;</span>);<br>		<span class="hljs-keyword">const</span> href = <span class="hljs-variable language_">window</span>.<span class="hljs-property">URL</span>.<span class="hljs-title function_">createObjectURL</span>(blob); <span class="hljs-comment">//创建下载的链接</span><br>		downloadElement.<span class="hljs-property">href</span> = href;<br>		downloadElement.<span class="hljs-property">download</span> = fileName; <span class="hljs-comment">//下载后文件名</span><br>		<span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(downloadElement);<br>		downloadElement.<span class="hljs-title function_">click</span>(); <span class="hljs-comment">//点击下载</span><br>		<span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">removeChild</span>(downloadElement); <span class="hljs-comment">//下载完成移除元素</span><br>		<span class="hljs-variable language_">window</span>.<span class="hljs-property">URL</span>.<span class="hljs-title function_">revokeObjectURL</span>(href); <span class="hljs-comment">//释放掉blob对象</span><br>	&#125;<br>&#125;<br></code></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>axios</tag>
        <tag>文件流</tag>
      </tags>
  </entry>
  <entry>
    <title>react自定义hooks浅替换hoc实现预处理</title>
    <url>/2023/07/26/studyNotes/2023-07-26-react%E8%87%AA%E5%AE%9A%E4%B9%89hooks%E6%B5%85%E6%9B%BF%E6%8D%A2hoc%E5%AE%9E%E7%8E%B0%E9%A2%84%E5%A4%84%E7%90%86/</url>
    <content><![CDATA[<p>自定义hooks: </p>
<figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; useLocation &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react-router&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">MetaForm</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../metaRender/interface&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; useEffect, useState &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; getCommonHints, getMetaData, getPageName &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/actions&#x27;</span>;<br><span class="hljs-keyword">import</span> &#123; <span class="hljs-title class_">ErrorBlock</span>, <span class="hljs-title class_">NoticeBar</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;antd-mobile&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">React</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;react&#x27;</span>;<br><span class="hljs-keyword">import</span> <span class="hljs-title class_">Spin</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;../spin&#x27;</span>;<br><span class="hljs-keyword">import</span> _ <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;lodash&#x27;</span>;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">type</span> <span class="hljs-title class_">DocProps</span> = &#123;<br>  <span class="hljs-attr">meta</span>: &#123;<br>    <span class="hljs-attr">defaultValue</span>: <span class="hljs-built_in">any</span>;<br>    <span class="hljs-attr">metaData</span>: <span class="hljs-title class_">MetaForm</span>;<br>  &#125;;<br>  <span class="hljs-attr">pageName</span>: <span class="hljs-built_in">any</span>;<br>  <span class="hljs-attr">warningTip</span>: <span class="hljs-built_in">any</span>;<br>  <span class="hljs-attr">sourceProps</span>: <span class="hljs-built_in">any</span>;<br>&#125;;<br><br><span class="hljs-keyword">const</span> <span class="hljs-title function_">useDoc</span> = (<span class="hljs-params"></span>) =&gt; &#123;<br>  <span class="hljs-keyword">const</span> location = <span class="hljs-title function_">useLocation</span>();<br>  <span class="hljs-keyword">const</span> [loading, setLoading] = useState&lt;<span class="hljs-built_in">boolean</span>&gt;(<span class="hljs-literal">true</span>);<br>  <span class="hljs-keyword">const</span> [props, setProps] = useState&lt;<span class="hljs-title class_">DocProps</span>&gt;(&#123;<br>    <span class="hljs-attr">meta</span>: &#123;<br>      <span class="hljs-attr">metaData</span>: &#123;&#125;,<br>      <span class="hljs-attr">defaultValue</span>: &#123;&#125;,<br>    &#125;,<br>    <span class="hljs-attr">sourceProps</span>: &#123;&#125;,<br>  &#125; <span class="hljs-keyword">as</span> <span class="hljs-title class_">DocProps</span>);<br><br>  <span class="hljs-title function_">useEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-title function_">init</span>();<br>  &#125;, []);<br><br>  <span class="hljs-keyword">const</span> <span class="hljs-title function_">init</span> = <span class="hljs-keyword">async</span> (<span class="hljs-params"></span>) =&gt; &#123;<br>    <span class="hljs-keyword">const</span> &#123; state &#125; = location;<br>    <span class="hljs-keyword">const</span> &#123; id, billTypeCode = <span class="hljs-string">&#x27;&#x27;</span>, templateCode = <span class="hljs-string">&#x27;&#x27;</span>, orgId &#125; = state;<br>    <span class="hljs-keyword">const</span> pkey = <span class="hljs-string">`<span class="hljs-subst">$&#123;billTypeCode&#125;</span><span class="hljs-subst">$&#123;templateCode&#125;</span>`</span>;<br>    <span class="hljs-keyword">try</span> &#123;<br>      <span class="hljs-keyword">const</span> metaData = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getMetaData</span>(&#123;<br>        <span class="hljs-attr">keyId</span>: id,<br>        pkey,<br>        orgId,<br>      &#125;);<br>      <span class="hljs-keyword">const</span> pageName = <span class="hljs-keyword">await</span> <span class="hljs-title function_">getPageName</span>(&#123; <span class="hljs-attr">templateCode</span>: pkey &#125;);<br>      <span class="hljs-keyword">const</span> commonHints = id &amp;&amp; (<span class="hljs-keyword">await</span> <span class="hljs-title function_">getCommonHints</span>(id, billTypeCode)).<span class="hljs-property">result</span>;<br>      <span class="hljs-title function_">setProps</span>(&#123;<br>        <span class="hljs-attr">meta</span>: &#123;<br>          <span class="hljs-attr">defaultValue</span>: metaData.<span class="hljs-property">attribute</span>?.<span class="hljs-property">defaultValue</span> || &#123;&#125;,<br>          <span class="hljs-attr">metaData</span>: metaData.<span class="hljs-property">result</span>,<br>        &#125;,<br>        <span class="hljs-attr">pageName</span>: pageName.<span class="hljs-property">result</span>,<br>        <span class="hljs-attr">warningTip</span>: commonHints &amp;&amp; <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">NoticeBar</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&#123;commonHints.result&#125;</span> <span class="hljs-attr">color</span>=<span class="hljs-string">&#x27;alert&#x27;</span> /&gt;</span></span>,<br>        <span class="hljs-attr">sourceProps</span>: state,<br>      &#125;);<br>      <span class="hljs-title function_">setLoading</span>(<span class="hljs-literal">false</span>);<br>    &#125; <span class="hljs-keyword">catch</span> (error) &#123;<br>      <span class="hljs-title function_">setLoading</span>(<span class="hljs-literal">false</span>);<br>    &#125;<br>  &#125;;<br><br>  <span class="hljs-keyword">let</span> <span class="hljs-attr">loadNode</span>: <span class="hljs-built_in">any</span> = <span class="hljs-literal">null</span>;<br>  <span class="hljs-keyword">if</span> (loading) &#123;<br>    loadNode = <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">Spin</span> <span class="hljs-attr">spinning</span>=<span class="hljs-string">&#123;loading&#125;</span> <span class="hljs-attr">loadText</span>=<span class="hljs-string">&#x27;元数据加载中...&#x27;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">Spin</span>&gt;</span></span>;<br>  &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (_.<span class="hljs-title function_">isEmpty</span>(props)) &#123;<br>    loadNode = <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">ErrorBlock</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&#x27;元数据不存在或者配置错误&#x27;</span> <span class="hljs-attr">description</span>=<span class="hljs-string">&#x27;请检查元数据配置&#x27;</span> <span class="hljs-attr">fullPage</span> /&gt;</span></span>;<br>  &#125; <span class="hljs-keyword">else</span> &#123;<br>    loadNode = <span class="hljs-literal">null</span>;<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> &#123; ...props, loadNode &#125;;<br>&#125;;<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> useDoc;<br><br></code></pre></td></tr></table></figure>

<p>使用: </p>
<blockquote>
<p>tips: 要确保所有的return操作在useEffect等hooks之后，否则会报错: 两次渲染间加载了额外的hooks</p>
</blockquote>
<figure class="highlight ts"><table><tr><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">const</span> <span class="hljs-title class_">Index</span>: <span class="hljs-title class_">React</span>.<span class="hljs-property">FC</span>&lt;<span class="hljs-built_in">any</span>&gt; = <span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">const</span> &#123; loadNode, ...props &#125; = <span class="hljs-title function_">useDoc</span>();<br><br>  <span class="hljs-keyword">if</span> (loadNode) &#123;<br>    <span class="hljs-keyword">return</span> loadNode;<br>  &#125;<br><br>  <span class="hljs-keyword">return</span> <span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span></span><br><span class="language-xml">    组件内容</span><br><span class="language-xml">  <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span></span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习笔记</category>
      </categories>
      <tags>
        <tag>react</tag>
        <tag>hooks</tag>
        <tag>hoc</tag>
        <tag>预处理</tag>
      </tags>
  </entry>
</search>
